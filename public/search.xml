<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2018 年阅读清单</title>
    <url>/2106794902/</url>
    <content><![CDATA[<h1 id="读过的书："><a href="#读过的书：" class="headerlink" title="读过的书："></a>读过的书：</h1><h3 id="技术类"><a href="#技术类" class="headerlink" title="技术类"></a>技术类</h3><ul>
<li>《JavaScript Dom编程艺术》</li>
<li>《Java核心技术 卷一》</li>
<li>《计算机是怎样跑起来的》</li>
<li>《跟阿铭学Linux》</li>
<li>《Sql必知必会》</li>
<li>《算法图解》</li>
</ul>
<h3 id="文学类"><a href="#文学类" class="headerlink" title="文学类"></a>文学类</h3><ul>
<li>《黑客与画家》</li>
</ul>
<h1 id="正在读的书："><a href="#正在读的书：" class="headerlink" title="正在读的书："></a>正在读的书：</h1><h3 id="技术类："><a href="#技术类：" class="headerlink" title="技术类："></a>技术类：</h3><ul>
<li>《程序员面试金典》</li>
<li>《Java编程思想》</li>
<li>《算法》</li>
<li>《精通Spring 4.x 企业应用开发实战》</li>
<li>《Linux命令行与shell脚本编程大全》</li>
<li>《Merriam-Webster’s Vocabulary Builder》</li>
</ul>
<h3 id="文学类："><a href="#文学类：" class="headerlink" title="文学类："></a>文学类：</h3><ul>
<li>《围城》</li>
<li>《堂吉诃德》</li>
</ul>
<h1 id="计划读的书："><a href="#计划读的书：" class="headerlink" title="计划读的书："></a>计划读的书：</h1><h3 id="技术类：-1"><a href="#技术类：-1" class="headerlink" title="技术类："></a>技术类：</h3><ul>
<li>《剑指Offer》</li>
<li>《Mysql必知必会》</li>
<li>《程序是怎样跑起来的》</li>
<li>《深入理解Java虚拟机》</li>
<li>《图解HTTP》</li>
<li>《图解Java多线程设计模式》</li>
<li>《图解设计模式》</li>
<li>《Structure and Interpretation of Computer Programs》</li>
<li>《Clean Code》</li>
<li>《The pragmatic programmer》</li>
<li>《Land of Lisp》</li>
<li>《Common Lisp》</li>
</ul>
<h3 id="文学类：-1"><a href="#文学类：-1" class="headerlink" title="文学类："></a>文学类：</h3><ul>
<li>《时间简史》</li>
<li>《小小小小的火》</li>
</ul>
<p>加油！</p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>清单</tag>
      </tags>
  </entry>
  <entry>
    <title>Alfred Workflow 时间转换</title>
    <url>/393446932/</url>
    <content><![CDATA[<h1 id="创建-Workflow"><a href="#创建-Workflow" class="headerlink" title="创建 Workflow"></a>创建 Workflow</h1><p>参考教程：<a href="https://sspai.com/post/61754">https://sspai.com/post/61754</a> 。</p>
<h1 id="注意：如果使用-Python3"><a href="#注意：如果使用-Python3" class="headerlink" title="注意：如果使用 Python3"></a>注意：如果使用 Python3</h1><p>需要使用此仓库的 workflow 文件夹内容：<a href="https://github.com/NorthIsUp/alfred-workflow-py3%E3%80%82">https://github.com/NorthIsUp/alfred-workflow-py3。</a></p>
<h1 id="注意：默认时区为当地时区"><a href="#注意：默认时区为当地时区" class="headerlink" title="注意：默认时区为当地时区"></a>注意：默认时区为当地时区</h1><p>如果需要 UTC 时间，请手动将 timestamp.py 中 第 14 行的 <code>time.localtime(ts)</code> 修改为 <code>time.gmtime(ts)</code> 。</p>
<h1 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h1><p><img src="../images/TimeConvert.png" alt="TimeConvert"></p>
<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/sakiila/minipy/tree/main/AlfredWorkflow">https://github.com/sakiila/minipy/tree/main/AlfredWorkflow</a></p>
<p>参考教程：<br><a href="https://pythonmana.com/2022/02/202202252149470874.html">使用python实现一个日期和时间戳互转的Alfred workflow</a></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>Alfred</tag>
        <tag>实战</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome 快捷键</title>
    <url>/763296652/</url>
    <content><![CDATA[<h1 id="记录几个比较常用的快捷键"><a href="#记录几个比较常用的快捷键" class="headerlink" title="记录几个比较常用的快捷键"></a>记录几个比较常用的快捷键</h1><ul>
<li>打开新窗口    Ctrl + n</li>
<li>打开新的标签页，并跳转到该标签页    Ctrl + t</li>
<li>重新打开最后关闭的标签页，并跳转到该标签页    Ctrl + Shift + t</li>
<li>跳转到下一个打开的标签页    Ctrl + Tab 或 Ctrl + PgDn</li>
<li>跳转到上一个打开的标签页    Ctrl + Shift + Tab 或 Ctrl + PgUp</li>
<li>在当前标签页中打开主页    Alt + Home</li>
<li>关闭当前标签页    Ctrl + w 或 Ctrl + F4</li>
<li>关闭当前窗口    Alt + F4</li>
<li>退出 Google Chrome    Ctrl + Shift + q </li>
<li>打开“开发者工具”    Ctrl + Shift + j 或 F12</li>
<li>跳转到地址栏    Ctrl + l、Alt + d 或 F6 </li>
<li>重新加载当前网页    F5 或 Ctrl + r</li>
<li>重新加载当前网页（忽略缓存的内容）    Shift + F5 或 Ctrl + Shift + r</li>
</ul>
<p>原网址：<br><a href="https://support.google.com/chrome/answer/157179?hl=zh-Hans">https://support.google.com/chrome/answer/157179?hl=zh-Hans</a></p>
]]></content>
      <categories>
        <category>收集</category>
      </categories>
      <tags>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS 汇总</title>
    <url>/569693028/</url>
    <content><![CDATA[<p>114:<br>114.114.114.114 114.114.115.115 普通用户使用<br>114.114.114.119 114.114.115.119 拦截钓鱼病毒木马网站<br>114.114.114.110 114.114.115.110 拦截色情网站</p>
<p>Google Public DNS：<br>8.8.8.8<br>8.8.4.4<br>2001:4860:4860::8888<br>2001:4860:4860::8844</p>
<p>OpenDNS:<br>208.67.222.222<br>208.67.220.220</p>
<p>OpenNIC:<br>128.199.248.105<br>106.186.17.181</p>
<p>V2EX DNS:<br>199.91.73.222<br>178.79.131.110</p>
<p>giga.net.tw:<br>203.133.1.6<br>203.133.1.7<br>203.133.1.8</p>
<p>阿里巴巴 DNS:<br>223.5.5.5<br>223.6.6.6</p>
<p>Urns – 具备抗污染/具备科学网<br>218.59.181.182<br>115.159.157.26<br>115.159.158.38</p>
<p>PandaDNS – 具备抗污染/具备科学网<br>182.254.158.191<br>120.27.30.176</p>
<p>OneDNS – 具备抗污染/广告/加速<br>南方首选:112.124.47.27<br>北方首选:114.215.126.16﻿</p>
<p>科学上网：<br>123.207.137.88</p>
]]></content>
      <categories>
        <category>收集</category>
      </categories>
      <tags>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>Emacs 快速简明指南</title>
    <url>/1446338271/</url>
    <content><![CDATA[<p>简单整理了下 Emacs 指令，以备查阅。</p>
<p>Emacs 键盘命令通常包含 CONTROL 键（有时候以 CTRL 或 CTL 来标示）和 META 键（有时候用 EDIT 或 ALT 来标示）。为了避免每次都要写出全名，我们 约定使用下述缩写：</p>
<p>C-<chr>  表示当输入字符 <chr> 时按住 CONTROL 键。<br>         因此 C-f 就表示：按住 CONTROL 键再输入 f。</p>
<p>M-<chr>  表示当输入字符 <chr> 时按住 META（或 EDIT 或 ALT）键。<br>         如果你的键盘上没有 META 、EDIT 或 ALT 键，用下述方法也等效：<br>         先按一下 ESC 键然后放开，再输入 <chr>。我们用 <ESC> 来表示<br>         ESC 键。</p>
<p>重要提示：要退出 Emacs，请用 C-x C-c（两个连续的组合键）。 要退出一个正在运行中的命令，请用 C-g。 </p>
<h1 id="1-小结（SUMMARY）"><a href="#1-小结（SUMMARY）" class="headerlink" title="1 小结（SUMMARY）"></a>1 小结（SUMMARY）</h1><p>以下命令在翻页浏览时相当有用：</p>
<p><strong>C-v     向前移动一屏<br>M-v     向后移动一屏<br>C-l     重绘屏幕，并将光标所在行置于屏幕的中央<br>        （注意是 CONTROL-L，不是 CONTROL-1）</strong></p>
<blockquote>
<p>找到光标，留意其附近的文字，然后输入 C-l。<br>找找光标在哪里，你会发现其附近的文字与之前相同，位置却变为屏幕的中心。 如果你再次输入 C-l ，附近的文字将移动到屏幕的顶端。再次输入 C-l ， 文字将移动到底端。</p>
</blockquote>
<p>如果你的键盘上有 PageUp 和 PageDn，也可以用这两个键来滚屏。不过使用 C-v 和 M-v 的效率要更高一些。</p>
<h1 id="2-基本的光标控制（BASIC-CURSOR-CONTROL）"><a href="#2-基本的光标控制（BASIC-CURSOR-CONTROL）" class="headerlink" title="2 基本的光标控制（BASIC CURSOR CONTROL）"></a>2 基本的光标控制（BASIC CURSOR CONTROL）</h1><p>整屏的移动很有用，但是如何在文字中精确定位呢？</p>
<p>有几种方式可以选择。用方向键当然可以，不过更有效率的方法是保持双手位于 主键盘区，然后使用 C-p 、 C-b 、 C-f 和 C-n 这四个命令。它们的功能和方 向键是一样的，如下图所示:</p>
<pre><code>                         上一行 C-p
                              :
                              :
        向左移 C-b .... 目前光标位置 .... 向右移 C-f
                              :
                              :
                         下一行 C-n
</code></pre>
<blockquote>
<p>用 C-n 或 C-p 将光标移到上图的中央。<br>  按 C-l，整幅图会被显示在屏幕的中央。<br>“P N B F” 四个字母分别代表了四个词，用这四个词记忆这些组合键会更容易： P 代表 previous（上一行），N 代表 next（下一行），B 代表 backward（回 退），而 F 则代表 forward（前进）。这些组合键今后将与你形影不离。</p>
</blockquote>
<p>每行文字都以一个 “换行符” 结束，“换行符”把行与行区分开来。（通常情况下， 一个文件的最后一行会有一个换行符，但是 Emacs 不强制要求这一点。）</p>
<blockquote>
<p>在一行的行头输入 C-b。<br>光标应该会移动到前一行的行尾，因为光标在回退过程中越过了换行符。</p>
</blockquote>
<p>同样 C-f 也可以像 C-b 一样越过换行符。</p>
<blockquote>
<p>连按几次 C-b，感受一下光标的移动。<br>然后按几次 C-f 回到本行的行尾。 再按一次 C-f，光标会移动到下一行。</p>
</blockquote>
<p>当你移动光标穿越屏幕的上下边界时，在边界外的文字会移动到屏幕内，这称为 “滚动”（scrolling）。滚动使得光标可以被移动到文字中的任何位置，并且还 不会让光标跑到屏幕外边去。</p>
<blockquote>
<p>用 C-n 将光标下移，一直越过屏幕边界，同时观察发生了什么变化。<br>如果你嫌一个字符一个字符地挪光标太慢，你还可以一个词一个词地跳。M-f (META-f) 可以将光标往前移动一个词，而 M-b 则是往后移。【这里的 “词” 指 英文单词，对中文来说，则是指移动到下一个标点符号。】</p>
</blockquote>
<blockquote>
<p>试试 M-f 和 M-b。<br>如果光标停在一个词的中间，M-f 会移动到这个词的末尾。如果光标处于词与词 之间的空白处，M-f 会移动到下一个词的末尾。M-b 的功能类似，只是方向相反。</p>
</blockquote>
<blockquote>
<p>按几次 M-f 和 M-b，中间夹杂一些 C-f 和 C-b。<br>你可以观察到 M-f 和 M-b 在不同位置上所表现出来的不同行为。</p>
</blockquote>
<p>请注意 C-f 、C-b 和 M-f 、M-b 两对之间的类比关系。通常的惯例是：META 系 列组合键用来操作 “由语言定义的单位（比如词、句子、段落）”，而 CONTROL 系列组合键用来操作 “与语言无关的基本单位（比如字符、行等等）”。</p>
<p>类似的惯例在 “行” 与“句子”之间也同样适用：C-a 和 C-e 可以将光标移动到 “一行”的头部和尾部；而 M-a 和 M-e 则将光标移动到 “一句” 的头部和尾部。</p>
<blockquote>
<p>按两次 C-a，再按两次 C-e。<br>按两次 M-a，再按两次 M-e。</p>
</blockquote>
<p>想一想为什么重复的 C-a 命令会没有作用，而重复的 M-a 命令则会让光标不断 地回退到上一个句子。虽然这个类比规律并不严格，但是很自然。</p>
<p>光标停留的位置也可以称作 “点位”（point）。或者干脆说，光标指示出了屏幕 上“点位” 在文本中的位置。</p>
<p>这里对简单的光标移动命令做一个总结，其中也包括了整词和整句的移动：</p>
<p><strong>C-f     向右移动一个字符<br>C-b     向左移动一个字符</strong></p>
<p><strong>M-f     向右移动一个词【对中文是移动到下一个标点符号】<br>M-b     向左移动一个词【对中文是移动到上一个标点符号】</strong></p>
<p><strong>C-n     移动到下一行<br>C-p     移动到上一行</strong></p>
<p><strong>C-a     移动到行首<br>C-e     移动到行尾</strong></p>
<p><strong>M-a     移动到句首<br>M-e     移动到句尾</strong></p>
<blockquote>
<p>把上面所有的命令都练习几次，这些可都是最常用的命令。<br>这里还要介绍两个重要的光标移动命令：M-&lt;（META 小于号）可以将光标移动到 所有文字的最开头；M-&gt; （META 大于号）可以将光标移动到所有文字的最末尾。</p>
</blockquote>
<p>注意，在大部分键盘上，小于号（&lt;）需要用上档键（Shift）来输入，所以在这 些键盘上你应该用 Shift 键来输入 M-&lt;，如果不按 Shift 键，你输入的会是 M-comma（META 逗号）。</p>
<p>大部分的 Emacs 命令接受数字参数，并且对于多数命令而言，这些数字参数的作 用是指定命令的重复次数。为一个命令指定数字参数（也就是重复次数）的方法 是：先输入 C-u，然后输入数字作为参数，最后再输入命令。如果你有 META （或 EDIT 或 ALT）键，那么还有另一种办法：按住 META 键不放，然后输入数字。不 过我们还是建议你用 C-u，因为它在任何终端机上都能用。这种数字参数也称为 “前缀参数”，意思是说这个参数是先于使用它的命令而输入的。</p>
<p>举例来说， C-u 8 C-f 会向前移动 8 个字符。</p>
<blockquote>
<p>为 C-n 或者 C-p 指定一个数字参数，这样你可以只用一个命令就把光标移动<br>到本行的附近。</p>
</blockquote>
<p>虽然大部分命令把数字参数解释为其重复次数，但是也有些命令例外，它们将数 字参数另做它用。比如有些命令（我们目前还没学到）仅仅将前缀参数作为一个 标志――只要给出有一个前缀参数，不管其值为何，它都会改变命令的功能。</p>
<p>而 C-v 和 M-v 则属于另一种类型的例外。当给定一个参数时，它们将滚动你指 定的 “行数”，而不是 “屏数”。举例来说，C-u 8 C-v 将文本向下滚动 8 行。</p>
<blockquote>
<p>现在试试看，输入 C-u 8 C-v。<br>这个命令应该已经将文字向上滚动了 8 行。如果你想将它再次地向下滚动，你可 以给定一个参数然后执行 M-v。</p>
</blockquote>
<p>如果你正在使用图形界面，比如 X 或者微软的 Windows，那么在 Emacs 窗 口的一边应该有一个长方形的区域叫 “滚动条”。你可以用鼠标操纵滚动条来滚动 文字。</p>
<p>如果你的鼠标有滚轮的话，你也可以使用滚轮来滚动。</p>
<h1 id="3-如果-EMACS-失去响应（IF-EMACS-STOPS-RESPONDING）"><a href="#3-如果-EMACS-失去响应（IF-EMACS-STOPS-RESPONDING）" class="headerlink" title="3 如果 EMACS 失去响应（IF EMACS STOPS RESPONDING）"></a>3 如果 EMACS 失去响应（IF EMACS STOPS RESPONDING）</h1><p>如果 Emacs 对你的命令失去响应，你可以用 C-g 来安全地终止这条命令。C-g 也可以终止一条执行过久的命令。</p>
<p><strong>C-g 还可以取消数字参数和只输入到一半的命令。</strong></p>
<blockquote>
<p>输入 C-u 100 设定一个值为 100 的数字参数，然后按 C-g。<br>现在再按 C-f，光标应该只会移动一个字符，因为你已经用 C-g 取消了参数。</p>
</blockquote>
<p>如果你不小心按了一下 <ESC>，你也可以用 C-g 来取消它。 【这个说法似乎有问题，因为按照这个按键顺序输入的应该是 C-M-g。 取消 <ESC> 的正确做法是再连按两次 <ESC>。】</p>
<h1 id="4-被禁用的命令（DISABLED-COMMANDS）"><a href="#4-被禁用的命令（DISABLED-COMMANDS）" class="headerlink" title="4 被禁用的命令（DISABLED COMMANDS）"></a>4 被禁用的命令（DISABLED COMMANDS）</h1><p>有一些 Emacs 命令被 “禁用” 了，以避免初学者在不了解其确切功能的情况下误 用而造成麻烦。</p>
<p>如果你用到了一个被禁用的命令，Emacs 会显示一个提示消息，告诉你这个命令 到底是干什么的，询问你是否要继续，并在得到你的肯定之后再执行这命令。</p>
<p>如果你真的想用这条命令，在 Emacs 询问你的时候应该按空格。一般来说，如果 你不想用，就按 “n”。</p>
<blockquote>
<p>试试 C-x C-l （这是一个被禁用的命令）<br>然后用 n 来回答询问。</p>
</blockquote>
<h1 id="5-窗格（WINDOWS）"><a href="#5-窗格（WINDOWS）" class="headerlink" title="5 窗格（WINDOWS）"></a>5 窗格（WINDOWS）</h1><p>Emacs 可以有多个 “窗格”，每个窗格显示不同的文字。后面会介绍怎么对付多个窗格，现在我们先学会如何关掉多余的窗格。其实也很简单：</p>
<p><strong>C-x 1 只保留一个窗格（也就是关掉其它所有窗格）。</strong></p>
<p>也就是先按 CONTROL-x 然后再按 1。C-x 1 会保留光标所在的窗格，并将其扩大到整个屏幕，同时关掉所有其它的窗格。</p>
<blockquote>
<p>把光标移到本行然后输入 C-u 0 C-l。<br>输入 C-h k C-f。观察当一个新窗格出现时当前窗格（用来显示C-f 命令的文档）是如何缩小的。</p>
</blockquote>
<blockquote>
<p>输入 C-x 1 关掉文档窗格。<br>有一系列命令是以 CONTROL-x 开始的，这些命令许多都跟 “窗格、文件、缓冲区 【缓冲区（buffer）会在后文详细介绍】” 等等诸如此类的东西有关，其中有些 命令可能包含了 2 个、3 个或者 4 个字符。</p>
</blockquote>
<h1 id="6-插入与删除（INSERTING-AND-DELETING）"><a href="#6-插入与删除（INSERTING-AND-DELETING）" class="headerlink" title="6 插入与删除（INSERTING AND DELETING）"></a>6 插入与删除（INSERTING AND DELETING）</h1><p>插入文字很简单，直接敲键盘就可以了。普通的字符，比如 A、7、* 等等，会 随着你的输入而插入。要插入一个换行符，输入 <Return>（这个键在键盘上有 时会被标注成 “Enter”）。</p>
<p>你可以用 <DEL> 来删除光标左边的字符，这个键通常被标注为 “Backspace”――跟 你在 Emacs 之外的用法应该一样，删除最后一个输入的字符。</p>
<p>你的键盘上可能有另外一个键，标注着 <Delete>，但那个不是我们所说的 <DEL>。</p>
<p>如果一行文字很长、超出了窗格的宽度，显示不下的部分会在紧邻的下一行继续 显示。如果你使用的是图形界面，文本区域两边的狭窄区域（左右 “边缘”）会出 现小小的转弯箭头，表明这是某一行的接续显示。如果你使用的是文本终端，接 续显示由屏幕最右边一列的一个反斜线来表示。</p>
<p>好，现在你应该已经掌握了最基本的的文本插入和修改功能，其实删除还可以 “以词为单位”进行，下面是一个关于 “删除” 操作的小结：</p>
<p><strong><DEL>        删除光标前的一个字符<br>C-d          删除光标后的一个字符</strong></p>
<p><strong>M-<DEL>      移除光标前的一个词<br>M-d          移除光标后的一个词</strong></p>
<p><strong>C-k          移除从光标到“行尾”间的字符<br>M-k          移除从光标到“句尾”间的字符</strong><br>【可能你已经注意到了 “删除（delete）” 和“移除（kill）”的用词区别，后文会有详细说明。】</p>
<p>注意 “<DEL> 和 C-d” 还有 “M-<DEL> 和 M-d” 是根据前述惯例从 C-f 和 M-f 衍生 出来的（其实 &lt; DEL &gt; 不是控制字符，我们先忽略这一点）。C-k 和 M-k 的关系在 某种程度上与 C-e 和 M-e 一样――如果把 “一行” 和“一句”作一个类比的话。</p>
<p>你也可以用一种通用的办法来移除缓冲区里的任何一部分：首先把光标移动到你 想要移除的区域的一端，然后按 C-<SPC>（<SPC > 指空格）【注意，C-<SPC> 往 往被中文用户设定成输入法热键，如果这样，C-<SPC> 就被系统拦截而无法传递 给 Emacs 了，在这种情况下可以使用 C-@。】，然后将光标移动到你准备移除的 文字的另一端。这个时候， Emacs 会高亮光标和你按下 C-<SPC> 之间的文本。 最后，按下 C-w 。这样就可以把位于这两点之间的所有文字移除了。</p>
<blockquote>
<p>移动光标到上一段开头的“你”字。<br>输入 C-<SPC> 。Emacs 应该会在屏幕的下方显示一个“Mark set”的消息。<br>移动光标到第二行中的“端”字。<br>输入 C-w，从“你”开始到“端”之前的文字被全部移除。</p>
</blockquote>
<p>注意,“移除（kill）”和 “删除（delete）” 的不同在于被移除的东西可以被重新 插入（在任何位置），而被删除的就不能使用相同的方法重新插入了（不过可以 通过撤销一个删除命令来做到，后文会提到）。【实际上，移除掉的东西虽然看 起来 “消失” 了，但实际上被 Emacs 记录了下来，因此还可以找回来；而删除掉 的东西虽然也可能还在内存里，但是已经被 Emacs“抛弃”了，所以就找不回来 了。】重新插入被移除的文字称为“召回（yank）”。一般而言，那些可能消除很 多文字的命令会把消除掉的文字记录下来（它们被设定成了“可召回”），而那些 只消除一个字符或者只消除空白的命令就不会记录被消除的内容（自然你也就无 法召回了）。</p>
<blockquote>
<p>移动光标到一非空白行的行头，然后输入 C-k 移除那一行上的文字。<br>再次 C-k，你可以看到它移除了跟在那一行后面的换行符。</p>
</blockquote>
<p>注意，单独的 C-k 会把一行的内容移除，而第二个 C-k 则会移除换行符，并使 其后所有的行都向上移动。C-k 处理数字参数的方式很特别，它会把参数指定的 那么多行连同其后的换行符一起移除，而不仅仅是重复 C-k 而已。比如 C-u 2 C-k 会把两行以及它们的换行符移除；而如果只是输入 C-k 两次显然不是这个结果。</p>
<p>重新插入被移除的文字恢复的动作称为 “召回（yanking）”。（就好像把别人从你身边 移走的东西又猛力地拉回来。）你可以在你删除文字的地方召回，也可以在别的 地方召回，还可以多次召回同样的文字以得到它的多个拷贝。很多其它的编辑器 把移除和召回叫做“剪切” 和“粘贴” （详情可见 Emacs 使用手册里的术语表）。</p>
<p>召回的命令是 C-y。它会在光标所在处插入你最后移除的文字。</p>
<p>C-y 可以召回最近一次移除的内容，那如何召回前几次移除的内容呢？它们当然 没有丢，你可以用 M-y 来召回它们。在用 C-y 召回最近移除的文字之后，紧接 着再按 M-y 就可以召回再前一次被移除的内容，再按一次 M-y 又可以召回再上 一次的…… 连续使用 M-y 直到找到你想要召回的东西，然后什么也不用做，继续 编辑就行了。</p>
<p>如果连续按 M-y 很多次，你可能会回到起始点，也就是最近移除的文字。 【看得出这实际上是一个环。】</p>
<h1 id="7-撤销（UNDO）"><a href="#7-撤销（UNDO）" class="headerlink" title="7 撤销（UNDO）"></a>7 撤销（UNDO）</h1><p>如果你修改了一段文字，又觉得改得不好，可以用 undo 命令进行撤销：C-/。</p>
<p>通常 C-/ 会消除一个命令所造成的所有改变；如果你在一行中连续多次地使用 C-/，你会把以前的命令也依次撤销。</p>
<p>但是有两个例外： 1） 没有改变文字的命令不算（包括光标移动命令和滚动命令） 2） 从键盘输入的字符以组为单位――每组最多 20 个字符――来进行处理。 （这是为了减少你在撤销 “插入文字” 动作时需要输入 C-/ 的次数）</p>
<blockquote>
<p>用 C-k 将这一行移除，然后输入 C-/ ，它会再次出现。<br>C-_ 也是撤销命令；它的作用跟 C-/ 一样，但是它比较容易多次输入。在 某些终端上，输入 C-/ 实际上向 Emacs 发送的是 C-_ 。 另外， C-x u 和 C-/ 完全一样，但是按起来有些麻烦。</p>
</blockquote>
<p>数字参数对于 C-/ 、 C-_ 和 C-x u 的意义是执行撤销的重复次数。</p>
<h1 id="8-文件（FILE）"><a href="#8-文件（FILE）" class="headerlink" title="8 文件（FILE）"></a>8 文件（FILE）</h1><p>想保存工作成果就要记得存盘，否则一旦退出 Emacs 你编辑的文字就会丢失。要 存盘，就要在编辑前 “寻找” 到一个存盘文件。（这个过程通常也被称为“访问” 文件。）</p>
<p>寻找到一个文件意味着你可以在 Emacs 里查看这个文件的内容。从许多角度看， 这就等于你在直接编辑这个文件，只是你所做的修改只有在 “存盘” 的时候才会 被写入文件。也正因为如此，你可以丢弃一个写到一半的文件而不必把这个残缺 文件也保存到计算机上。在存盘的时候，Emacs 会把存盘前的文件重命名保存， 以防你改完之后又想反悔。</p>
<p>在屏幕的下方，你应该能够看到头部有短线 “-” 的一行，行首通常是一些诸如 “ -:— TUTORIAL.cn” 的文字，这些文字代表了你当前正在访问的文件。比如你现 在正在访问的文件是对 Emacs 快速指南的一份临时拷贝，叫做“TUTORIAL.cn”。 每当 Emacs 寻找到一个文件，文件名就会出现在这个位置。</p>
<p>寻找文件的命令有一个特点，那就是你必须给出文件名。我们称这个命令 “读入 了一个参数”（在这里，这个参数显然就是文件名）。在你输入这条命令之后：</p>
<p><strong>C-x C-f   寻找一个文件</strong><br>Emacs 会提示你输入文件名。你输入的文件名会出现在屏幕最底端的一行，这一 行被称为小缓冲（minibuffer），在小缓冲里你可以使用通常的 Emacs 编辑命令 来编辑文件名。</p>
<p>在小缓冲里输入文件名（其实输入其它东西也一样）时可以用 C-g 取消。</p>
<blockquote>
<p>输入 C-x C-f，然后输入 C-g<br>这会关掉小缓冲，同时也会取消使用小缓冲的 C-x C-f 命令。 当然了，你也没有找任何文件。</p>
</blockquote>
<p>用 <Return> 结束文件名的输入。之后，小缓冲会消失，C-x C-f 将会去寻找你 指定的文件。小缓冲在 C-x C-f 命令结束之后也会消失。</p>
<p>文件被显示在了屏幕上，你可以开始编辑了。存盘用这条命令：</p>
<p><strong>C-x C-s   储存这个文件</strong><br>这条命令把 Emacs 中的文字存储到文件中。第一次存盘的时候 Emacs 会将原文 件重命名以备份。重命名的规则通常是在原文件名之后添加一个 “~” 字符。 【对许多人来说，这是一个烦人的特性，关掉文件备份可以用如下命令： M-x customize-variable <Return> make-backup-files <Return>】</p>
<p>存盘结束后，Emacs 会显示写入文件的文件名。你最好养成经常存盘的习惯，这 可以减少系统崩溃和死机给你带来的损失（也可参见下面的 “自动保存” 一节）。</p>
<blockquote>
<p>输入 C-x C-s TUTORIAL.cn <Return> 。<br>这将会把该指南保存为一个名为 TUTORIAL.cn 的文件，并且在屏幕的下方显 示一条消息：“Wrote …TUTORIAL.cn”。</p>
</blockquote>
<p>你不但可以寻找一个已有的文件来查看或编辑，还可以寻找一个不存在的文件。 实际上这正是 Emacs 创建新文件的方法：找到不存在的新文件。事实上，只有 在存盘的时候，Emacs 才会真正创建这个文件。而在这之后的一切就跟编辑一个 已有文件没有区别了。</p>
<h1 id="9-缓冲区（BUFFER）"><a href="#9-缓冲区（BUFFER）" class="headerlink" title="9 缓冲区（BUFFER）"></a>9 缓冲区（BUFFER）</h1><p>你可以用 C-x C-f 找到并打开第二个文件，但第一个文件仍然在 Emacs 中。要 切回第一个文件，一种办法是再用一次 C-x C-f。这样，你就可以在 Emacs 中同 时打开多个文件。</p>
<p>Emacs 把每个编辑中的文件都放在一个称为 “缓冲区（buffer）” 的地方。每寻 找到一个文件，Emacs 就在其内部开辟一个缓冲区。用下面的命令可以列出当前 所有的缓冲区：</p>
<p><strong>C-x C-b 列出缓冲区</strong></p>
<blockquote>
<p>现在就试一下 C-x C-b<br>观察一下缓冲区是如何被命名的，它很可能跟与其对应的文件同名。实际上，一 个 Emacs 窗格里的任何文字都是某个缓冲区的一部分。</p>
</blockquote>
<blockquote>
<p>输入 C-x 1 离开缓冲区列表<br>不管存在多少缓冲区，任何时候都只能有一个 “当前” 缓冲区，也就是你正在编 辑的这个。如果你想编辑其它的缓冲区，就必须 “切换” 过去。上面讲过，用 C-x C-f 是一种办法。不过还有一个更简单的办法，那就是用 C-x b。用这条命 令，你必须输入缓冲区的名称。</p>
</blockquote>
<blockquote>
<p>通过输入 C-x C-f foo <Return> 创建一个名为“foo”的文件。<br>然后输入 C-x b TUTORIAL.cn <Return> 回到这里。</p>
</blockquote>
<p>大多数情况下，缓冲区与跟其对应的文件是同名的（不包括目录名），不过这也 不是绝对的。用 C-x C-b 得到的缓冲区列表总是显示缓冲区名。</p>
<p>缓冲区未必有对应文件。显示缓冲区列表的缓冲区（叫做 “<em>Buffer List</em>”）就 是这样。这个 TUTORIAL.cn 缓冲区起初没有对应的文件，但是现在有了，因为 在前一节你输入了 C-x C-s ， 将它保存成了一个文件。</p>
<p>“<em>Messages</em>” 缓冲区也没有对应文件，这个缓冲区里存放的都是在 Emacs 底部 出现的消息。</p>
<blockquote>
<p>输入 C-x b <em>Messages</em> <Return> 瞅瞅消息缓冲区里都有什么东西。<br>然后再输入 C-x b TUTORIAL.cn <Return> 回到这里。</p>
</blockquote>
<p>如果你对某个文件做了些修改，然后切换到另一个文件，这个动作并不会帮你把 前一个文件存盘。对第一个文件的修改仍然仅存在于 Emacs 中，也就是在它对 应的缓冲区里。并且，对第二个文件的修改也不会影响到第一个文件。这很有用， 但也意味着你需要一个简便的办法来保存第一个文件的缓冲区。先切换回那个缓 冲区，再用 C-x C-s 存盘，太麻烦了。你需要一个更简便的方法，而 Emacs 已 经为你准备好了：</p>
<p><strong>C-x s   保存多个缓冲区<br>C-x s 会找出所有已被修改但尚未存盘的缓冲区，然后向你逐个询问：是否需要存盘？</strong></p>
<blockquote>
<p>插入一行文字，然后输入 C-x s。<br>它应该会问你，是否要储存名为 TUTORIAL.cn 的缓冲区？ 按 “y” 告诉它你想存盘。</p>
</blockquote>
<h1 id="10-命令集扩展（EXTENDING-THE-COMMAND-SET）"><a href="#10-命令集扩展（EXTENDING-THE-COMMAND-SET）" class="headerlink" title="10 命令集扩展（EXTENDING THE COMMAND SET）"></a>10 命令集扩展（EXTENDING THE COMMAND SET）</h1><p>Emacs 的命令就像天上的星星，数也数不清。把它们都对应到 CONTROL 和 META 组合键上显然是不可能的。Emacs 用扩展（eXtend）命令来解决这个问题，扩展 命令有两种风格：</p>
<p><strong>C-x     字符扩展。  C-x 之后输入另一个字符或者组合键。<br>M-x     命令名扩展。M-x 之后输入一个命令名。</strong><br>很多扩展命令都相当有用，虽然与你已经学过的命令比起来，他们可能不那么常 用。我们早已经见过一些扩展命令了，比如用 C-x C-f 寻找文件和用 C-x C-s 保存文件；退出 Emacs 用的 C-x C-c 也是扩展命令。（不用担心退出 Emacs 会 给你带来什么损失，Emacs 会在退出之前提醒你存盘的。）</p>
<p>如果你使用图形界面，你不需要任何特殊的命令来切换 Emacs 和其他应用程序。 你可以使用鼠标或者窗口管理器的命令。然而，如果你使用只能同时显示一个应 用程序的文本终端，你需要 “挂起” Emacs ，以切换到其他的应用程序。</p>
<p>C-z 可以暂时离开 Emacs――当然，你还可以再回来。在允许 C-z 的系统中，C-z 会把 Emacs“挂起”，也就是说，它会回到 shell 但不杀死 Emacs 的进程。在常用的 shell 中，通常可以用 “fg” 或者 “%emacs” 命令再次回到 Emacs 中。</p>
<p>你最好在打算退出登陆的时候再用 C-x C-c。在把 Emacs 当做一个临时的编辑 器的时候（比如被一个邮件处理程序调用），也可以用 C-x C-c 退出。</p>
<p>C-x 的扩展命令有很多，下面列出的是你已经学过的：</p>
<p><strong>C-x C-f         寻找文件。<br>C-x C-s         保存文件。<br>C-x C-b         列出缓冲区。<br>C-x C-c         离开 Emacs。<br>C-x 1           关掉其它所有窗格，只保留一个。<br>C-x u           撤销。</strong></p>
<p>用命令名扩展的命令通常并不常用，或只用在部分模式下。比如 replace-string（字符串替换）这个命令，它会把一个字符串替换成另一个。在 输入 M-x 之后，Emacs 会在屏幕底端向你询问并等待你输入命令名。如果你想 输入 “replace-string”，其实只需要敲“repl s<TAB>” 就行了，Emacs 会帮你自动补齐。输入完之后按 <Return> 提交。</p>
<p>字符串替换命令需要两个参数――被替换的字符串和用来替换它的字符串。每个参数的输入都以换行符来结束。</p>
<h1 id="11-自动保存（AUTO-SAVE）"><a href="#11-自动保存（AUTO-SAVE）" class="headerlink" title="11 自动保存（AUTO SAVE）"></a>11 自动保存（AUTO SAVE）</h1><p>如果你已经修改了一个文件，但是还没来得及存盘你的计算机就罢工了，那么你 所做的修改就很可能会丢失。为了避免这样的不幸发生，Emacs 会定期将正在编 辑的文件写入一个 “自动保存” 文件中。自动保存文件的文件名的头尾各有一个 “#”字符，比如你正在编辑的文件叫“hello.c”，那么它的自动保存文件就叫 “#hello.c#”。这个文件会在正常存盘之后被 Emacs 删除。</p>
<p>所以，假如不幸真的发生了，你大可以从容地打开原来的文件（注意不是自动保 存文件）然后输入 M-x recover file <Return> 来恢复你的自动保存文件。在 提示确认的时候，输入 yes<Return>。</p>
<h1 id="12-回显区（ECHO-AREA）"><a href="#12-回显区（ECHO-AREA）" class="headerlink" title="12 回显区（ECHO AREA）"></a>12 回显区（ECHO AREA）</h1><p>如果 Emacs 发现你输入多字符命令的节奏很慢，它会在窗格的下方称为 “回显区” 的地方给你提示。回显区位于屏幕的最下面一行。</p>
<h1 id="13-状态栏（MODE-LINE）"><a href="#13-状态栏（MODE-LINE）" class="headerlink" title="13 状态栏（MODE LINE）"></a>13 状态栏（MODE LINE）</h1><p>位于回显区正上方的一行被称为 “状态栏”。状态栏上会显示一些信息，比如：</p>
<p>-:**- TUTORIAL.cn 63% L749 (Fundamental)</p>
<p>状态栏显示了 Emacs 的状态和你正在编辑的文字的一些信息。</p>
<p>你应该知道文件名的意思吧？就是你找到的那个文件嘛。-NN%– 显示的是光标在 全文中的位置。如果位于文件的开头，那么就显示 –Top– 而不是 –00%–；如 果位于文件的末尾，就显示 –Bot–。如果文件很小，一屏就足以显示全部内容， 那么状态栏会显示 –All–。</p>
<p>“L” 和其后的数字给出了光标所在行的行号。</p>
<p>最开头的星号（*）表示你已经对文字做过改动。刚刚打开的文件肯定没有被改动 过，所以状态栏上显示的不是星号而是短线（-）。</p>
<p>状态栏上小括号里的内容告诉你当前正在使用的编辑模式。缺省的模式是 Fundamental，就是你现在正在使用的这个。它是一种 “主模式”。</p>
<p>Emacs 的主模式林林总总。有用来编辑程序代码的――比如 Lisp 模式；也有用 来编辑各种自然语言文本的――比如 Text 模式。任何情况下只能应用一个主模 式，其名称会显示在状态栏上，也就是现在显示 “Fundamental” 的地方。</p>
<p>主模式通常会改变一些命令的行为。比方说，不管编辑什么语言的程序代码，你 都可以用一个相同的命令来添加注释。但是在不同的语言中注释的语法往往是不 同的，这时不同的主模式就会用各自不同的语法规则来添加注释。主模式都是可 以用 M-x 启动的扩展命令，M-x fundamental-mode 就可以切换到 Fundamental 模式。</p>
<p>编辑自然语言文本――比如现在――应该用 Text 模式。</p>
<blockquote>
<p>输入 M-x text-mode <Return>。<br>别担心，什么都没变。不过细心一些可以发现，M-f 和 M-b 现在把单引号（’） 视为词的一部分了。而在先前的 Fundamental 模式中，M-f 和 M-b 都将单引号 视为分隔单词的符号。</p>
</blockquote>
<p>主模式通常都会搞一些类似的小动作，因为很多命令其实完成的是 “相同的工 作”，只是在不同环境下会有不同的工作方式而已。【所谓 “求同存异”，在 Emacs 里得到了很好的体现】</p>
<p>用 C-h m 可以查看当前主模式的文档。</p>
<blockquote>
<p>把光标移动到下一行。<br>用 C-l C-l 将本行带到屏幕的最上方。<br>输入 C-h m，看看 Text 模式与 Fundamental 模式有哪些不同。<br>输入 C-x 1 关掉文档窗格。</p>
</blockquote>
<p>主模式之所以称之为 “主（major）” 模式，是因为同时还有“辅模式”（minor mode）存在。辅模式并不能替代主模式，而是提供一些辅助的功能。每个辅模式 都可以独立地开启和关闭，跟其它辅模式无关，跟主模式也无关。所以你可以不 使用辅模式，也可以只使用一个或同时使用多个辅模式。</p>
<p>有一个叫做自动折行（Auto Fill）的辅模式很有用，特别是在编辑自然语言文本 的时候。启用自动折行后，Emacs 会在你打字超出一行边界时自动替你换行。</p>
<p>用 M-x auto-fill-mode <Return> 启动自动折行模式。再用一次这条命令，自 动折行模式会被关闭。也就是说，如果自动折行模式没有被开启，这个命令会开 启它；如果已经开启了，这个命令会关闭它。所以我们说，这个命令可以用来 “开关（toggle）” 模式。</p>
<blockquote>
<p>现在输入 M-x auto-fill-mode <Return>。然后随便敲点什么，直到你看到它<br>分成两行。你必须敲一些空格，因为 Auto Fill 只在空白处进行断行。 【输入空格对英文来说是必须的，而对中文则不必。】</p>
</blockquote>
<p>行边界通常被设定为 70 个字符【这里指英文字符】，你可以用 C-x f 命令配合 数字参数来重新设定它。</p>
<blockquote>
<p>输入 C-x f 并传递参数 20： C-u 2 0 C-x f。<br>然后输入一些文字，观察 Emacs 的自动折行动作 最后再用 C-x f 将边界设回 70。</p>
</blockquote>
<p>如果你在段落的中间做了一些修改，那么自动折行模式不会替你把整个段落重新 折行，你需要用 M-q 手动折行。注意，光标必须位于你需要折行的那一段里。</p>
<blockquote>
<p>移动光标到前一段中，然后输入 M-q。</p>
</blockquote>
<h1 id="14-搜索（SEARCHING）"><a href="#14-搜索（SEARCHING）" class="headerlink" title="14 搜索（SEARCHING）"></a>14 搜索（SEARCHING）</h1><p>Emacs 可以向前或向后搜索字符串（“字符串” 指的是一组连续的字符）。搜索命 令是一个移动光标的命令：搜索成功后，光标会停留在搜索目标出现的地方。</p>
<p>Emacs 的搜索命令是 “渐进的（incremental）”。意思是搜索与输入同时进行： 你在键盘上一字一句地输入搜索词的过程中，Emacs 就已经开始替你搜索了。</p>
<p><strong>C-s 是向前搜索，C-r 是向后搜索。</strong></p>
<p>在按下 C-s 之后，回显区里会有 “I-search” 字样出现，表明目前 Emacs 正处 于 “渐进搜索” 状态，并等待你输入搜索字串。按 <Return> 可以结束搜索。</p>
<blockquote>
<p>输入 C-s 开始一个搜索。注意敲慢一点，一次输入一个字符。<br>慢慢输入 “cursor” 这个词，每敲一个字都停顿一下并观察光标。 现在你应该已曾经找到 “cursor” 这个词了。</p>
</blockquote>
<blockquote>
<p>再按一次 C-s，搜索下一个“cursor”出现的位置。<br>现在按四次 <DEL> ，看看光标是如何移动的。<br>敲 <Return> 结束搜索。</p>
</blockquote>
<p>看仔细了么？在一次渐进式搜索中，Emacs 会尝试跳到搜索目标出现的位置。要 跳到下一个命中位置，就再按一次 C-s。如果找不到目标，Emacs 会发出 “哔” 的一声，告诉你搜索失败。在整个过程中，都可以用 C-g 来终止搜索。【你会发 现 C-g 会让光标回到搜索开始的位置，而 <Return> 则让光标留在搜索结果上， 这是很有用的功能。】</p>
<p>在渐进式搜索中，按 <DEL> 会 “撤回” 到最近一次搜索的命中位置。如果之前没 有一个命中， <DEL> 会抹去搜索字符串中的最后一个字符。比如你已经输入了 “c”，光标就停在 “c” 第一次出现的位置，再输入 “u”，光标停在“cu” 第一次出现 的位置，这时再按 <DEL> ，“u”就从搜索字串中消失了，然后光标会回到 “c” 第 一次出现的位置。</p>
<p>另外，如果你在搜索的时候输入了 control 或者 meta 组合键的话，搜索可能会 结束。（也有例外，比如 C-s 和 C-r 这些用于搜索的命令。）</p>
<p>前面说的都是 “向下” 搜索，如果想 “向上” 搜索，可以用 C-r。C-r 与 C-s 相比除了搜索方向相反之外，其余的操作都一样。</p>
<h1 id="15-多窗格（MULTIPLE-WINDOWS）"><a href="#15-多窗格（MULTIPLE-WINDOWS）" class="headerlink" title="15 多窗格（MULTIPLE WINDOWS）"></a>15 多窗格（MULTIPLE WINDOWS）</h1><p>Emacs 的迷人之处很多，能够在屏幕上同时显示多个窗格就是其中之一。</p>
<p>连续使用 C-x o 可以遍历所有窗格。“被选中的窗格”，也就是绝大多数的编辑 操作所发生的地方，是在你不打字时闪烁光标的那个窗格。其他的窗格有它们自 己的光标位置； 如果你在图形界面下运行 Emacs ，这些光标是镂空的长方形。</p>
<p>当你在一个窗格中编辑，但用另一个窗格作为参考的时候，C-M-v 是很有用的命 令。无需离开被选中的窗格，你就可以用 C-M-v 命令滚动另外一个窗格中的文 字。【比如翻译和校对就很适合用这种方式进行。】</p>
<p>C-M-v 是一个 CONTROL-META 组合键。如果你有 META （或 Alt）键的话，可以 同时按住 CONTROL 和 META 键并输入 v。CONTROL 和 META 键先按哪个都可以， 因为它们只是用来 “修饰（modify）” 你输入的字符的。</p>
<p>如果你并没有 META 键，你也可以用 ESC 来代替，不过这样的话就要注意按键顺 序了：你必须先输入 ESC ，然后再输入 CONTROL-v。CONTROL-ESC v 是没用的， 因为 ESC 本身是一个字符键，而不是一个修饰键（modifier key）。</p>
<blockquote>
<p>（在上方窗格里）输入 C-x 1 关掉下方窗格。<br>（如果你在下方的窗格里输入 C-x 1，那么就会关掉上方的窗格。你可以把这个 命令看成是 “只保留一个窗格”――就是我们正在编辑的这个。）</p>
</blockquote>
<p>不同的窗格可以显示不同的缓冲区。如果你在一个窗格里用 C-x C-f 打开了一个 文件，另一个窗格并不会发生什么变化。任何一个窗格里都可以用来打开文件。</p>
<p>用下面的方法可以在一个新开窗格里打开文件：</p>
<blockquote>
<p>输入 C-x 4 C-f，紧跟着输入一个文件名，再用 <Return> 结束。<br>可以看到你指定的文件出现在下方的窗格中，同时光标也跳到了那里。</p>
</blockquote>
<blockquote>
<p>输入 C-x o 回到上方的窗格，然后再用 C-x 1 关掉下方窗格。</p>
</blockquote>
<h1 id="16-多窗口（MULTIPLE-FRAMES）"><a href="#16-多窗口（MULTIPLE-FRAMES）" class="headerlink" title="16 多窗口（MULTIPLE FRAMES）"></a>16 多窗口（MULTIPLE FRAMES）</h1><p>Emacs 可以创建多个窗口。窗口由许多窗格以及菜单、滚动条、回显区等组成。 在图形界面下，多个窗口可以同时显示出来。在文本终端中，只能同时显示一个 窗口。</p>
<blockquote>
<p>输入 M-x make-frame <Return>。<br>可以看到一个新的窗口出现在了你的屏幕上。</p>
</blockquote>
<p>你可以在新的窗口里做最初的窗口里可以做的任何事情。第一个窗口没有什么特 别的。</p>
<blockquote>
<p>输入 M-x delete-frame <Return>.<br>这个命令将会关闭选中的窗口。</p>
</blockquote>
<p>你也可以通过图形系统来关闭某个窗口（通常是在窗口上面的某个角落里的一个 “X” 按钮）。如果你关闭的是 Emacs 进程的最后一个窗口， Emacs 将会退出。</p>
<h1 id="17-递归编辑（RECURSIVE-EDITING-LEVELS）"><a href="#17-递归编辑（RECURSIVE-EDITING-LEVELS）" class="headerlink" title="17 递归编辑（RECURSIVE EDITING LEVELS）"></a>17 递归编辑（RECURSIVE EDITING LEVELS）</h1><p>有时候你会进入所谓的 “递归编辑”。递归编辑状态由位于状态栏的方括号所指 示，其中包含了用小括号来指明的模式名称。比如说，你有时可能会看到 [(Fundamental)]，而不是 (Fundamental)。【比如在用 M-% 进行交互式替换的 时候你又用了 C-s 进行搜索，这时替换模式并没有结束，但你又进入了搜索模式， 这就是所谓的递归编辑。】</p>
<p>离开递归编辑可以用 ESC ESC ESC。这是一个最通用的 “离开” 命令，你甚至可 以使用它来关掉多余的窗格，或者离开小缓冲。</p>
<blockquote>
<p>输入 M-x 进入小缓冲；然后输入 ESC ESC ESC 离开。<br>你不能用 C-g 退出递归编辑，因为 C-g 的作用是取消 “本层递归编辑之内” 的 命令和其参数（arguments）。</p>
</blockquote>
<h1 id="18-获得更多帮助（GETTING-MORE-HELP）"><a href="#18-获得更多帮助（GETTING-MORE-HELP）" class="headerlink" title="18 获得更多帮助（GETTING MORE HELP）"></a>18 获得更多帮助（GETTING MORE HELP）</h1><p>本快速指南的目的仅仅是帮助你在 Emacs 的海洋里下水，不至于束手无策望洋兴 叹。有关 Emacs 的话题可谓汗牛充栋，这里自然是难尽万一。不过 Emacs 很理 解你求知若渴的心情，因为它提供的强大功能实在是太多了。为此，Emacs 提供 了一些命令来查看 Emacs 的命令文档，这些命令都以 CONTROL-h 开头，这个字 符也因此被称为 “帮助（Help）字符”。</p>
<p>要使用帮助（Help）功能，请先输入 C-h，然后再输入一个字符以说明你需要什 么帮助。如果你连自己到底需要什么帮助都不知道，那么就输入 C-h ?，Emacs 会告诉你它能提供了哪些帮助。如果你按了 C-h 又想反悔，可以用 C-g 取消。</p>
<p>（如果你按 C-h 之后没有任何帮助信息显示出来，那么试试 F1 键或者 M-x help <Return> 。）</p>
<p>最基本的帮助功能是 C-h c。输入 C-h c 之后再输入一个组合键，Emacs 会给出 这个命令的简要说明。</p>
<blockquote>
<p>输入 C-h c C-p。<br>显示的消息应该会是这样：</p>
</blockquote>
<p>C-p runs the command previous-line<br>这条消息显示了 C-p 命令对应的函数名。命令的功能由函数完成，所以函数名 本身也可以被看成是最简单的文档――至少对于你已经学过的命令来说，它们的函 数名足以解释它们的功能了。</p>
<p>多字符命令一样可以用 C-h c 来查看。</p>
<p>想得到更多的信息，请把 C-h c 换成 C-h k 试试看。</p>
<blockquote>
<p>输入 C-h k C-p。<br>上面的命令会新打开一个 Emacs 窗格以显示函数的名称及其文档。你读完之后可 以用 C-x 1 关掉这个帮助窗格。当然你并不需要立即这样做，你完全可以先在编 辑窗格里做点别的事情，然后再关掉帮助窗格。</p>
</blockquote>
<p>还有一些其它有用的 C-h 命令：</p>
<p><strong>C-h f        解释一个函数。需要输入函数名。</strong></p>
<blockquote>
<p>试试看，输入 C-h f previous-line <Return>。<br>Emacs 会给出它所知道的所有有关 “实现 C-p 命令功能的函数” 的信息。</p>
</blockquote>
<p><strong>C-h v 用来显示 Emacs 变量的文档。Emacs 变量可以被用来 “定制 Emacs 的行 为”。同样，你需要输入变量的名称。</strong></p>
<p><strong>C-h a 相关命令搜索（Command Apropos）。 输入一个关键词然后 Emacs 会列出所有命令名中包含此关键词 的命令。</strong><br>这些命令全都可以用 M-x 来启动。对于某些命令来说， 相关命令搜索还会列出一两个组合键。</p>
<blockquote>
<p>输入 C-h a file <Return>。<br>Emacs 会在另一个窗格里显示一个 M-x 命令列表，这个列表包含了所有名称中含 有 “file” 的命令。你可以看到像 “C-x C-f” 这样的组合键显示在“find-file” 这样的命令名的旁边。</p>
</blockquote>
<blockquote>
<p>用 C-M-v 来回滚动 help 窗格，多试几次。<br>输入 C-x 1 来删除 help 窗格。</p>
</blockquote>
<p><strong>C-h i 阅读手册（也就是通常讲的 Info）。</strong><br>这个命令会打开一个称为 “<em>info</em>” 的特殊缓冲区，在那里， 你可以阅读安装在系统里的软件包使用手册。要读 Emacs 的使用手册，按 m emacs <Return> 就可以了。如果你之前从没用过 Info 系统，那么请按“?”，Emacs 会带你进入 Info 的使用指南。在看完本快速指南之后，Emacs Info 会成为你的主要参考文档。</p>
]]></content>
      <categories>
        <category>收集</category>
      </categories>
      <tags>
        <tag>Emacs</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaBrowser 开发</title>
    <url>/2069714304/</url>
    <content><![CDATA[<p>开发了一个简单的网页浏览器，可以实现网页访问、保存，以及操作的前进、后退功能。</p>
<h1 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h1><ul>
<li>访问：输入URL，可以在线访问对应网页。</li>
<li>另存为：可以保存正在访问的页面。</li>
<li>前进：访问当前页面的上一个页面。</li>
<li>后退：访问当前页面的下一个页面。</li>
<li>查看源文件：查看访问页面的HTML源文件，并且可以保存。<br /></li>
</ul>
<h1 id="理论基础"><a href="#理论基础" class="headerlink" title="理论基础"></a>理论基础</h1><ul>
<li>事件种类（低级事件和语义事件）、事件监听器接口、事件适配器（Adapter）</li>
<li>Swing相关组件（JFram、JMenu、JButton、JTextField及JOptionPane）</li>
<li>输入输出流<br /></li>
</ul>
<h1 id="总体设计"><a href="#总体设计" class="headerlink" title="总体设计"></a>总体设计</h1><p>主要程序由WebBrowser.java和ViewSourceFrame.java两个文件组成。</p>
<ol>
<li>WebBrowser.java<br> 此文件包含名为WebBrowser的public类，其主要功能为生成网页浏览器的主体框架，实现框架上各个组件的事件监听。WebBrowser.java主要包括四个模块：图形用户界面的构建、组件监听接口的实现、文件保存功能的实现、查看源代码框架的生成。</li>
<li>ViewSourceFrame.java<br> 此文件包含名为ViewSourceFrame的类，其主要功能是实现了源文件查看的主题框架，并实现了源文件的保存功能。ViewSourceFrame.java主要包括两个模块：图形用户界面的构建和组件监听接口的实现。<br /></li>
</ol>
<h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p><a href="https://github.com/s1xt33nth/JavaBrowser" title="https://github.com/s1xt33nth/JavaBrowser">https://github.com/s1xt33nth/JavaBrowser</a></p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://www.runoob.com/java/java-sending-email.html" title="Java 发送邮件 | 菜鸟教程">Java 发送邮件 | 菜鸟教程</a><br><a href="https://blog.csdn.net/lmb55/article/details/64537293" title="【Apache POI】Java 读取Excel文件">【Apache POI】Java 读取Excel文件</a><br><a href="https://blog.csdn.net/superdog007/article/details/48338337" title="java读取Excel的方法，解析xls、xlsx两种格式">java读取Excel的方法，解析xls、xlsx两种格式</a><br><a href="http://www.cnblogs.com/whgk/p/6506027.html" title="Java Web(十三) 使用javamail进行发送邮件，(使用QQ，163，新浪邮箱服务器)">Java Web(十三) 使用javamail进行发送邮件，(使用QQ，163，新浪邮箱服务器)</a><br><a href="http://yl-fighting.iteye.com/blog/1726285726285" title="POI对Excel自定义日期格式的读取 - ITeye - ITeye博客">POI对Excel自定义日期格式的读取 - ITeye - ITeye博客</a></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 项目部署实践</title>
    <url>/1026407118/</url>
    <content><![CDATA[<p>系统基于 CentOS7。</p>
<h1 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h1><h2 id="安装-JDK"><a href="#安装-JDK" class="headerlink" title="安装 JDK"></a>安装 JDK</h2><p>查看 yum 库中的 JDK 安装包 ：<code>yum -y list java*</code></p>
<p>安装需要的 JDK 版本的所有程序：<code>yum -y install java-1.8.0-openjdk*</code></p>
<p>参考链接：<a href="https://blog.csdn.net/qq_32786873/article/details/78749384">在CentOS7.4中安装jdk的几种方法及配置环境变量_勿忘初心的博客-CSDN博客_centos配置java环境变量</a></p>
<h2 id="安装-Maven"><a href="#安装-Maven" class="headerlink" title="安装 Maven"></a>安装 Maven</h2><p>安装命令：<code>yum install -y apache-maven</code></p>
<p>修改镜像：<code>vi /usr/share/apache-maven/conf/settings.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>&lt;http://maven.aliyun.com/nexus/content/groups/public/&gt;<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>参考链接：<a href="https://www.jianshu.com/p/dfccd5de6032">CentOS上用yum安装Maven</a></p>
<h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><p>安装命令：<code>yum -y install docker-ce</code></p>
<p>启动命令：<code>systemctl start docker</code></p>
<p>参考链接：<a href="https://cloud.tencent.com/developer/article/1701451">centos7安装Docker详细步骤（无坑版教程）</a></p>
<p>修改加速地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;&lt;https://xxx.mirror.aliyuncs.com&gt;&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<p>参考链接：<a href="https://help.aliyun.com/document_detail/60750.html#title-s0s-jjs-26k">官方镜像加速</a></p>
<h1 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h1><h2 id="Jar-包方式"><a href="#Jar-包方式" class="headerlink" title="Jar 包方式"></a>Jar 包方式</h2><p>使用 IDEA 内置 deployment，上传 jar 包到服务器。</p>
<h2 id="Docker-方式"><a href="#Docker-方式" class="headerlink" title="Docker 方式"></a>Docker 方式</h2><p>在 /usr/lib/systemd/system/docker.service，配置远程访问。</p>
<p>主要是在[Service]这个部分的 ExecStart 中，加上下面两个参数：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">-H</span> <span class="string">tcp://0.0.0.0:2375</span> <span class="string">-H</span> <span class="string">unix://var/run/docker.sock</span></span><br></pre></td></tr></table></figure>

<p>然后重启：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">systemctl</span> <span class="string">daemon-reload</span></span><br><span class="line"><span class="string">systemctl</span> <span class="string">restart</span> <span class="string">docker</span></span><br></pre></td></tr></table></figure>

<p>在 IDEA 中，连接 Docker：<code>tcp://ip:2375</code>。</p>
<p>参考链接：</p>
<p><a href="https://cloud.tencent.com/developer/article/1683689">Docker开启Remote API 访问 2375端口</a></p>
<p><a href="https://blog.csdn.net/weixin_42687829/article/details/104249583">用idea部署springboot项目到docker_今日相乐，皆当喜欢的博客-CSDN博客_idea部署项目到docker</a></p>
<h1 id="运行命令"><a href="#运行命令" class="headerlink" title="运行命令"></a>运行命令</h1><p>后台运行：<code>nohup java -jar xxx.jar &gt;temp.txt &amp;</code></p>
<p>查看运行的任务：<code>jobs</code></p>
<p>如果想将某个作业调回前台控制，只需要 <code>fg + 编号</code> 即可。</p>
<p>查看某端口占用的线程的pid：<code>netstat -nlp |grep :9181</code></p>
<p>查看当前运行的jar包程序进程号：<code>ps -ef|grep xxx.jar</code> 或者 <code>ps -aux | grep java</code></p>
<p>关闭进程：<code>kill -s 9 24204</code></p>
<p>参考链接：</p>
<p><a href="https://cloud.tencent.com/developer/article/1722069">Linux中jar包启动和jar包后台运行的实现方式</a></p>
<p><a href="https://lullabychen.github.io/2019/10/09/Java-IDEA%E6%89%93jar%E5%8C%85-%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%87%E7%A8%8B%E5%85%A8%E8%AE%B0%E5%BD%95/">Java：idea打包jar包&amp;部署到服务器过程全记录</a></p>
<h1 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h1><h2 id="搭建项目"><a href="#搭建项目" class="headerlink" title="搭建项目"></a>搭建项目</h2><ol>
<li>在代码仓库新建项目，clone 到本地。</li>
<li>新建 Maven 工程，编辑 pom.xml 文件。（或使用 <a href="http://start.spring.io/">start.spring.io</a>、IDEA 内置 Initializr）groupId 定义当前 Maven项目隶属的实际项目，artifactId 建议使用实际项目作为前缀。</li>
<li>新建 Modules。</li>
</ol>
<p>参考链接：<a href="https://juejin.cn/post/6906453629381804046">Spring Data JDBC入门使用Demo - 掘金</a></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>实战</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>ExcelGo</title>
    <url>/2646382575/</url>
    <content><![CDATA[<p>ExcelGo 是一个能读取 Excel 文件内容，并获取到其中的邮箱，将表格内容发送至指定的邮箱地址。最初构想来自于需要将公司内部对账单文件中的每行内容发送至各人邮箱。</p>
<h1 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h1><ul>
<li>获取表格内容：通过Apache POI组件读取Excle表格，将内容存放至HashMap集合中。</li>
<li>发送邮件：通过员工编号将同一个人的信息组合起来，使用JavaMail API 和Java Activation Framework (JAF) 发送至其邮箱。</li>
</ul>
<h1 id="总体设计"><a href="#总体设计" class="headerlink" title="总体设计"></a>总体设计</h1><p>主要程序由GoExcel.java、GoMail.java和Main.java三个文件组成。</p>
<ol>
<li>GoExcel.java<br> 此文件判断Excel文件后缀类型，读取Excel表格表头和数据内容，并根据Cell类型设置数据。</li>
<li>GoMail.java<br> 此文件包含名为goMail的方法，其主要功能是获得收件人邮箱和表格内容，通过QQ邮箱来发送消息。</li>
<li>Main.java<br> 此文件包含Main方法，定义Excel文件路径，组合同一个收件人的消息，并调用goMail方法发送邮件。</li>
</ol>
<h1 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h1><p>因为特别的原因，此处将前三列分别定义为员工编号、收件人姓名和其邮箱地址。<br><img src="https://upload-images.jianshu.io/upload_images/2348575-ed5d4735a94e7901.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Excel文件格式" title="Excel文件格式"></p>
<h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><p><img src="https://upload-images.jianshu.io/upload_images/2348575-46de67c91fe48053.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="收件效果" title="收件效果"></p>
<h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p><a href="https://github.com/sakiila/ExcelGo">https://github.com/sakiila/ExcelGo</a></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring 动态绑定</title>
    <url>/1655783544/</url>
    <content><![CDATA[<h1 id="需求场景"><a href="#需求场景" class="headerlink" title="需求场景"></a>需求场景</h1><p>在系统运行时，根据不同的场景需要多个类实例。比如一个 Redis 类，需要传入不同的 Category（可以理解为 Key 前缀），从而实现多个 Redis 子类。</p>
<h1 id="步骤一、自定义注解"><a href="#步骤一、自定义注解" class="headerlink" title="步骤一、自定义注解"></a>步骤一、自定义注解</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> CacheService &#123;</span><br><span class="line">    <span class="function">String <span class="title">category</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以设置为 <code>String value() default &quot;&quot;;</code> ，使用时可以隐藏字段名。</p>
<h1 id="步骤二、扫描属性上的注解"><a href="#步骤二、扫描属性上的注解" class="headerlink" title="步骤二、扫描属性上的注解"></a>步骤二、扫描属性上的注解</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Field[] fields = object.getClass().getDeclaredFields();</span><br><span class="line">CacheService annotation = field.getAnnotation(CacheService.class);</span><br></pre></td></tr></table></figure>

<h1 id="步骤三、向容器注入-Bean"><a href="#步骤三、向容器注入-Bean" class="headerlink" title="步骤三、向容器注入 Bean"></a>步骤三、向容器注入 Bean</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取 context</span></span><br><span class="line">ConfigurableApplicationContext context = (ConfigurableApplicationContext) applicationContext;</span><br><span class="line"><span class="comment">// 获取 BeanFactory</span></span><br><span class="line">DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) context.getBeanFactory();</span><br><span class="line"><span class="comment">// 创建 bean 信息</span></span><br><span class="line">BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(RedisService.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置字段</span></span><br><span class="line">beanDefinitionBuilder.addPropertyValue(<span class="string">&quot;category&quot;</span>, category);</span><br><span class="line">beanFactory.registerBeanDefinition(field.getName(), beanDefinitionBuilder.getBeanDefinition());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取动态注册的 bean</span></span><br><span class="line">RedisService bean = (RedisService) applicationContext.getBean(field.getName());</span><br><span class="line">field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">field.set(object, bean);</span><br></pre></td></tr></table></figure>

<h1 id="步骤四、使用"><a href="#步骤四、使用" class="headerlink" title="步骤四、使用"></a>步骤四、使用</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@CacheService(category = Constants.ORDER_DRIVER)</span></span><br><span class="line"><span class="keyword">private</span> RedisService orderDriverCache;</span><br></pre></td></tr></table></figure>

<h1 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h1><p><img src="../images/DynamicBinding.png"></p>
<h1 id="全部示例代码"><a href="#全部示例代码" class="headerlink" title="全部示例代码"></a>全部示例代码</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// RedisService.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource(name = &quot;redisNioClient&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> SquirrelClient redisNioClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource(name = &quot;redisClient&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> RedisStoreClient redisClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> String category;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CacheService.java</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> CacheService &#123;</span><br><span class="line">    <span class="function">String <span class="title">category</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CacheServiceAnnotation.java</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CacheServiceAnnotation</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">ContextRefreshedEvent</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(ContextRefreshedEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ApplicationContext applicationContext = event.getApplicationContext();</span><br><span class="line"></span><br><span class="line">        Arrays.stream(applicationContext.getBeanDefinitionNames())</span><br><span class="line">                .map(applicationContext::getBean)</span><br><span class="line">                .forEach(object -&gt; &#123;</span><br><span class="line">                    <span class="keyword">final</span> Field[] fields = object.getClass().getDeclaredFields();</span><br><span class="line">                    Arrays.stream(fields)</span><br><span class="line">                            .filter(field -&gt; field.isAnnotationPresent(CacheService.class))</span><br><span class="line">                            .forEach(field -&gt; &#123;</span><br><span class="line">                                <span class="keyword">final</span> RedisService bean = getRedisService(applicationContext, field);</span><br><span class="line">                                <span class="keyword">try</span> &#123;</span><br><span class="line">                                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                                    field.set(object, bean);</span><br><span class="line">                                    log.info(<span class="string">&quot;set field success, object: &#123;&#125;, bean: &#123;&#125;&quot;</span>, object.getClass().getSimpleName(), field.getName());</span><br><span class="line">                                &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                                    log.error(<span class="string">&quot;set field fail, object: &#123;&#125;, bean: &#123;&#125;&quot;</span>, object.getClass().getSimpleName(), field.getName(), e);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> RedisService <span class="title">getRedisService</span><span class="params">(ApplicationContext applicationContext, Field field)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (applicationContext.containsBeanDefinition(field.getName())) &#123;</span><br><span class="line">            <span class="keyword">return</span> (RedisService) applicationContext.getBean(field.getName());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> CacheService annotation = field.getAnnotation(CacheService.class);</span><br><span class="line">        <span class="keyword">final</span> String category = annotation.category();</span><br><span class="line"></span><br><span class="line">        ConfigurableApplicationContext context = (ConfigurableApplicationContext) applicationContext;</span><br><span class="line">        DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) context.getBeanFactory();</span><br><span class="line">        BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(RedisService.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置字段</span></span><br><span class="line">        beanDefinitionBuilder.addPropertyValue(<span class="string">&quot;category&quot;</span>, category);</span><br><span class="line">        beanFactory.registerBeanDefinition(field.getName(), beanDefinitionBuilder.getBeanDefinition());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取动态注册的 bean</span></span><br><span class="line">        RedisService bean = (RedisService) applicationContext.getBean(field.getName());</span><br><span class="line">        log.info(<span class="string">&quot;register Bean success, bean: &#123;&#125;&quot;</span>, field.getName());</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>参考资料：<br><a href="https://blog.csdn.net/u011983531/article/details/70941123">Java获取类、方法、属性上的注解_根号三-CSDN博客_java 获取属性上的注解</a><br><a href="https://www.cnblogs.com/east7/p/14390816.html">使用自定义注解动态绑定多实现类实例</a><br><a href="https://segmentfault.com/a/1190000024522038">SpringBoot动态注入及操作Bean</a></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>Spring</tag>
        <tag>动态绑定</tag>
      </tags>
  </entry>
  <entry>
    <title>企业人员信息管理系统开发</title>
    <url>/4225233647/</url>
    <content><![CDATA[<h1 id="企业人员信息管理系统"><a href="#企业人员信息管理系统" class="headerlink" title="企业人员信息管理系统"></a>企业人员信息管理系统</h1><p>Swing-based visual interface enterprise personnel information management system.</p>
<p>基于 Swing 的可视化界面企业人员信息管理系统。</p>
<h2 id="一、需求分析："><a href="#一、需求分析：" class="headerlink" title="一、需求分析："></a>一、需求分析：</h2><p>某小型公司，主要有三类人员：经理、兼职技术人员和兼职推销员。这三类人员共同拥有的相关属性：姓名、编号；相关方法：获取当月薪水的getPay()方法、显示个人信息的toString()方法。</p>
<p>人员编号基数为1000，每创建一个人员实例对象，其编号属性的值顺序加1。月薪计算方法：经理拿固定月薪8000元；兼职技术人员按每小时100元领取月薪；兼职推销人员的月薪按当月的销售额的4%提成。</p>
<p>要求：采用面向对象的编程思想，结合题意自己确定需要定义的类及各类的属性、构造方法和其他方法，并编写程序实现功能：</p>
<ol>
<li>查询职工个人信息，可通过姓名、编号查询；</li>
<li>查询部门所有职工的详细信息；</li>
<li>修改职工信息；</li>
<li>删除职工信息；</li>
<li>添加职工信息；</li>
<li>查询所有职工信息，并将其存储到外设职工信息文件EmployeeData.txt中或者SQLServer数据库中，数据库中的表根据系统需求自己定义。</li>
</ol>
<h2 id="二、概要设计："><a href="#二、概要设计：" class="headerlink" title="二、概要设计："></a>二、概要设计：</h2><p>实现整个系统需要五个类文件。Employee类是所有人员的父类，Manager类、Saler类和Technician类继承于这个父类，并有自己的构造方法和其他方法，如图1所示。CompanyList类实现一个ArrayList集合，用来存放公司人员信息。其有增删改查等相关的方法，如图2所示。OperationPanel类是继承于JFrame类、实现ActionListener类的界面类，包含actionPerformed方法和main方法。</p>
<p>Employee类及其子类：</p>
<p><img src="../images/Employee%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB.png" alt="Employee类及其子类"></p>
<p>系统功能模块图：</p>
<p><img src="../images/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97%E5%9B%BE.png" alt="系统功能模块图"></p>
<h3 id="三、详细设计："><a href="#三、详细设计：" class="headerlink" title="三、详细设计："></a>三、详细设计：</h3><ol>
<li>Employee类：</li>
</ol>
<p>String类型的变量name存放员工姓名，long类型的变量id存放员工编号，int类型的静态变量ID具有1000的初值，表示员工的编号基数。构造方法中将形参name放入域变量name，并让ID自增一次。</p>
<ol start="2">
<li>Manager类：</li>
</ol>
<p>经理的工资因为是个常量，所以用double类型的变量salary来赋初值。构造方法调用父类的构造方法，并将自增后的ID放入id中。方法getPay()返回经理的工资数目，方法toString()返回其个人姓名、编号和工资。</p>
<ol start="3">
<li>Saler类：</li>
</ol>
<p>销售人员类和经理类相似，只是重新定义一个double类型的salesNum变量，用来表示销售人员的销售额。在方法getPay()中，计算出工资并返回。</p>
<ol start="4">
<li>Technician类：</li>
</ol>
<p>技术人员类和销售人员类相似，重新定义一个double类型的workHours变量，表示技术人员的工作小时数。在方法getPay()中，计算出工资并返回。</p>
<ol start="5">
<li>CompanyList类：</li>
</ol>
<p>该类初始化一个ArrayList集合，用来存放公司所有人员信息。有以下几种方法：方法add()添加人员信息，方法remove()删除人员信息，方法modify()修改员工的姓名和编号，方法queryAll()用来查询所有人员的信息，方法query()查询单个员工的个人信息，方法save()可以将公司员工所有人员信息存放之外部EmployeeData.txt文件中。</p>
<ol start="6">
<li>OperationPanel类：</li>
</ol>
<p>该类继承JFrame类，实现ActionListener接口。其中包含JLabel、JtextField、JButton、JeditorPane等Swing控件。在其构造方法中，使用采用了GridBagLayout布局的主面板，采用BoxLayout布局的子面板来放置各个功能模块的控件，并对每个按钮控件添加监听器。重写方法actionPerformed()，使其响应各个按钮对应的方法。在方法main()中初始化界面。</p>
<p>布局原型图：</p>
<p><img src="../images/%E5%B8%83%E5%B1%80%E5%8E%9F%E5%9E%8B%E5%9B%BE.png" alt="布局原型图"></p>
<h2 id="四、主要源程序代码："><a href="#四、主要源程序代码：" class="headerlink" title="四、主要源程序代码："></a>四、主要源程序代码：</h2><ol>
<li>Employee类：</li>
</ol>
<p><img src="../images/Employee%E7%B1%BB.png" alt="Employee"></p>
<ol start="2">
<li>Manager类：</li>
</ol>
<p><img src="../images/Manager%E7%B1%BB.png" alt="Manager"></p>
<ol start="3">
<li>Saler类：</li>
</ol>
<p><img src="../images/Saler%E7%B1%BB.png" alt="Saler"></p>
<ol start="4">
<li>Technician类：</li>
</ol>
<p><img src="../images/Technician%E7%B1%BB.png" alt="Technician"></p>
<ol start="5">
<li>CompanyList类：（部分程序）</li>
</ol>
<p><img src="../images/CompanyList%E7%B1%BB.png" alt="CompanyLis"></p>
<ol start="6">
<li>OperationPanel类：（部分程序）</li>
</ol>
<p><img src="../images/OperationPanel%E7%B1%BB.png" alt="OperationPanel"></p>
<h2 id="五、程序运行结果"><a href="#五、程序运行结果" class="headerlink" title="五、程序运行结果"></a>五、程序运行结果</h2><p><img src="../images/%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png" alt="程序运行结果"></p>
<h2 id="六、源程序"><a href="#六、源程序" class="headerlink" title="六、源程序"></a>六、源程序</h2><p><a href="https://github.com/sakiila/CompanyManagement">CompanyManagement 项目</a></p>
<h2 id="七、运行"><a href="#七、运行" class="headerlink" title="七、运行"></a>七、运行</h2><p>方式一：在右侧 Releases 中下载最新的 CompanyManagement.jar 文件，在本地环境的控制台使用 <code>java -jar CompanyManagement.jar</code> 命令运行即可。</p>
<p>方式二（推荐）：Fork 本项目代码，Clone 到本地环境，使用 Eclipse 或 IntelliJ 打开本项目工程，运行 OperationPanel 类的 main 方法即可。</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>何以解忧</title>
    <url>/2567344891/</url>
    <content><![CDATA[<p>好久没有在一天内读完一本书了。</p>
<p>高中的某一天，偶然从同学手上看到《解忧杂货店》，听说获得了某某大奖。</p>
<p>刚刚又查到，明年会有同名电影上映。莫名的期待。</p>
<p>很喜欢其中写的一句话</p>
<blockquote>
<p>相信我，即使现在再怎么痛苦，明天一定会比今天更美好。——浪矢杂货店。</p>
</blockquote>
<p>全世界七十亿人，每一个人心底都会积淀着小小心事，安安静静，历经这岁月的洗礼。</p>
<p>我也曾几何时想，和人分享那些心里不曾被光照的故事，也许很幼稚，也许很可笑，也许我再也不会提起。</p>
<p>可是故事，会像那首《重生》一样吗，一样被后人在某个温暖的午后轻轻地说起，然后会心一笑吗。</p>
<p>平平淡淡，却不失精彩。</p>
<p>何以解忧？</p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>解忧杂货店</tag>
      </tags>
  </entry>
  <entry>
    <title>SEO 优化笔记</title>
    <url>/3036052883/</url>
    <content><![CDATA[<h2 id="SEO（Search-Engine-Optimization）搜索引擎优化"><a href="#SEO（Search-Engine-Optimization）搜索引擎优化" class="headerlink" title="SEO（Search Engine Optimization）搜索引擎优化"></a>SEO（Search Engine Optimization）搜索引擎优化</h2><ul>
<li>1、搜索引擎工作原理；</li>
<li>2、分为白帽SEO和黑帽SEO</li>
<li>（1）白帽SEO：其改良和规范网站设计的作用，是网站获取合理的流量；</li>
<li>（2）黒帽SEO：乱加关键字，乱加外链，这类行为利用搜索引擎政策缺陷来获取更多用户的访问量，属于欺骗搜索引擎的；</li>
<li>3、如何做白帽SEO：</li>
<li>（1）对网站标题，关键字，描述精心设计，反映网站定位，让搜索引擎知道网站是做什么的；</li>
<li>（2）网站内容优化；（增加关键字密度，增加长尾关键字…）</li>
<li>（3）合理设置Robot.txt文件</li>
<li>（4）网站地图；</li>
<li>（5）增加外链；</li>
<li>（6）网站结构优化；（前端攻城狮的分内事！）</li>
<li>（7）页面代码优化。（前端攻城狮的职责所在！）</li>
</ul>
<h2 id="结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了"><a href="#结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了" class="headerlink" title="结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了"></a>结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了</h2><p>控制首页链接数量中小网站100以内，页面导航、底部导航、锚文字链接等<br>扁平化的目录层次（小蜘蛛跳转3次可以到达网站内任何一个内页，网站的设计主页、栏目、内容页，不要用纵线性的结构<br>导航seo优化（头部、底部、内容部分，主导航、副导航、分类导航，尽量用文字，面包屑导航，在每个网站上留下面包屑，使用户可以了解网站组织形式，放于正文的左上方）<br>内容页面的布局细节<br>左面正文，右面热门文章、相关文章，下面是版权信息及链接，栏目排布：首页123456789下拉选择最赞）<br>网站的加载速度会影响小蜘蛛的爬行，页面最好不要超过100k</p>
<ul>
<li>1，控制首页链接数量</li>
<li>2，扁平化的目录层次</li>
<li>3，导航SEO优化</li>
<li>4，面包屑导航</li>
<li>5，其他细节如分页导航的设计</li>
<li>6，网页加载速度，控制页面大小，最好在100K以内</li>
</ul>
<h2 id="网页代码优化（语义化代码）"><a href="#网页代码优化（语义化代码）" class="headerlink" title="网页代码优化（语义化代码）"></a>网页代码优化（语义化代码）</h2><ul>
<li>A、title标题：强调重点</li>
<li>B、meta keywords关键词：列举几个关键词</li>
<li>C、meta description网页描述：高度概括网页的内容</li>
<li>以上信息不要堆积、重复</li>
</ul>
<p>语义话代码（HTML 标签有自己的意义，在适当的位置用适当的标签）<br>1、h1~h6 多用于标题<br>2、ul 多用于无序列表<br>3、ol 多用于有序列表<br>4、dl 用于定义数据列表<br>5、em、strong 表示强调</p>
<p>div、span 是 html 标签中最没有语义的</p>
<h2 id="有利搜索引擎"><a href="#有利搜索引擎" class="headerlink" title="有利搜索引擎"></a>有利搜索引擎</h2><ul>
<li>1、a：访问外部链接时要加上 rel=”nofollow”，告诉搜索引擎外部链接无需追踪，加上 title 说明</li>
<li>2、h1：搜索引擎外认为 h1 最重要，使用 css 调整，网页正文标题用 h1，副标题用 h2，其他不要乱用 h 标签</li>
<li>3、br 用于文本间的换行，用在 p 内，也可以用 &lt;p &lt;br/ &lt;/p 表示空行</li>
<li>4、caption：表格标题</li>
<li>5、img：使用 title、alt 说明</li>
<li>6、&lt;strong &lt;em 表示强调，&lt;em的权重仅次于&lt;strong,如果只想表示加粗斜体，建议使用&lt;b&lt;i,表示强调则使用&lt;strong&lt;i</li>
<li>7、重要内容 HTML 代码放在最前面（使用 css 改变布局）</li>
<li>8、重要内容不要用 JS 输出（搜索引擎看不懂 JS）</li>
<li>9、尽量少使用 iframe 框架（搜索引擎不喜欢）</li>
<li>10、谨慎使用 display:none（搜索引擎会过滤掉其内容，设置 z-index或text-index：”-999em”； 代替）</li>
<li>11、精简代码</li>
</ul>
]]></content>
      <categories>
        <category>收集</category>
      </categories>
      <tags>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>RoadToRender</title>
    <url>/3652395819/</url>
    <content><![CDATA[<p>使用的语言：Java<br>使用的工具：Eclipse</p>
<h3 id="一、设计思路"><a href="#一、设计思路" class="headerlink" title="一、设计思路"></a>一、设计思路</h3><p>设计五个类，名字分别为MazeFactory、Maze、Check、Main和Test。</p>
<h4 id="1-MazeFactory类"><a href="#1-MazeFactory类" class="headerlink" title="1.MazeFactory类"></a>1.MazeFactory类</h4><p>该类包含一个create()方法，传入第一行字符串，使用二维数组进行初始化一个渲染网格，然后返回一个Maze对象。</p>
<h4 id="2-Maze类"><a href="#2-Maze类" class="headerlink" title="2.Maze类"></a>2.Maze类</h4><p>该类有一个构造方法，参数为二维数组。另外有一个render()方法，传入第二行字符串，连通网格，并使网格字符化。</p>
<h4 id="3-Check类"><a href="#3-Check类" class="headerlink" title="3.Check类"></a>3.Check类</h4><p>该类有两个方法：checkLine1()和checkLine2()。分别对输入的第一行和第二行字符串做检查，返回一个字符串。</p>
<h4 id="4-Main类"><a href="#4-Main类" class="headerlink" title="4.Main类"></a>4.Main类</h4><p>该类是主类，有一个main()方法。该方法读取控制台输入的字符串，然后调用Check类的方法检查，再返回一个字符串作为结果。</p>
<h4 id="5-Test类"><a href="#5-Test类" class="headerlink" title="5.Test类"></a>5.Test类</h4><p>测试类，用来运行程序，并在控制台输出结果。</p>
<h3 id="二、UML图"><a href="#二、UML图" class="headerlink" title="二、UML图"></a>二、UML图</h3><p><img src="https://upload-images.jianshu.io/upload_images/2348575-d734d316af894e16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="RoadToRender-UML"></p>
<h3 id="三、程序测试"><a href="#三、程序测试" class="headerlink" title="三、程序测试"></a>三、程序测试</h3><h4 id="1-正常输入："><a href="#1-正常输入：" class="headerlink" title="1.正常输入："></a>1.正常输入：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 3</span><br><span class="line">0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1</span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<pre><code>Please input:
3 3
0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1
The result is:
[W] [W] [W] [W] [W] [W] [W] 
[W] [R] [W] [R] [R] [R] [W] 
[W] [R] [W] [R] [W] [R] [W] 
[W] [R] [R] [R] [R] [R] [W] 
[W] [W] [W] [R] [W] [R] [W] 
[W] [R] [R] [R] [W] [R] [W] 
[W] [W] [W] [W] [W] [W] [W] 

End.
</code></pre>
<h4 id="2-无效的数字："><a href="#2-无效的数字：" class="headerlink" title="2.无效的数字："></a>2.无效的数字：</h4><pre><code>3 %
0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1
</code></pre>
<p>运行结果：</p>
<pre><code>Please input:
3 %
0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1
The result is:
Invalid number format.
End.
</code></pre>
<h4 id="3-数字超出预定范围："><a href="#3-数字超出预定范围：" class="headerlink" title="3.数字超出预定范围："></a>3.数字超出预定范围：</h4><pre><code>3 3
8,1 0,4;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1
</code></pre>
<p>运行结果：</p>
<pre><code>Please input:
3 3
8,1 0,4;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1
The result is:
Incorrect command format.
End.
</code></pre>
<h4 id="4-格式错误；"><a href="#4-格式错误；" class="headerlink" title="4.格式错误；"></a>4.格式错误；</h4><pre><code>3 3
0 1 0 2 0 0 1 0 0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1
</code></pre>
<p>运行结果：</p>
<pre><code>Please input:
3 3
0 1 0 2 0 0 1 0 0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1
The result is:
Incorrect command format.
End.
</code></pre>
<h4 id="5-连通性错误："><a href="#5-连通性错误：" class="headerlink" title="5.连通性错误："></a>5.连通性错误：</h4><pre><code>3 3
0,1 0,3;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1
</code></pre>
<p>运行结果：</p>
<pre><code>Please input:
3 3
0,1 0,3;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1
The result is:
Incorrect command format.
End.
</code></pre>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>初读《皮囊》</title>
    <url>/2023509924/</url>
    <content><![CDATA[<p>最初知道这本书的时候，是某个app上推荐的。</p>
<p>很喜欢这个名字。皮囊。每个人都是披着皮囊的。</p>
<p>都说一壶酒，愈酿愈香。可能《皮囊》也是，越读越能悟出大道理。</p>
<p>就像这本书开头韩寒写的一句话，“我会将这本书带上旅途，在每个静谧陌生的夜晚拿出来慢慢看”。</p>
<p>文字很干净，读起来很舒服。</p>
<p>以上。</p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>皮囊</tag>
      </tags>
  </entry>
  <entry>
    <title>博客脚印</title>
    <url>/1487202510/</url>
    <content><![CDATA[<h1 id="boo516-com"><a href="#boo516-com" class="headerlink" title="boo516.com"></a>boo516.com</h1><p>最初的域名是 boo516.com，搭建在 Godaddy 服务中。截图时间是 2016 年 11 月 5 日。</p>
<p><img src="../images/boo516_com.jpg" alt="boo516_com"></p>
<h1 id="hibaobo-com"><a href="#hibaobo-com" class="headerlink" title="hibaobo.com"></a>hibaobo.com</h1><p>后来换了纯英文域名，也将网站服务搭建在各种不同的服务器上。</p>
<p>比如搬瓦工、腾讯云、知了云等等。也使用了 WordPress 这些博客系统。</p>
<p>不过因为学业和工作，暂停了挺长时间，也没留下太多网站的记录。</p>
<p><img src="../images/hibaobo_com.png" alt="hibaobo_com"></p>
<h1 id="baobo-me"><a href="#baobo-me" class="headerlink" title="baobo.me"></a>baobo.me</h1><p>有一天觉得原来的域名太长了，在 NameCheap 上购买了 .me 的域名，非常喜欢。</p>
<p>网站的服务也从知了云，到老薛主机，最后到 Github Pages。</p>
<p>来来回回折腾着，决定了现在的最终形式。</p>
<p>后续会多花些时间在博客上，写写教程，聊聊想法。</p>
<p>2022年，也要加油呀。</p>
]]></content>
      <categories>
        <category>收集</category>
      </categories>
      <tags>
        <tag>记录</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 WMITools 解除浏览器被 hao123 劫持</title>
    <url>/2135150665/</url>
    <content><![CDATA[<p>最近使用 Chrome 浏览器时，主页会自动变成 hao123.com。改 hosts，清理注册表都无法彻底解决该问题。</p>
<p>经过搜索后，发现可以使用 WMITools 工具进行清理 VBScript 调用系统服务项。</p>
<p><a href="http://www.iefans.net/ie-zhuye-jiechi-www-2345-com-kunown/">原网址</a></p>
<h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><p>链接：<a href="http://pan.baidu.com/s/1nuTC9Kl">http://pan.baidu.com/s/1nuTC9Kl</a> 密码：1qdv</p>
<p>安装最好使用默认地址，一路确定即可。</p>
<h1 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h1><p>打开安装文件夹，右键 wbemeventviewer.exe 程序，使用管理员身份打开。</p>
<p>点击左上角钢笔形状按钮<br><img src="http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206223953.jpg"><br> 点击OK<br> <img src="http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206224008.jpg"><br> 再次点击OK<br> <img src="http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206224031.jpg"><br> 将此文件夹下的文件右键删除<br><img src="https://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206224059.jpg"></p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>右键桌面上的浏览器，属性中目标一栏，将 hao123 等网址删除。</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>hao123</tag>
      </tags>
  </entry>
  <entry>
    <title>如何获取 Apple Music 学生会员资格</title>
    <url>/4038172740/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://support.apple.com/zh-cn/HT205928">Apple官方说明</a></p>
</blockquote>
<p>既然 Apple 给了这个优惠政策，作为新时代大学生的我们为什么不薅这块羊毛呢？</p>
<p>中国大学生要以学生会员资格加入 Apple Music 时，需要通过UNiDAYS（一项学生验证服务）的确认。然而通过UNiDAYS的验证又需要提供个人学校电子邮件地址，即以.edu为结尾的邮箱。但是在中国地区（除了台湾）各大高校几乎不提供这种邮箱。如下图所示，我所在的学校的学校邮箱仅对教职工开放申请。<br><img src="../images/studen_email_apply.jpg"></p>
<p>那么对于没有教育邮箱的大学生来说，这个Apple Music优惠政策似乎就是鸡肋。</p>
<p>别慌，要永远相信客服。</p>
<h2 id="我是如何通过UNiDAYS的验证"><a href="#我是如何通过UNiDAYS的验证" class="headerlink" title="我是如何通过UNiDAYS的验证"></a>我是如何通过UNiDAYS的验证</h2><p>最开始，我是申请到了@tp.edu.tw的台湾邮箱，然后用此邮箱申请学生会员资格。当天晚上就收到回信说这个邮箱不能验证我的学生身份，并说“If you do not have a personal institution email address please reply to this email sending us a scan or good quality photograph of your current student ID card”。很明显，Apple了解了中国大学生少有人拥有教育邮箱，于是只用提供给他们个人学生证的扫描图即可。</p>
<p><img src="media/student_unidays.jpg" alt="student_unidays"></p>
<p>然后我传了两张照片过去。UNiDAYS的客服挺热情的，回信中让我提供学校网站以确认系统验证。</p>
<p><img src="media/studen_thanks_contact.jpg" alt="studen_thanks_contact"></p>
<p>于是我附上了学校官方网站（注意是为.edu.cn为结尾的网址），并且贴上了学信网的学籍信息图片（以防万一）。</p>
<p><img src="media/studen_email.jpg" alt="studen_email"></p>
<p>20分钟后就收到回信，确认了我的学生信息。登录<a href="https://www.myunidays.com/CN/zh-CN">UNiDAYS</a>  </p>
<p><img src="media/student_status.jpg" alt="student_status"></p>
<p>那么，学生优惠走起~<br><img src="media/student_premium.jpg" alt="student_premium"></p>
<h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>不要怕麻烦，多和客服沟通，很多事情都可以想方法解决。<br>祝好运。</p>
]]></content>
      <categories>
        <category>收集</category>
      </categories>
      <tags>
        <tag>Music</tag>
      </tags>
  </entry>
  <entry>
    <title>后端工程师学习路径</title>
    <url>/3201199714/</url>
    <content><![CDATA[<h1 id="整体脉络"><a href="#整体脉络" class="headerlink" title="整体脉络"></a>整体脉络</h1><p> 操作系统 → 计算机网络 → 数据结构与算法 → 编程语言 → 数据库 → 框架 → 中间件 → 架构思维</p>
<h1 id="资料路径"><a href="#资料路径" class="headerlink" title="资料路径"></a>资料路径</h1><table>
<thead>
<tr>
<th>技能</th>
<th>相关资料</th>
</tr>
</thead>
<tbody><tr>
<td>计算机组成原理</td>
<td>计算机科学速成课、《计算机是怎样跑起来的》、《程序是怎样跑起来的》、《编码》、掘金《计算机是怎样运行的》</td>
</tr>
<tr>
<td>操作系统</td>
<td>《操作系统导论》、《现代操作系统》、《深入理解计算机系统》、MIT 608、极客时间《操作系统45讲》</td>
</tr>
<tr>
<td>计算机网络</td>
<td>《计算机网络自顶向下》</td>
</tr>
<tr>
<td>数据结构与算法</td>
<td>极客时间《数据结构与算法之美》</td>
</tr>
<tr>
<td>Linux</td>
<td>《Linux高性能服务器编程》</td>
</tr>
<tr>
<td>Java 基础与集合</td>
<td>《Java 实战》、《Effective Java》</td>
</tr>
<tr>
<td>JVM</td>
<td>《深入理解 Java 虚拟机》、极客时间《深入拆解 Java 虚拟机》</td>
</tr>
<tr>
<td>Netty</td>
<td>极客时间《Netty 源码剖析与实战》</td>
</tr>
<tr>
<td>Java 并发编程</td>
<td>《Java 并发编程的艺术》、极客时间《Java 并发编程实战》</td>
</tr>
<tr>
<td>Spring</td>
<td><a href="https://javadoop.com/">JavaDoop</a>、《Spring 源码深度解析》、《极客 Spring 编程常见错误 50 例》</td>
</tr>
<tr>
<td>Spring Boot</td>
<td>慕课网《小马哥 Spring Boot 2.0 深度实践》</td>
</tr>
<tr>
<td>设计模式</td>
<td>极客时间《设计模式之美》</td>
</tr>
<tr>
<td>单元测试</td>
<td>Spock</td>
</tr>
<tr>
<td>MySQL</td>
<td>《高性能 MySQL》、《MySQL 技术内幕》、极客时间《MySQL 45讲》、掘金《MySQL 是怎样运行的》</td>
</tr>
<tr>
<td>分布式事务</td>
<td>极客时间《分布式协议与算法》</td>
</tr>
<tr>
<td>RPC</td>
<td>极客时间《网络编程实战》、极客时间《RPC 实战与核心原理》</td>
</tr>
<tr>
<td>Dubbo</td>
<td>拉勾教育《Dubbo 源码解读》</td>
</tr>
<tr>
<td>ZooKeeper</td>
<td>《从Paxos 到 Zookeeper》</td>
</tr>
<tr>
<td>Spring Cloud</td>
<td>慕课网《Spring Cloud 微服务开发实践》</td>
</tr>
<tr>
<td>Redis</td>
<td>《Redis 设计与实现》，《Redis 开发与运维》、极客时间《Redis 核心技术与实战》</td>
</tr>
<tr>
<td>Kafka</td>
<td>《深入理解 Kafka》、极客时间《Kafka 核心技术与实战》</td>
</tr>
<tr>
<td>Docker</td>
<td>慕课网《跟 BAT 技术专家学 Docker + K8s》</td>
</tr>
<tr>
<td>大数据</td>
<td>极客时间《从 0 开始学大数据》</td>
</tr>
<tr>
<td>代码整洁</td>
<td>《代码整洁之道》、《重构》、《修改代码的艺术》</td>
</tr>
<tr>
<td>工作方法</td>
<td>极客时间《大厂晋升指南》、极客时间《左耳听风》</td>
</tr>
<tr>
<td>架构方法论</td>
<td>《数据密集型应用系统设计》、极客时间《从 0 开始学架构》、极客时间《后端技术面试》</td>
</tr>
<tr>
<td>外语</td>
<td>极客时间《互联网人的英语私教课》</td>
</tr>
</tbody></table>
<p>持续更新中。</p>
]]></content>
      <categories>
        <category>收集</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>学习</tag>
        <tag>路径</tag>
      </tags>
  </entry>
  <entry>
    <title>临时邮箱</title>
    <url>/172582584/</url>
    <content><![CDATA[<h1 id="临时邮箱有什么用？"><a href="#临时邮箱有什么用？" class="headerlink" title="临时邮箱有什么用？"></a>临时邮箱有什么用？</h1><p>有时候注册某些论坛必须提供邮箱，但你又不想使用你常用的邮箱，因为你不想收到不必要的邮件。又有些时候你只是想试用一次某些服务，不想使用常用邮箱注册。临时邮箱应运而生，在注册这些不重要的服务时使用临时邮箱作为替身是个很好的选择。临时邮箱具有匿名性，能有效减少垃圾邮件；同时具有时效性，邮箱在短时间内会自毁。</p>
<h1 id="二十五个临时邮箱网站"><a href="#二十五个临时邮箱网站" class="headerlink" title="二十五个临时邮箱网站"></a>二十五个临时邮箱网站</h1><p>1.GuerrillaMail-提供15分钟的临时邮箱，你能接收和回复邮件。<a href="http://www.guerrillamail.com/">http://www.guerrillamail.com/</a></p>
<p>2.SpamBox-提供可自定义的邮箱时限，并能将邮件转发到你设定的邮箱。<a href="http://spambox.us/">http://spambox.us/</a></p>
<p>3.<a href="http://10minutemail.com/10MinuteMail/index.html">http://10minutemail.com/10MinuteMail/index.html</a> 10 Minute Mail-顾名思义，提供10分钟的临时邮箱，有中文版！</p>
<p>4.NowMyMail-是个很好用的暂时信箱，只要按一个键就会得到一个时效一小时的暂时信箱。<a href="http://www.nowmymail.com/">http://www.nowmymail.com</a></p>
<p>5.PookMail- 免费的暂时信箱，目前支持多普通话言，只要在右方输入一个帐号，点选进入后就能使用该E-Mail收取信件。<a href="http://pookmail.blogspot.com/">http://pookmail.blogspot.com/</a></p>
<p>6.Hidzz -提供一个5天期限的临时邮箱，你可以在期限内登录临时邮箱查收邮件，登录邮箱的ID是你的真实邮箱。<a href="http://hidzz.com/">http://hidzz.com/</a></p>
<p>7.MailCatch-和其它临时邮箱相比有一个比较突出的特点，像Gmail那样，提供邮件的RSS输出。<a href="http://mailcatch.com/en/disposable-email">http://mailcatch.com/en/disposable-email</a></p>
<p>8.Incognito Mail-提供1小时的临时邮箱，用户名可以自定义。<a href="http://www.incognitomail.com/">http://www.incognitomail.com/</a></p>
<p>9.MintEmail-和MailZIla一样，一打开就生成邮箱，免除多余的点击，而且邮箱地址会自动复制到粘贴板，方便使用。<a href="http://www.mintemail.com/">http://www.mintemail.com/</a></p>
<p>10.Dodgeit-又一个提供邮件RSS输出的临时邮箱服务。<a href="http://dodgeit.com/">http://dodgeit.com/</a></p>
<p>11.SpamGourmet-需要注册方可使用，有中文版。<a href="http://www.spamgourmet.com/">http://www.spamgourmet.com/</a></p>
<p>12.E4ward-也是一个需要注册的临时邮箱服务，能将邮件转发到指定的邮箱。<a href="http://www.e4ward.com/">http://www.e4ward.com/</a></p>
<p>13.SayNotoSpams -提供15分钟时限的临时邮箱。<a href="http://www.saynotospams.com/">http://www.saynotospams.com/</a></p>
<p>14.GishPuppy-需要注册方可使用，邮件自动转发到指定邮箱，当你不需要这个邮箱时，可手动销毁。<a href="http://www.gishpuppy.com/">http://www.gishpuppy.com/</a></p>
<p>15.Mailinator-界面很漂亮，而且有多个邮箱后缀可选。<a href="http://www.mailinator.com/">http://www.mailinator.com/</a></p>
<p>16.Jetable-一个提供繁体中文版的临时邮箱服务。<a href="http://www.jetable.org/zh/index">http://www.jetable.org/zh/index</a></p>
<p>17.MailEater-无需注册，但有弹出窗口广告。<a href="http://www.maileater.com/">http://www.maileater.com/</a></p>
<p>18.Block Filter-页面打开自动生成邮箱并复制到剪贴板，并实时地自动检查新邮件。<a href="http://www.blockfilter.com/">http://www.blockfilter.com/</a></p>
<p>19.KasMail-需要注册，邮箱时限可以自由定义，可以长达一个月或永久不销毁。<a href="http://www.kasmail.com/">http://www.kasmail.com/</a></p>
<p>20.ShieldMail-无需注册，但广告较多，加载较慢。<a href="http://www.shieldemail.com/">http://www.shieldemail.com/</a></p>
<p>21.十分钟临时邮箱 <a href="http://mail.bccto.me/">http://mail.bccto.me/ </a>十分钟临时邮箱</p>
<p>22.五天的免费临时邮箱，多种语言界面，多种邮箱后缀可选。 <a href="http://www.yopmail.com/zh/">http://www.yopmail.com/zh/ </a></p>
<p>22.二十四小时免费临时邮箱：<a href="http://24mail.chacuo.net/zhtw">http://24mail.chacuo.net/zhtw</a></p>
<p>23.MailDrop：<a href="http://maildrop.cc/">http://maildrop.cc/</a> 24小时的免费邮箱。可以容纳十封邮件，只能接收纯100kb以下的文本或html邮件。</p>
<p>24.MailDude:<a href="http://www.maildu.de/">http://www.maildu.de/</a>只需要在网站上输入自己的真实邮箱地址，即可生成一个临时邮箱地址，让你使用<a href="mailto:&#x4e;&#x61;&#x6d;&#101;&#x40;&#x6d;&#97;&#105;&#x6c;&#x64;&#x75;&#46;&#100;&#101;">&#x4e;&#x61;&#x6d;&#101;&#x40;&#x6d;&#97;&#105;&#x6c;&#x64;&#x75;&#46;&#100;&#101;</a>来收信，并且只能收取邮件，而不同发送邮件。支持中文显示。MailDude 会为你收取邮件并保存一小时，让你有足够的时间可以点选邮件内的确认链结，帮助你完成帐号验证。特别是你想测试一些网络服务，又不希望泄漏自己的真实信箱时。不过切记不要使用MailDude 来接收密码、或具有私人资讯的邮件，因为每个MailDude 信箱都是公开的、且每个人都能够存取该讯息。</p>
<p>25.Forward Cat：<a href="http://www.forward.cat/">http://www.forward.cat/</a> 一个提供临时邮箱服务的平台，通过该工具可以让用户注册网络上的各种服务，而不需使用真实的邮箱，避免被恶意骚扰，同时还可以解决很多未知吧临时邮箱拒之门外的弊端，有了邮件转存发送服务即可解决。</p>
<p><em>所有资源来自于网络。</em></p>
]]></content>
      <categories>
        <category>收集</category>
      </categories>
      <tags>
        <tag>邮箱</tag>
      </tags>
  </entry>
  <entry>
    <title>外包</title>
    <url>/1326063135/</url>
    <content><![CDATA[<h1 id="外包定义"><a href="#外包定义" class="headerlink" title="外包定义"></a>外包定义</h1><ol>
<li>外包定义：主要看人选所做项目/产品性质，若项目/产品为外包性质，则定义为外包人员。</li>
<li>外包性质：<br>人力外包：人力资源外包/劳务派遣，一般为驻场形式。<br>项目外包：阶段性项目开发，驻场/非驻场形式。<br>业务外包：业务流程外包。</li>
<li>特别说明：<br>外包公司简介一般带有的关键词：IT服务、技术开发服务、信息技术解决方案、软件服务等。<br>如在外包公司内负责内部系统开发，不算为外包。</li>
</ol>
<h1 id="外包公司列表"><a href="#外包公司列表" class="headerlink" title="外包公司列表"></a>外包公司列表</h1><table>
<thead>
<tr>
<th>编号</th>
<th>外包类型</th>
<th>企业名称</th>
<th>主要服务公司/具体部门做外包项目</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>人力外包</td>
<td>中软国际</td>
<td>华为、中国移动、中国联通、阿里云、百度等</td>
</tr>
<tr>
<td>2</td>
<td>人力外包</td>
<td>软通动力</td>
<td>华为、微软、IBM、联想、中国银行、中国人寿、中石化、中石油、国家电网等</td>
</tr>
<tr>
<td>3</td>
<td>人力外包</td>
<td>文思海辉</td>
<td>微软、IBM、因特尔、花旗银行、索尼以及国内阿里巴巴、腾讯、百度、中移动、联通等</td>
</tr>
<tr>
<td>4</td>
<td>项目外包</td>
<td>大展科技</td>
<td>从欧美及日本客户承接软件项目</td>
</tr>
<tr>
<td>5</td>
<td>人力外包</td>
<td>亿达信息</td>
<td>富士施乐、SOFTBANK、UNISYS、日本乐天、SONY、阪急阪神、腾讯、阿里巴巴、华为、阿斯利康、先正达、赛诺菲、武田制药、美的、顺丰、唯品会、华夏人寿、天安人寿等</td>
</tr>
<tr>
<td>6</td>
<td>人力外包</td>
<td>法本信息</td>
<td>平安、顺丰、腾讯、中国联通、OPPO、苏宁、万科等</td>
</tr>
<tr>
<td>7</td>
<td>人力外包</td>
<td>武汉佰钧成</td>
<td>IBM、华为、Google、HP、Alcatel-Lucent、NTT Data等</td>
</tr>
<tr>
<td>8</td>
<td>人力外包&amp;项目外包</td>
<td>紫川软件</td>
<td>平安、中国移动、中国建设银行、华为、中兴等</td>
</tr>
<tr>
<td>9</td>
<td>人力外包</td>
<td>拓保软件</td>
<td>平安、顺丰、宝能等</td>
</tr>
<tr>
<td>10</td>
<td>人力外包</td>
<td>Infosys(印孚瑟斯)</td>
<td>微软、英特尔、SAP、3M、Arrow、Cisco等</td>
</tr>
<tr>
<td>11</td>
<td>人力外包</td>
<td>上海易立德</td>
<td>华为、美的、Vivo、长安汽车等</td>
</tr>
<tr>
<td>12</td>
<td>人力外包</td>
<td>博彦科技</td>
<td>字节跳动、顺丰等</td>
</tr>
<tr>
<td>13</td>
<td>项目外包</td>
<td>易思博软件</td>
<td>IBM、HP、NEC、Fujitsu、卓望等</td>
</tr>
<tr>
<td>14</td>
<td>人力外包</td>
<td>网新科技（网新新思）</td>
<td></td>
</tr>
<tr>
<td>15</td>
<td>人力外包</td>
<td>雁联计算系统有限公司</td>
<td>银行、各类交易所、第三方支付公司、互联网金融公司等金融及泛金融机构等</td>
</tr>
<tr>
<td>16</td>
<td>人力外包</td>
<td>上海启明软件</td>
<td></td>
</tr>
<tr>
<td>17</td>
<td>人力外包</td>
<td>上海华腾软件</td>
<td></td>
</tr>
<tr>
<td>18</td>
<td>项目外包</td>
<td>神州数码</td>
<td></td>
</tr>
<tr>
<td>19</td>
<td>项目外包</td>
<td>IBM</td>
<td>大连IBM专门做外包</td>
</tr>
<tr>
<td>20</td>
<td>项目外包</td>
<td>东软集团</td>
<td></td>
</tr>
<tr>
<td>21</td>
<td>项目外包</td>
<td>浪潮软件</td>
<td></td>
</tr>
<tr>
<td>22</td>
<td>项目外包</td>
<td>群硕软件</td>
<td>微软、摩托罗拉、Omnitracs、英特尔、SAP、沃尔玛、联合利华、银联、万科、万达、Vivo、康师傅等</td>
</tr>
<tr>
<td>23</td>
<td>项目外包</td>
<td>金证科技</td>
<td>银行外包开发</td>
</tr>
<tr>
<td>24</td>
<td>项目外包</td>
<td>信雅达</td>
<td>华为等</td>
</tr>
<tr>
<td>25</td>
<td>项目外包</td>
<td>大连华信</td>
<td>Pivotal等</td>
</tr>
<tr>
<td>26</td>
<td>人力外包&amp;项目外包</td>
<td>信必优</td>
<td>花旗银行等</td>
</tr>
<tr>
<td>27</td>
<td>人力外包&amp;业务外包</td>
<td>易宝软件</td>
<td>阿里、华为等</td>
</tr>
<tr>
<td>28</td>
<td>项目外包</td>
<td>慧讯软件</td>
<td>国知名跨平台安全解决方案供应商Centrify、知名欧美玩具供应商Mattel（美泰）、Hasbro（孩之宝）、移动电话供应商Philip、Nokia等</td>
</tr>
<tr>
<td>29</td>
<td>项目外包</td>
<td>恒拓开源</td>
<td>航空公司、机场及民航保障企业</td>
</tr>
<tr>
<td>30</td>
<td>人力外包</td>
<td>广州赛意信息</td>
<td>华为</td>
</tr>
<tr>
<td>31</td>
<td>人力外包</td>
<td>中兴软件技术（南昌）有限公司</td>
<td>中兴</td>
</tr>
<tr>
<td>32</td>
<td>项目外包</td>
<td>华通科技</td>
<td>对外合作部是做中兴的外包工作</td>
</tr>
<tr>
<td>33</td>
<td>人力外包</td>
<td>中软海纳</td>
<td>中兴</td>
</tr>
<tr>
<td>34</td>
<td>人力外包</td>
<td>微创科技</td>
<td>腾讯</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>收集</category>
      </categories>
      <tags>
        <tag>外包</tag>
      </tags>
  </entry>
  <entry>
    <title>我是如何用 Feed43 为教务处网站制作 RSS 的</title>
    <url>/492101974/</url>
    <content><![CDATA[<p>教务处网站当年有正方制作，并未考虑到RSS源。每次去查阅通知都需要主动打开网站检索，于是试图利用Feed43将通知被动的发送到个人邮箱中。</p>
<h2 id="使用Feed43"><a href="#使用Feed43" class="headerlink" title="使用Feed43"></a>使用Feed43</h2><p>打开 feed43.com，点击创建 feed。输入教务处通知网站网址。成功读取。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2348575-d7d3475a55dc734d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>
<h2 id="代码抓取"><a href="#代码抓取" class="headerlink" title="代码抓取"></a>代码抓取</h2><p>第二步时，我遇到困难。教务处网站代码的div标签过多，尝试多次都无法抓取到内容。<br>于是使用教务处首页网址进行读取。重新改写检索规则。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2348575-000e0d42c61a1899.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>
<p>成功。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2348575-78d9e679281a5200.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>
<h2 id="检索代码："><a href="#检索代码：" class="headerlink" title="检索代码："></a>检索代码：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;%&#125;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">title</span>=<span class="string">&#123;%&#125;</span>&gt;</span>&#123;%&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;time&quot;</span>&gt;</span>&#123;%&#125;</span><br><span class="line">&#123;%&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;*&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&#123;*&#125;</span><br></pre></td></tr></table></figure>

<h2 id="RSS如下："><a href="#RSS如下：" class="headerlink" title="RSS如下："></a>RSS如下：</h2><p><a href="http://feed43.com/wust-notify.xml">http://feed43.com/wust-notify.xml</a></p>
<p>2016年11月27日 12:28:05<br>自己做的rss源还是有很多不足的地方，过段时间再来修改。<br>大神勿喷。</p>
<p>2016年11月30日 23:19:39<br>新检索代码测试成功。可以推送到邮箱。</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>RSS</tag>
      </tags>
  </entry>
  <entry>
    <title>我们终此一生</title>
    <url>/3890282637/</url>
    <content><![CDATA[<blockquote>
<p>我们终此一生，就是要摆脱他人的期待，找到真正的自己。</p>
</blockquote>
<p>《无声告白》讲述了莉迪亚自杀前后，她的一家人的生活发生的一系列变化。故事细水长流，生动的人物动作，丰富的心理活动，仿佛我们在这些角色的脑海里可以随意走动，随意聆听。十二章，每一章似乎都在刻画一个或者一次人物，幼时被视为“Ching Chong”的中国父亲詹姆斯，想成为医生却被家庭琐事耽误的母亲玛丽琳，疼爱妹妹的哥哥内斯，被寄予太多期望的莉迪亚以及常常被忽视的妹妹汉娜。</p>
<p>故事开头第一句话便是：莉迪亚死了。莉迪亚死了，她试图从湖中心游到岸边，以此来证实自己不被压力妥协不被自己许下的承诺兑现，可是，莉迪亚不会游泳。</p>
<p>莉迪亚的死那么真实，真实到她似乎从来不存在一样。她更像是集成了书中其他人物身上的一部分，妈妈对医学的渴望，爸爸的中国血统，哥哥考入哈佛的成绩单。玛丽琳从小就立志成为一名优秀的医生，成年后的婚姻犹如一座大山压在身上，然后在某一天，突然离家出走去外地学习考取医生资格。虽然因为有孕在身，玛丽琳放弃了，但她把这些希望寄托给女儿莉迪亚。每一年女儿生日，玛丽莲都送给她一本本医学相关的书籍，《人体解剖学彩图》、《医学的故事》等等。而詹姆斯，偷渡到美国的中国人生下来的孩子，从小便和那些棕色头发，蓝色眼睛的孩子不同，被嘲笑被挖苦被捉弄，没有什么朋友。而仅仅是外貌上的不同，詹姆斯也害怕自己的女儿受到这样的对待，因为女儿继承了他的褐色眼睛。和女儿的谈话话题永远都是多交好友，“多交一些朋友总不是什么坏事”。而内斯，一直想成为父母眼中的乖孩子，希望得到表扬与赞赏。可以这样说，是他们害死了莉迪亚，是他们将莉迪亚逼上绝路。</p>
<p>只是，莉迪亚真的存在吗，还是，莉迪亚是他们臆想出来的人物，承载了他们的愿望。回头看看书封面的那句话“我们终此一生，就是要摆脱他人的期待，找到真正的自己”，詹姆斯，玛丽琳他们最后真的找到真正的自己了吗？</p>
<p>愿世上的人，不被压力摧毁不被感情绊倒，“找到真正的自己”。</p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>无声告白</tag>
      </tags>
  </entry>
  <entry>
    <title>我过得一点也不快乐</title>
    <url>/2864306879/</url>
    <content><![CDATA[<p>大概有五年了。我过得不快乐。</p>
<p>活得人模狗样，从没有遵循自己内心真正的想法。</p>
<p>好多次，在床上辗转反侧的时候，会想一死了之。</p>
<p>我曾幼稚地认为我获得了真正的感情，可是现在呢？各奔东西，不闻不问。</p>
<p>我想我早已得了抑郁症。我也不知道还有什么东西能让我快乐。</p>
<p>这三个月啊，真是我生命中最难过的日子了。</p>
<p>希望以后的我再回头看看的时候，轻轻地笑一下就好了。</p>
<p>希望以后的你，过得快乐。</p>
<p>也希望以后的她，和你一样快乐。</p>
<p>我有什么好伤心的。我连二十岁还不到，不必为这些小事牵肠挂肚。</p>
<p>他们没做错什么，错的是我。</p>
<p>我太小气了，太自私了，太吝啬了。</p>
<p>接下来是该好好看看高尔基写的《人性的弱点》了。</p>
<p>没什么大不了的呀，总会过去的。</p>
<p>是不是？</p>
<p>写于 2016 年 11 月 28 日</p>
]]></content>
      <categories>
        <category>沉思</category>
      </categories>
      <tags>
        <tag>自白</tag>
      </tags>
  </entry>
  <entry>
    <title>走向开源之路</title>
    <url>/2465020203/</url>
    <content><![CDATA[<h1 id="首先你需要："><a href="#首先你需要：" class="headerlink" title="首先你需要："></a>首先你需要：</h1><ol>
<li>畅通的网络环境；</li>
<li>一个Github账号；</li>
<li>本机安装Git软件；</li>
<li>Don’t panic !</li>
</ol>
<h1 id="Fork-项目"><a href="#Fork-项目" class="headerlink" title="Fork 项目"></a>Fork 项目</h1><p>首先，在Github仓库Fork他人项目。然后复制自己仓库的项目地址（HTTP或SSH都可），在本地Clone下来。</p>
<p>如果项目文件体积大，可使用如下方式：</p>
<ol>
<li>（推荐）在浏览器上安装Github加速插件，使用其中的镜像地址； Clone完代码，建议执行<code>git remote set-url origin 自己的Github项目地址</code> 。</li>
<li>（推荐）在gitee.com网站，导入Github项目，使用gitee的项目地址进行Clone； Clone完代码，建议执行<code>git remote set-url origin 自己的Github项目地址</code> 。</li>
<li>使用命令 <code>git clone --depth=1</code> 进行Clone最新一次的提交代码，之后使用<code>git pull --unshallow</code> 。</li>
</ol>
<h1 id="同步项目代码"><a href="#同步项目代码" class="headerlink" title="同步项目代码"></a>同步项目代码</h1><ol>
<li>添加上游项目地址： <code>git remote add upstream 原始项目地址</code> 查看远程地址： <code>git remote -v</code> 查看远程分支： <code>git branch -r</code></li>
<li>拉取最新代码： <code>git fetch upstream</code></li>
<li>合并最新代码： 本地代码<strong>无修改</strong>：<code>git rebase upstream/master</code> 本地代码<strong>有修改</strong>：<code>git merge upstream/master</code></li>
<li>将最新代码上传到自己的远程仓库： <code>git push</code></li>
</ol>
<h1 id="构建项目（使用Maven）"><a href="#构建项目（使用Maven）" class="headerlink" title="构建项目（使用Maven）"></a>构建项目（使用Maven）</h1><p>确保编译版本和项目建议版本相一致。</p>
<p>执行命令<code>mvn clean install</code> ，或命令<code>mvn clean install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true -Dcheckstyle.skip=true -e</code> 跳过测试等过程。</p>
<p>如果某个模块构建失败，多次执行<code>mvn install</code> 即可。</p>
<p>参考链接：</p>
<p><a href="https://www.yuque.com/docs/share/eedab2ad-6486-4690-b048-d9bb9a6b4a4a">Soul 之 PR 提交流程 · 语雀</a></p>
<p><a href="http://wuchong.me/blog/2019/02/12/how-to-become-apache-committer/">如何从小白成长为 Apache Committer?</a></p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>开源</tag>
      </tags>
  </entry>
  <entry>
    <title>白茶花，红茶花</title>
    <url>/3287404792/</url>
    <content><![CDATA[<p>今天正好是茶花女逝世 170 周年，对了，《茶花女》是来自于真实的故事。</p>
<p>阿尔丰西娜·普莱西就是茶花女的原型，命途多舛，二十三岁即离开了人世。小仲马深深地爱着，对她的离去痛苦不堪。阿尔丰西娜“既是一个纯洁无瑕的贞女，又是一个彻头彻尾的娼妇”。</p>
<p>读到后来玛格丽特死之前写给阿尔芒的日记，里面才解释了离开他的原因。玛格丽特多么善良，她不愿阿尔芒的妹妹失去美好的婚姻，不愿玷污他家高贵的姓氏。可又多么无奈，不知真情的阿尔芒却和另一个情妇一起折磨一起羞辱她。这样痛苦地死去，又没能见到心上人一眼，恐怕谁也承受不了吧。</p>
<p>看到玛格丽特和阿尔芒在布吉瓦尔这个美丽的乡村生活时，会觉得爱情多美纯洁美好，不论债务多么沉重，感情就该有感情它该有的幸福模样。看到玛格丽特一句话没留下就离开阿尔芒，以为她仍旧视金钱为重，把这种可能会消失的爱情当后患，可是后来她病倒了，一边思恋着阿尔芒，一边拖着病写下日记，为的就是希望在她死后，阿尔芒会原谅她的离开，她的不辞而去。正是做出这样的牺牲，玛格丽特才是真正的爱着他。爱情多伟大，但在现实面前，却又那么不堪一击。</p>
<p>谨以此纪念茶花女。</p>
<p>2017 年 2 月 3 日</p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>茶花女</tag>
      </tags>
  </entry>
  <entry>
    <title>读《断舍离》</title>
    <url>/1857977170/</url>
    <content><![CDATA[<h1 id="断舍离是什么"><a href="#断舍离是什么" class="headerlink" title="断舍离是什么"></a>断舍离是什么</h1><p>拆开来看：</p>
<ol>
<li>物品要用才有价值，是为断。</li>
<li>物品在此时、当下，应当出现在需要它的地方，是为舍。</li>
<li>物品处于恰当的位置，才能展现美感，是为离。</li>
</ol>
<h1 id="为什么要断舍离"><a href="#为什么要断舍离" class="headerlink" title="为什么要断舍离"></a>为什么要断舍离</h1><p>举个简单的例子，你有一部１６Ｇ的iPhone，舍去４Ｇ的系统内存，你如何分配剩下的空间？是的，我曾经就遇到这样的情况，社交软件好几款，游戏动不动就吃掉千兆容量，想录个视频更是要左思右想去增大空闲容量。再比如人成长了这么久，总会有些纪念的物品放在房间里。日积月累下来，也很占位置吧。断舍离也不仅仅是在有限的空间内对物品进行取舍，也是一个整理收拾的方法。</p>
<p>断舍离的精髓就是先诊断出物品从你身上掠去了多少能量，然后通过筛选物品的行动，实现自我完善。</p>
<h1 id="如何断舍离"><a href="#如何断舍离" class="headerlink" title="如何断舍离"></a>如何断舍离</h1><p>《断舍离》这本书中讲了好几个方法，让我印象最深刻的是“以自我为轴心”。在拿到一个物品时，不应该思考“这件物品还需不需要还用不用”，而应该思考“我需不需要我还用不用”。物品原本就因为“我”而产生它的使用价值。因此，人应该为主语，去考虑物品的去留。</p>
<p>选择物品的窍门，不是“能不能用”，而是“我要不要用”，这一点必须铭刻在心。</p>
<p>另一个方法则是“试着使用高于自我形象的物品”。在挑选时，尝试那些更美好更有意思的东西。比如朋友送你一个精致的杯子，不要将它放入橱柜存放着，试着在每一次喝水喝牛奶使用它。即使一开始会很担心它摔落，但你会慢慢发现，自己的心情会渐渐愉悦起来，周围的环境也会令人舒畅起来。物品与人息息相关，近朱者赤大概就是这个意思吧。</p>
<p>物品是一面能映照出真实的自己的镜子，直面物品，就是直面真实的自己。</p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>断舍离</tag>
      </tags>
  </entry>
  <entry>
    <title>我要你</title>
    <url>/528950990/</url>
    <content><![CDATA[<p>我多么多么希望， 一曼没有死去。</p>
<p>在看《驴得水》之前，我以为从来没有这样一个女子， 像一曼这样落落大方，乐观开朗。多想认识这样的人，聪慧美丽，会唱《我要你》，会体贴顾人。可是后来的故事，多让人心痛。也许美好的人多会让人嫉妒，被人咒骂，被剪去秀丽的卷发。<br>这是部好真实的故事，让我深深喜欢上张一曼这个角色，也喜欢上她唱的这首情歌。</p>
<blockquote>
<p>都怪这月色 撩人的疯狂</p>
</blockquote>
<p>以后，做像她一样的人，落落大方，乐观开朗。</p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>驴得水</tag>
      </tags>
  </entry>
  <entry>
    <title>最小生成树和 Prim 算法</title>
    <url>/3564408376/</url>
    <content><![CDATA[<h3 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h3><p>最小生成树<a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91">1</a>（也称最小权重生成树）是一副连通加权无向图中一棵权值最小的生成树。</p>
<h3 id="Prim算法"><a href="#Prim算法" class="headerlink" title="Prim算法"></a>Prim算法</h3><p>Prim算法（普里姆算法），图论中的一种算法，可在加权连通图里搜索最小生成树。意即由此算法搜索到的边子集所构成的树中，不但包括了连通图里的所有顶点（英语：Vertex (graph theory)），且其所有边的权值之和亦为最小。该算法于1930年由捷克数学家沃伊捷赫·亚尔尼克（英语：Vojtěch Jarník）发现；并在1957年由美国计算机科学家罗伯特·普里姆（英语：Robert C. Prim）独立发现；1959年，艾兹格·迪科斯彻再次发现了该算法。因此，在某些场合，普里姆算法又被称为DJP算法、亚尔尼克算法或普里姆－亚尔尼克算法<a href="https://www.cnblogs.com/biyeymyhjob/archive/2012/07/30/2615542.html">2</a>。</p>
<p>算法实现过程：以图的顶点为基础，从一个初始顶点开始，寻找触达其他顶点权值最小的边，并把该顶点加入到已触达顶点的集合中。当全部顶点都加入到集合时，算法的工作就完成了。Prim算法的本质，是基于贪心算法。</p>
<p>算法实现代码<a href="https://mp.weixin.qq.com/s/x7JT7re7W7IgNCgMf1kJTA">3</a>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Prim</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> INF = Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] prim(<span class="keyword">int</span>[][] matrix) &#123;</span><br><span class="line">        List&lt;Integer&gt; reachedVertextList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//选择顶点0为初始顶点，放入已触达顶点集合中</span></span><br><span class="line">        reachedVertextList.add(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建最小生成树数组，首元素设为-1</span></span><br><span class="line">        <span class="keyword">int</span>[] parents = <span class="keyword">new</span> <span class="keyword">int</span>[matrix.length];</span><br><span class="line">        parents[<span class="number">0</span>] = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//边的权重</span></span><br><span class="line">        <span class="keyword">int</span> weight;</span><br><span class="line">        <span class="comment">//源顶点下标</span></span><br><span class="line">        <span class="keyword">int</span> fromIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//目标顶点下标</span></span><br><span class="line">        <span class="keyword">int</span> toIndex = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (reachedVertextList.size() &lt; matrix.length) &#123;</span><br><span class="line">            weight = INF;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//在已触达的顶点中，寻找到达新顶点的最短边</span></span><br><span class="line">            <span class="keyword">for</span> (Integer vertexIndex : reachedVertextList) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; matrix.length; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!reachedVertextList.contains(i)) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (matrix[vertexIndex][i] &lt; weight) &#123;</span><br><span class="line">                            fromIndex = vertexIndex;</span><br><span class="line">                            toIndex = i;</span><br><span class="line">                            weight = matrix[vertexIndex][i];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//确定了权值最小的目标顶点，放入已触达顶点集合</span></span><br><span class="line">            reachedVertextList.add(toIndex);</span><br><span class="line">            <span class="comment">//放入最小生成树的数组</span></span><br><span class="line">            parents[toIndex] = fromIndex;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> parents;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] matrix = <span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;</span><br><span class="line">                &#123;<span class="number">0</span>, <span class="number">4</span>, <span class="number">3</span>, INF, INF&#125;,</span><br><span class="line">                &#123;<span class="number">4</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">7</span>, INF&#125;,</span><br><span class="line">                &#123;<span class="number">3</span>, <span class="number">8</span>, <span class="number">0</span>, INF, <span class="number">1</span>&#125;,</span><br><span class="line">                &#123;INF, <span class="number">7</span>, INF, <span class="number">0</span>, <span class="number">9</span>&#125;,</span><br><span class="line">                &#123;INF, INF, <span class="number">1</span>, <span class="number">9</span>, <span class="number">0</span>&#125;,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] parents = prim(matrix);</span><br><span class="line">        System.out.println(Arrays.toString(parents));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
</search>
