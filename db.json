{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/love-click.js","path":"js/love-click.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/Avatar.jpg","path":"images/Avatar.jpg","modified":1,"renderable":0},{"_id":"source/images/CompanyList类.png","path":"images/CompanyList类.png","modified":1,"renderable":0},{"_id":"source/images/Employee类及其子类.png","path":"images/Employee类及其子类.png","modified":1,"renderable":0},{"_id":"source/images/Employee类.png","path":"images/Employee类.png","modified":1,"renderable":0},{"_id":"source/images/DynamicBinding.png","path":"images/DynamicBinding.png","modified":1,"renderable":0},{"_id":"source/images/Excel文件格式.jpeg","path":"images/Excel文件格式.jpeg","modified":1,"renderable":0},{"_id":"source/images/Manager类.png","path":"images/Manager类.png","modified":1,"renderable":0},{"_id":"source/images/OperationPanel类.png","path":"images/OperationPanel类.png","modified":1,"renderable":0},{"_id":"source/images/Saler类.png","path":"images/Saler类.png","modified":1,"renderable":0},{"_id":"source/images/Technician类.png","path":"images/Technician类.png","modified":1,"renderable":0},{"_id":"source/images/TimeConvert.png","path":"images/TimeConvert.png","modified":1,"renderable":0},{"_id":"source/images/boo516_com.jpg","path":"images/boo516_com.jpg","modified":1,"renderable":0},{"_id":"source/images/favicon_16.ico","path":"images/favicon_16.ico","modified":1,"renderable":0},{"_id":"source/images/favicon_32.ico","path":"images/favicon_32.ico","modified":1,"renderable":0},{"_id":"source/images/hibaobo_com.png","path":"images/hibaobo_com.png","modified":1,"renderable":0},{"_id":"source/images/studen_email.jpg","path":"images/studen_email.jpg","modified":1,"renderable":0},{"_id":"source/images/studen_email_apply.jpg","path":"images/studen_email_apply.jpg","modified":1,"renderable":0},{"_id":"source/images/studen_thanks_contact.jpg","path":"images/studen_thanks_contact.jpg","modified":1,"renderable":0},{"_id":"source/images/student_premium.jpg","path":"images/student_premium.jpg","modified":1,"renderable":0},{"_id":"source/images/student_status.jpg","path":"images/student_status.jpg","modified":1,"renderable":0},{"_id":"source/images/student_unidays.jpg","path":"images/student_unidays.jpg","modified":1,"renderable":0},{"_id":"source/images/布局原型图.png","path":"images/布局原型图.png","modified":1,"renderable":0},{"_id":"source/images/收件效果.jpeg","path":"images/收件效果.jpeg","modified":1,"renderable":0},{"_id":"source/images/系统功能模块图.png","path":"images/系统功能模块图.png","modified":1,"renderable":0},{"_id":"source/images/程序运行结果.png","path":"images/程序运行结果.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/.gitignore","hash":"ede6b2939da6ed00d80ea5d81158914723d2217f","modified":1662630455884},{"_id":"source/CNAME","hash":"ea8e694e5820902259b8acb0fcc5fd94cd87c9cb","modified":1662630455884},{"_id":"source/_posts/2018 年阅读清单.md","hash":"d2203b80f09234b7dfaf45b427640c76132948b8","modified":1663079042920},{"_id":"source/_posts/Chrome 快捷键.md","hash":"a523357a55728fcbd4056b1f4c442d36a4bb3ac1","modified":1663079042928},{"_id":"source/_posts/AlfredWorkflow时间转换.md","hash":"fd3724bd177fb54deb5b968a4d6ca0546e029a8f","modified":1663300476304},{"_id":"source/_posts/Emacs 快速简明指南.md","hash":"30b53817ecc6112a17ec39bac903ee3e7c1f02fe","modified":1663079042921},{"_id":"source/_posts/DNS 汇总.md","hash":"b292f74717c6531138274cbe8e3ef516e819a343","modified":1663079042929},{"_id":"source/_posts/ExcelGo.md","hash":"c7a562262e703a5d4a779792dd48c52b3b922550","modified":1663326792267},{"_id":"source/_posts/GrayUtils 灰度配置工具类.md","hash":"9bded6be4a19d2fd71f101b35c5f7e51f897eb5a","modified":1663326913648},{"_id":"source/_posts/Gradle 搭配 Mybatis-Generator 进行代码自动生成.md","hash":"2840549bd7d4bf09d8b4dfbdc4cbac6d6055e36b","modified":1665366800181},{"_id":"source/_posts/Git 批量 checkout 和 update.md","hash":"cb36533da2d1d51162b70d145d410c6ad3f7b736","modified":1665366811503},{"_id":"source/_posts/SEO 优化笔记.md","hash":"56741e826a170881dc39b4c4e73f7fd1159db4f7","modified":1663079042931},{"_id":"source/_posts/Java项目部署实践.md","hash":"0f3175aad5ab89bd28c554897174cea5f2e8606f","modified":1663078687048},{"_id":"source/_posts/临时邮箱.md","hash":"a93f0597069d74cfd37621db0814ccb175e928c1","modified":1663079042948},{"_id":"source/_posts/JavaBrowser 开发.md","hash":"514919548075e3f1411afa9a49242d549447e53d","modified":1663079042922},{"_id":"source/_posts/企业人员信息管理系统开发.md","hash":"60121ba9936a7f2742d0e67a1bb09e1c7c54f370","modified":1663079042948},{"_id":"source/_posts/何以解忧.md","hash":"dcca0957c17ce0e447afd20021eb60fefbf2377a","modified":1663079042932},{"_id":"source/_posts/使用 WMITools 解除浏览器被 hao123 劫持.md","hash":"8190285bb434a8aa247474753857bb2b2a17d9c3","modified":1663079042932},{"_id":"source/_posts/初读《皮囊》.md","hash":"d80827b520091a87433891b3533b7a2c2fc4abd7","modified":1663079042940},{"_id":"source/_posts/博客脚印.md","hash":"2987f6b2843cf3d93aa16ece454020ded66dc88b","modified":1662630455885},{"_id":"source/_posts/外包.md","hash":"9c172146ac1ae1ff1654752f8eaf78b8ffa4a6fa","modified":1663078920523},{"_id":"source/_posts/后端工程师学习路径.md","hash":"91802d7d4dd8929fa32e40221ed987aab4b95bb0","modified":1663078794530},{"_id":"source/_posts/如何获取 Apple Music 学生会员资格.md","hash":"aa46add4509b7f37ebdc6f0e801db37bc8a94c60","modified":1663079042941},{"_id":"source/_posts/我们终此一生.md","hash":"24f8b6aae1aed5683b8907a20861e0920c91057e","modified":1663079042942},{"_id":"source/_posts/我是如何用Feed43为教务处网站制作RSS的.md","hash":"05ef1ddbdf3e6b64f4a6fdf53babb2d7ca0f7627","modified":1663079042949},{"_id":"source/_posts/我要你.md","hash":"aca7477e5419dda3f26da9a68ec76a5b0526d49e","modified":1663079042942},{"_id":"source/_posts/我过得一点也不快乐.md","hash":"9bf01403623bff7dfa57c6ec29dfc50176bc0baf","modified":1663079042948},{"_id":"source/_posts/RoadToRender.md","hash":"87f5800c83f3a5f30d5fec3120b00fefc9d9d9e6","modified":1663079042931},{"_id":"source/_posts/读《断舍离》.md","hash":"ee01d220f5c30c05646b186713beda46908a196f","modified":1663079042955},{"_id":"source/_posts/白茶花，红茶花.md","hash":"4fd82b4031c5437d78e1c5c2f89395d02572fa06","modified":1663144818011},{"_id":"source/_posts/最小生成树和 Prim 算法.md","hash":"64b7c688c1bf6bc5b90b3c8995c716031b12234e","modified":1663079042956},{"_id":"source/categories/index.md","hash":"83a564128d4df289e7805582d483542c4752e0b8","modified":1662630455885},{"_id":"source/images/Employee类及其子类.png","hash":"d07c217b15def91b26d2abd54701a10cb36efdca","modified":1663077186000},{"_id":"source/_posts/走向开源之路.md","hash":"bbc4e1ebba17b6df1d85faed4d7914ed3e9d3fd4","modified":1663078659304},{"_id":"source/about/index.md","hash":"d12b20b22be3e12bef338ea6606bab3f4ac36370","modified":1662634490091},{"_id":"source/_posts/Spring动态绑定.md","hash":"b4cd23b9342d936b7f14846f639b77180bae5e71","modified":1663078678258},{"_id":"source/images/Excel文件格式.jpeg","hash":"eff52a7dcc407b68931933edbe72ffc33b89c883","modified":1663326723716},{"_id":"source/images/favicon_16.ico","hash":"988d32115a16cb6f6160d1d99a715476b0772318","modified":1662630455900},{"_id":"source/images/studen_email.jpg","hash":"e7649070abe17cf502c8fcb4de2bb4027ab11adc","modified":1495375066000},{"_id":"source/images/favicon_32.ico","hash":"03b7dd2337ae88c8b085bf61f84dc68a06b65f10","modified":1662630455900},{"_id":"source/images/TimeConvert.png","hash":"2356d7b9f66a24c79ff7caea9fe16b61440e8277","modified":1662630455898},{"_id":"source/images/studen_email_apply.jpg","hash":"e260682e53c7b6ed2905a15756865f923dd0684e","modified":1495375066000},{"_id":"source/images/studen_thanks_contact.jpg","hash":"1bedf93befef890b423c2e700fd886166d7f8eef","modified":1495375065000},{"_id":"source/images/student_unidays.jpg","hash":"cd2f96d480fff67c3095cbb30d255fd42a7386c1","modified":1495375065000},{"_id":"source/images/布局原型图.png","hash":"e96574c95c586d1c1fe5b87a641085114b515f4f","modified":1663077186000},{"_id":"source/images/student_premium.jpg","hash":"e5f1ac8ee65b5044e9d432be79316c5466a99817","modified":1495375097000},{"_id":"source/tags/index.md","hash":"99088330b26317b24d761d514b69721588db4107","modified":1662630455902},{"_id":"source/images/student_status.jpg","hash":"af2d013f59fe10ddfdc2b3ba571ffb9eaad7f05d","modified":1495375072000},{"_id":"source/images/程序运行结果.png","hash":"bdf37ec8d82254d43c54a9dd33c44078d5ab7cc8","modified":1663077186000},{"_id":"source/shuoshuo/index.md","hash":"a4a29ccf8891ba0513d1bffbb2713c86a6e70cc3","modified":1662630455902},{"_id":"source/.DS_Store","hash":"11346d7a3eaea681c98bf47a02aaed1b8ad39cb9","modified":1663077228375},{"_id":"source/images/系统功能模块图.png","hash":"49edf50bf03c09d4f3e5562cc4bf4ee72ebcd4aa","modified":1663077186000},{"_id":"source/_posts/.DS_Store","hash":"193f7c8415fa88c5bba04aa5ae9c34a873b71fdd","modified":1663076327176},{"_id":"source/images/Employee类.png","hash":"c5db1a00ef77fb9585b7a175de19a9f00f65ec9e","modified":1663077186000},{"_id":"source/images/DynamicBinding.png","hash":"375dfb4843f36207758f0b24cc62cee4552abedf","modified":1662630455897},{"_id":"source/images/Manager类.png","hash":"1ead0079e4674df93a1e56fc8d2fd609b1ed711f","modified":1663077186000},{"_id":"source/images/Technician类.png","hash":"75987b4a75e803a95c0284efb3cd87ce175b9975","modified":1663077186000},{"_id":"source/images/收件效果.jpeg","hash":"6356c159533914be4e42418689e1075ff1c3f873","modified":1663326746053},{"_id":"source/images/CompanyList类.png","hash":"f7ff4b8655f3750ad9bb0d8a9f2c928210a8b062","modified":1663077186000},{"_id":"source/images/Saler类.png","hash":"e0fb91bd67341974221afe3d51eb0fe35466d7da","modified":1663077186000},{"_id":"source/images/hibaobo_com.png","hash":"7127ffafa18667260051b12c2a64be7bbee9d17e","modified":1662630455902},{"_id":"source/images/OperationPanel类.png","hash":"1c7ec4aabacc8bf3cf335a4f190f1496b50fe89c","modified":1663077186000},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1662630455904},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1662630455904},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1662630455904},{"_id":"themes/next/_config.yml","hash":"0bac51341478b026cdb23ba8727ca97b876adeba","modified":1663294599834},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1662630455904},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1662630455902},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1662630455911},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1662630455906},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1662630455902},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1662630455902},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1662630455904},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1662630455903},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1662630455903},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1662630455903},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1662630455903},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1662630455903},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1662630455903},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1662630455903},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1662630455903},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1662630455904},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1662630455904},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1662630455904},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1662630455904},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1662630455904},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1662630455905},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1662630455903},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1662630455905},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1662630455905},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1662630455905},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1662630455906},{"_id":"themes/next/languages/zh-CN.yml","hash":"f9c9043d8cad2b2be10bb86a2d8db0c281150419","modified":1663330999881},{"_id":"themes/next/layout/_layout.swig","hash":"7c348a240b4fbe7e3ab6ab571a0d6c126036b440","modified":1662630455906},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1662630455911},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1662630455911},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1662630455906},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1662630455911},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1662630455911},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1662630455911},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1662630455911},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1662630455913},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1662630455903},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1662630455903},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1662630455903},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1662630455905},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1662630455903},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1662630455905},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1662630455906},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1662630455906},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1662630455906},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1662630455905},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1662630455907},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1662630455903},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1662630455907},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1662630455905},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1662630455903},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1662630455907},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1662630455908},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1662630455908},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1662630455905},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1662630455905},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1662630455906},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1662630455905},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1662630455906},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1662630455906},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1662630455906},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1662630455906},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1662630455908},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1662630455909},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1662630455908},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1662630455909},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1662630455905},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1662630455909},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1662630455910},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1662630455909},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1662630455912},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1662630455910},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1662630455912},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1662630455912},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1662630455912},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1662630455912},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1662630455912},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1662630455910},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1662630455912},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1662630455913},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1662630455911},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1662630455913},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1662630455913},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1662630455913},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1662630455913},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1662630455913},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1662630455913},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1662630455913},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1662630455913},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1662630455913},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1662630455913},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1662630455913},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1662630455918},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1662630455919},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1662630455913},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1662630455919},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1662630455920},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1662630455919},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1662630455920},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1662630455920},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1662630455920},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1662630455920},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1662630455920},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1662630455920},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1662630455920},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1662630455920},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1662630455920},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1662630455920},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1662630455920},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1662630455920},{"_id":"themes/next/source/js/love-click.js","hash":"37164ccec68df0bfcfe9aaf972f451aaac7d8e49","modified":1662630455921},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1662630455920},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1662630455921},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1662630455921},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1662630455921},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1662630455921},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1662630455907},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1662630455907},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1662630455907},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1662630455907},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1662630455907},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1662630455907},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1662630455907},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1662630455907},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1662630455907},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1662630455908},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1662630455908},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1662630455908},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1662630455908},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1662630455908},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1662630455908},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1662630455908},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1662630455908},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1662630455908},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1662630455909},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1662630455908},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1662630455909},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1662630455909},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1662630455909},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1662630455909},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1662630455909},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1662630455909},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1662630455909},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1662630455909},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1662630455909},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1662630455909},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1662630455910},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1662630455910},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1662630455910},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1662630455910},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1662630455910},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1662630455910},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1662630455910},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1662630455910},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1662630455910},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1662630455910},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1662630455910},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1662630455910},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1662630455910},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1662630455911},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1662630455911},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1662630455911},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1662630455911},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1662630455911},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1662630455911},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1662630455912},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1662630455911},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1662630455912},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1662630455912},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1662630455912},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1662630455912},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1662630455912},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1662630455912},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1662630455912},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1662630455912},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1662630455919},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1662630455919},{"_id":"themes/next/source/css/_variables/base.styl","hash":"fc3fd9fc0e10b104b24d8bb6a6fbea8e31bdc78d","modified":1662630455919},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1662630455919},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"262d784e499e3ff8bda7f92435368041da97f7fd","modified":1662630455919},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1662630455921},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1662630455921},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1662630455922},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1662630455922},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1662630455916},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1662630455913},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1662630455916},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1662630455915},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1662630455918},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1662630455918},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1662630455918},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1662630455918},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1662630455918},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1662630455918},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1662630455918},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1662630455917},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1662630455918},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1662630455918},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1662630455918},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1662630455918},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1662630455919},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1662630455919},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1662630455919},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1662630455919},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1662630455919},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1662630455919},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1662630455919},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1662630455919},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1662630455921},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1662630455921},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1662630455915},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1662630455915},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1662630455915},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1662630455916},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1662630455916},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1662630455914},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1662630455915},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1662630455915},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1662630455915},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1662630455915},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1662630455915},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1662630455915},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1662630455915},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1662630455915},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1662630455915},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1662630455917},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1662630455918},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1662630455918},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1662630455918},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1662630455921},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1662630455922},{"_id":"source/images/boo516_com.jpg","hash":"c2775960316196d72d78d9220b043a6b2352df49","modified":1662630455900},{"_id":"source/images/Avatar.jpg","hash":"5ea2f586c566d30b1052de6924c700e7d864f713","modified":1662630455897},{"_id":"public/search.xml","hash":"0820f005e86312f92bfc7c9c0d4c46262c205566","modified":1665366822770},{"_id":"public/categories/index.html","hash":"80a9d0eb24e11319b414d1c6ed39b5f7e76a460f","modified":1665366822770},{"_id":"public/tags/index.html","hash":"64c22e0e4e0a608ad83f53f33420207c209c9434","modified":1665366822770},{"_id":"public/shuoshuo/index.html","hash":"0e4ee3c76427449656d5b8bb84b571177dadae32","modified":1665366822770},{"_id":"public/about/index.html","hash":"92e2d2236e542800b10d31bf57ff4253abeaefd5","modified":1665366822770},{"_id":"public/569693028/index.html","hash":"d0a3e2388f4eeaa2ad7c1d67ed13b90bbdfae082","modified":1665366822770},{"_id":"public/2023509924/index.html","hash":"e3dc4fb9c07ae5f08daed72256c3900752843242","modified":1665366822770},{"_id":"public/528950990/index.html","hash":"64cf7feff3ac4c4073aa30b13424986e86609e02","modified":1665366822770},{"_id":"public/2864306879/index.html","hash":"6bacce9ebbbcf1309b66b951cc9f99682175fb1b","modified":1665366822770},{"_id":"public/archives/page/4/index.html","hash":"36c5b69b43c785028cbf62e8836716ecee2fbe8c","modified":1665366822770},{"_id":"public/archives/2016/index.html","hash":"de54809ea1638c027abc6f37f9128b39072b50c4","modified":1665366822770},{"_id":"public/archives/2016/01/index.html","hash":"c81e9ac2b3c62a047128fa0744d51a20c7854421","modified":1665366822770},{"_id":"public/archives/2016/03/index.html","hash":"9465167ade432a98d802aad5df5504af2bdf1d72","modified":1665366822770},{"_id":"public/archives/2016/11/index.html","hash":"610cc412130f2b085e763c879ed4f9738aba694a","modified":1665366822770},{"_id":"public/archives/2016/12/index.html","hash":"d79881abe75d5b009ee4b088e24b7d6787243dee","modified":1665366822770},{"_id":"public/archives/2017/page/2/index.html","hash":"af716bd20880d44153ded1cfd3543a77cefbca0e","modified":1665366822770},{"_id":"public/archives/2017/01/index.html","hash":"502dfb07c0090df0d3da44deb266934e499525ea","modified":1665366822770},{"_id":"public/archives/2017/02/index.html","hash":"8534e5200feb86a97d9ca3e9412b11a72f7bcf8b","modified":1665366822770},{"_id":"public/archives/2017/05/index.html","hash":"4afe55de1339351bdb2bec1f5c7692ca6b234598","modified":1665366822770},{"_id":"public/archives/2017/11/index.html","hash":"ecbdd601051ee245fc9c8ae26af5c22d257ebdaf","modified":1665366822770},{"_id":"public/archives/2018/index.html","hash":"c10e056ab5cad021cfc216d6f6919875654500d2","modified":1665366822770},{"_id":"public/archives/2018/01/index.html","hash":"e0d7f4528035300dc97ff322cd07c11b4e123415","modified":1665366822770},{"_id":"public/archives/2018/07/index.html","hash":"a06f46e8c7e4d141eb6916251b8f6fde7f6cbbb0","modified":1665366822770},{"_id":"public/archives/2019/index.html","hash":"bc94402dd2896c66a844b8fc8f414513abd0deaa","modified":1665366822770},{"_id":"public/archives/2022/index.html","hash":"32a26d20592f1d746b9cb74014640849d582c38b","modified":1665366822770},{"_id":"public/archives/2019/03/index.html","hash":"39282470828ec3f7793f2764f838d27076fc9649","modified":1665366822770},{"_id":"public/archives/2022/01/index.html","hash":"f56d707b940191592165733b4359860ae508f4f6","modified":1665366822770},{"_id":"public/archives/2022/03/index.html","hash":"9c1c19ae2237dbfa61eaca1a9d03755c824be2da","modified":1665366822770},{"_id":"public/archives/2022/08/index.html","hash":"f4ae8c97188b274e6cb3825f666dc03c3786969b","modified":1665366822770},{"_id":"public/archives/2022/10/index.html","hash":"f221d17534b017610f8c151511596aa1035b214b","modified":1665366822770},{"_id":"public/page/4/index.html","hash":"00594f0e2cd82c710694c9f87959756b332f9eca","modified":1665366822770},{"_id":"public/categories/开发/page/2/index.html","hash":"2b7e1d6191741ed938a8a5afee843c0d13cd3d8c","modified":1665366822770},{"_id":"public/categories/收集/index.html","hash":"1bfdd341aa2e7cdf7a8b2915a633c16b012620e5","modified":1665366822770},{"_id":"public/categories/阅读/index.html","hash":"bd5eba9b6353144d303d0196956491629bfa8454","modified":1665366822770},{"_id":"public/categories/沉思/index.html","hash":"b2a05355eaa796a9d7eedeb0c172c059d6e8e57e","modified":1665366822770},{"_id":"public/tags/Alfred/index.html","hash":"99b3be1806fb5cd2e4e4203c2390ac6784a5a199","modified":1665366822770},{"_id":"public/tags/实战/index.html","hash":"334a74aff31fbba811ba0b3ef40485ab32e29e6b","modified":1665366822770},{"_id":"public/tags/DNS/index.html","hash":"636e651b6b1f37015bda664b432caf3ef22359a6","modified":1665366822770},{"_id":"public/tags/清单/index.html","hash":"433baf94f7528d0ba8165fe2f6f3d2ac73ccc6e4","modified":1665366822770},{"_id":"public/tags/Java/index.html","hash":"dac7bbd560692326c0afffa8900f1adcc98d49f9","modified":1665366822770},{"_id":"public/tags/Gray/index.html","hash":"226b5dceab40c73e72613efea8eff8dbbe009c8a","modified":1665366822770},{"_id":"public/tags/gradle/index.html","hash":"f6001573096a13c528744af904dd2a476fd967f8","modified":1665366822770},{"_id":"public/tags/mybatis/index.html","hash":"95dbcd3485521e0e40530ce51a63d4f126596090","modified":1665366822770},{"_id":"public/tags/git/index.html","hash":"3ae243528db998e9ee5eabc99fc98713f84f750c","modified":1665366822770},{"_id":"public/tags/Excel/index.html","hash":"b2ea6769455e6fdf3078a3e72c1e563195b9744f","modified":1665366822770},{"_id":"public/tags/SEO/index.html","hash":"ad74db67ac927a9231b3588059d1aa818533d835","modified":1665366822770},{"_id":"public/tags/Chrome/index.html","hash":"4a0fd8d88165a46a72e5ecbea4084d23950b7790","modified":1665366822770},{"_id":"public/tags/Emacs/index.html","hash":"55bc52d72f9d0313d4bf1572f55be52958ce2091","modified":1665366822770},{"_id":"public/tags/Spring/index.html","hash":"fbe961607a3333fe48b7762e0e1349b860801f67","modified":1665366822770},{"_id":"public/tags/动态绑定/index.html","hash":"3bf286fb61fcd599726a24b6fe1bfe33b2ad8f22","modified":1665366822770},{"_id":"public/tags/邮箱/index.html","hash":"e77392905e3318e5f263dce934a5969aa2e93115","modified":1665366822770},{"_id":"public/tags/解忧杂货店/index.html","hash":"775e8701a90371214baf8a42f8921d723aaf9a45","modified":1665366822770},{"_id":"public/tags/记录/index.html","hash":"08390ee96e725d8f75bb489523f1041a317a4449","modified":1665366822770},{"_id":"public/tags/皮囊/index.html","hash":"f8b5713c1b8dc25581dd6ae7fda64266f595a0da","modified":1665366822770},{"_id":"public/tags/外包/index.html","hash":"a00f3372496e9c1d68c693f197268a1468148439","modified":1665366822770},{"_id":"public/tags/hao123/index.html","hash":"e5484b8a7f18989add6ea5dc18acdf4ce07c5527","modified":1665366822770},{"_id":"public/tags/后端/index.html","hash":"addce3538689825f57f0e6d8a982dfdaa1265aa0","modified":1665366822770},{"_id":"public/tags/学习/index.html","hash":"a4dee8c74bd76fad3b239b328a8a968072fb6933","modified":1665366822770},{"_id":"public/tags/路径/index.html","hash":"4ac37794a1fc86e9ed156f55de1212fefefacbe0","modified":1665366822770},{"_id":"public/tags/无声告白/index.html","hash":"8fd02661118ef28da339eba83472d51427aa7356","modified":1665366822770},{"_id":"public/tags/Music/index.html","hash":"f11d746929f8353dd6a61cbdc493032c89287a45","modified":1665366822770},{"_id":"public/tags/驴得水/index.html","hash":"c9e4bfc22a4b98587ed3556c50dd90470ce9864a","modified":1665366822770},{"_id":"public/tags/RSS/index.html","hash":"47decbdf94e17c990e09b456a6d73bf08a802d68","modified":1665366822770},{"_id":"public/tags/断舍离/index.html","hash":"262fb78ada19697eabc47042a45ea66edf83f05d","modified":1665366822770},{"_id":"public/tags/自白/index.html","hash":"48b7c49f4ada2cf9ad21d6559e9aa916c78d716d","modified":1665366822770},{"_id":"public/tags/开源/index.html","hash":"e847cb9579edb6b26d2787bbfc5b7b21ac455c19","modified":1665366822770},{"_id":"public/tags/茶花女/index.html","hash":"ea82bf75bb4c5de4c9a9fcae531d8f1d14d43422","modified":1665366822770},{"_id":"public/1177415153/index.html","hash":"84dc871341c347f4697b4f2f34216b7c7d21f807","modified":1665366822770},{"_id":"public/680024629/index.html","hash":"c293b01a819006f65815e88f8a80ecbe83ef4957","modified":1665366822770},{"_id":"public/393446932/index.html","hash":"a7d173721e8d0ca8f6a67043215b311b35bf57b2","modified":1665366822770},{"_id":"public/2465020203/index.html","hash":"533f9352f569acd7c8083dcf1a3260a715235250","modified":1665366822770},{"_id":"public/3201199714/index.html","hash":"309bff69abb0fc6a24430a37fcf367a89029a1d7","modified":1665366822770},{"_id":"public/40207247/index.html","hash":"ebf0527a16066b88d26aec868436a6d9de0a8e07","modified":1665366822770},{"_id":"public/1487202510/index.html","hash":"c7b692b14f9d203496eb33a3ed7207993d09a847","modified":1665366822770},{"_id":"public/1026407118/index.html","hash":"c3de87bb135784828a228c7ce3deec7958903728","modified":1665366822770},{"_id":"public/1655783544/index.html","hash":"a9c49c91d212bbbc9a3e1e4460d367b1fa4e100e","modified":1665366822770},{"_id":"public/1326063135/index.html","hash":"e7e7de58dda56f536483635fd5bb6e7d47ce7a1e","modified":1665366822770},{"_id":"public/2646382575/index.html","hash":"bb8bddbfa7dd29b54dcafbf44141a975941bb2fb","modified":1665366822770},{"_id":"public/2106794902/index.html","hash":"9a099c1140c485e52b5ff1138cbc335769c9ac5e","modified":1665366822770},{"_id":"public/3652395819/index.html","hash":"96a30e19461db01c09a320f30d8e14c8db5dbfc4","modified":1665366822770},{"_id":"public/1446338271/index.html","hash":"f66e4393f7355ecae7526bafc9147a2121063091","modified":1665366822770},{"_id":"public/3564408376/index.html","hash":"81e27626f5d0e8f9ad403a7ec60d77b71a015bbe","modified":1665366822770},{"_id":"public/4038172740/index.html","hash":"a5975d8baa803547e6ad019b12e0dd5a56e5700e","modified":1665366822770},{"_id":"public/763296652/index.html","hash":"9668db3b263c722789554340c780a6debac62c58","modified":1665366822770},{"_id":"public/2567344891/index.html","hash":"a284d57f8d2ad3ad5d4f147ec1461144bf700842","modified":1665366822770},{"_id":"public/4225233647/index.html","hash":"eac485e98e4dcef7d6fec67dd8c4c92d022347e6","modified":1665366822770},{"_id":"public/3287404792/index.html","hash":"383473208908a8d1d868b2bc1e1ebf74f78ce5e0","modified":1665366822770},{"_id":"public/1857977170/index.html","hash":"699833f52731780dd359b320b7acc59d8cf5159d","modified":1665366822770},{"_id":"public/3036052883/index.html","hash":"ec28b31b355238f139d8472ed7b939680357f6cd","modified":1665366822770},{"_id":"public/2069714304/index.html","hash":"541a5e45aaf34f4611a749d6e7a742bbfb070fff","modified":1665366822770},{"_id":"public/3890282637/index.html","hash":"d4a7e87c2b82b65a418281e35e0cc580234e29f5","modified":1665366822770},{"_id":"public/492101974/index.html","hash":"2ae2ed9e0e109537529d1ba8e633dcdb52d0e54b","modified":1665366822770},{"_id":"public/2135150665/index.html","hash":"0c225b4f435e56596915a8713ddf3a4798216ec8","modified":1665366822770},{"_id":"public/172582584/index.html","hash":"69a13bb1c4a382657a6db3ad17d1d78dea2e84eb","modified":1665366822770},{"_id":"public/archives/index.html","hash":"95f4bddf25730b2bed06e41176a95f4ceb8deac5","modified":1665366822770},{"_id":"public/archives/page/2/index.html","hash":"957f76076f373e8c212273a233cba2d415b14202","modified":1665366822770},{"_id":"public/archives/page/3/index.html","hash":"4b591567ce28ff310f4e170f234f262e080a8eab","modified":1665366822770},{"_id":"public/archives/2017/index.html","hash":"3231ae38ef0b30b3395df5ed20d8414a19a9c386","modified":1665366822770},{"_id":"public/index.html","hash":"b75e8fefa698237111ec389e2322f78436656f59","modified":1665366822770},{"_id":"public/page/2/index.html","hash":"aca40b79c939af80706ef93a5f6c22df93219ff2","modified":1665366822770},{"_id":"public/page/3/index.html","hash":"ae109552512aee04cb8080e91e08675b687cccd6","modified":1665366822770},{"_id":"public/categories/开发/index.html","hash":"cb8e7e9aa96fb4fb51a503156cc72b34a0c4c3e9","modified":1665366822770},{"_id":"public/tags/算法/index.html","hash":"ef4b9f1406432d6077119f185d3b9339fbcf0086","modified":1665366822770},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1665366822770},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1665366822770},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1665366822770},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1665366822770},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1665366822770},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1665366822770},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1665366822770},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1665366822770},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1665366822770},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1665366822770},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1665366822770},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1665366822770},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1665366822770},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1665366822770},{"_id":"public/images/Employee类及其子类.png","hash":"d07c217b15def91b26d2abd54701a10cb36efdca","modified":1665366822770},{"_id":"public/images/Excel文件格式.jpeg","hash":"eff52a7dcc407b68931933edbe72ffc33b89c883","modified":1665366822770},{"_id":"public/images/TimeConvert.png","hash":"2356d7b9f66a24c79ff7caea9fe16b61440e8277","modified":1665366822770},{"_id":"public/CNAME","hash":"ea8e694e5820902259b8acb0fcc5fd94cd87c9cb","modified":1665366822770},{"_id":"public/images/favicon_32.ico","hash":"03b7dd2337ae88c8b085bf61f84dc68a06b65f10","modified":1665366822770},{"_id":"public/images/studen_email.jpg","hash":"e7649070abe17cf502c8fcb4de2bb4027ab11adc","modified":1665366822770},{"_id":"public/images/favicon_16.ico","hash":"988d32115a16cb6f6160d1d99a715476b0772318","modified":1665366822770},{"_id":"public/images/studen_thanks_contact.jpg","hash":"1bedf93befef890b423c2e700fd886166d7f8eef","modified":1665366822770},{"_id":"public/images/student_premium.jpg","hash":"e5f1ac8ee65b5044e9d432be79316c5466a99817","modified":1665366822770},{"_id":"public/images/studen_email_apply.jpg","hash":"e260682e53c7b6ed2905a15756865f923dd0684e","modified":1665366822770},{"_id":"public/images/布局原型图.png","hash":"e96574c95c586d1c1fe5b87a641085114b515f4f","modified":1665366822770},{"_id":"public/images/student_unidays.jpg","hash":"cd2f96d480fff67c3095cbb30d255fd42a7386c1","modified":1665366822770},{"_id":"public/images/系统功能模块图.png","hash":"49edf50bf03c09d4f3e5562cc4bf4ee72ebcd4aa","modified":1665366822770},{"_id":"public/images/程序运行结果.png","hash":"bdf37ec8d82254d43c54a9dd33c44078d5ab7cc8","modified":1665366822770},{"_id":"public/images/student_status.jpg","hash":"af2d013f59fe10ddfdc2b3ba571ffb9eaad7f05d","modified":1665366822770},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1665366822770},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1665366822770},{"_id":"public/images/Employee类.png","hash":"c5db1a00ef77fb9585b7a175de19a9f00f65ec9e","modified":1665366822770},{"_id":"public/images/DynamicBinding.png","hash":"375dfb4843f36207758f0b24cc62cee4552abedf","modified":1665366822770},{"_id":"public/images/Manager类.png","hash":"1ead0079e4674df93a1e56fc8d2fd609b1ed711f","modified":1665366822770},{"_id":"public/images/Technician类.png","hash":"75987b4a75e803a95c0284efb3cd87ce175b9975","modified":1665366822770},{"_id":"public/images/收件效果.jpeg","hash":"6356c159533914be4e42418689e1075ff1c3f873","modified":1665366822770},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1665366822770},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1665366822770},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1665366822770},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1665366822770},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1665366822770},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1665366822770},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1665366822770},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1665366822770},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1665366822770},{"_id":"public/js/love-click.js","hash":"37164ccec68df0bfcfe9aaf972f451aaac7d8e49","modified":1665366822770},{"_id":"public/css/main.css","hash":"47706a2b299accf0c9a86698e828fc13d9b9b06c","modified":1665366822770},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1665366822770},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1665366822770},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1665366822770},{"_id":"public/images/CompanyList类.png","hash":"f7ff4b8655f3750ad9bb0d8a9f2c928210a8b062","modified":1665366822770},{"_id":"public/images/Saler类.png","hash":"e0fb91bd67341974221afe3d51eb0fe35466d7da","modified":1665366822770},{"_id":"public/images/hibaobo_com.png","hash":"7127ffafa18667260051b12c2a64be7bbee9d17e","modified":1665366822770},{"_id":"public/images/OperationPanel类.png","hash":"1c7ec4aabacc8bf3cf335a4f190f1496b50fe89c","modified":1665366822770},{"_id":"public/images/boo516_com.jpg","hash":"c2775960316196d72d78d9220b043a6b2352df49","modified":1665366822770},{"_id":"public/images/Avatar.jpg","hash":"5ea2f586c566d30b1052de6924c700e7d864f713","modified":1665366822770}],"Category":[{"name":"开发","_id":"cl924eood0004nq54gem258md"},{"name":"收集","_id":"cl924eoof000bnq54dodmb9g5"},{"name":"阅读","_id":"cl924eoog000gnq54cu1808ru"},{"name":"沉思","_id":"cl924eoop003knq5472y1h130"}],"Data":[],"Page":[{"title":"分类","date":"2022-01-05T15:26:11.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2022-01-05 23:26:11\ntype: \"categories\"\ncomments: false\n---\n","updated":"2022-09-08T09:47:35.885Z","path":"categories/index.html","layout":"page","_id":"cl924eoo90000nq540i9ma3vu","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2022-01-05T15:24:28.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2022-01-05 23:24:28\ntype: \"tags\"\ncomments: false\n---\n","updated":"2022-09-08T09:47:35.902Z","path":"tags/index.html","layout":"page","_id":"cl924eooc0002nq544vv4fqse","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"碎碎","type":"shuoshuo","comments":0,"_content":"\n<!-- 引用 artitalk -->\n<script type=\"text/javascript\" src=\"https://unpkg.com/artitalk\"></script>\n<!-- 存放说说的容器 -->\n<div id=\"artitalk_main\"></div>\n<script>\nnew Artitalk({\n    appId: 'blszhnruw5lJSvkUXt2icpcK-MdYXbMMI', // Your LeanCloud appId\n    appKey: 'hRUegQRKN8nkH3Bc1wdlDvzm', // Your LeanCloud appKey\n    pageSize: 20, //每页评论数量\n    shuoPla: '', //评论框里显示，可以不填\n    motion: 0, //加载动画的开关 0（关闭），1（开启）\n    atComment: 0, //评论功能的开关 0（关闭），1（开启）\n    bgImg: '', //评论框里的背景，可以不填\n    color1: 'linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 154, 190) 85%)',\n    color2: 'linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 154, 190) 85%)',\n    color3: 'black',\n})\n</script>","source":"shuoshuo/index.md","raw":"---\ntitle:  碎碎 #为了标题中出现，可以不填\ntype: \"shuoshuo\" #必须有\ncomments: false # 是否再下方显示评论栏\n---\n\n<!-- 引用 artitalk -->\n<script type=\"text/javascript\" src=\"https://unpkg.com/artitalk\"></script>\n<!-- 存放说说的容器 -->\n<div id=\"artitalk_main\"></div>\n<script>\nnew Artitalk({\n    appId: 'blszhnruw5lJSvkUXt2icpcK-MdYXbMMI', // Your LeanCloud appId\n    appKey: 'hRUegQRKN8nkH3Bc1wdlDvzm', // Your LeanCloud appKey\n    pageSize: 20, //每页评论数量\n    shuoPla: '', //评论框里显示，可以不填\n    motion: 0, //加载动画的开关 0（关闭），1（开启）\n    atComment: 0, //评论功能的开关 0（关闭），1（开启）\n    bgImg: '', //评论框里的背景，可以不填\n    color1: 'linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 154, 190) 85%)',\n    color2: 'linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 154, 190) 85%)',\n    color3: 'black',\n})\n</script>","date":"2022-09-08T09:47:35.902Z","updated":"2022-09-08T09:47:35.902Z","path":"shuoshuo/index.html","layout":"page","_id":"cl924eooe0006nq5440796jgo","content":"<!-- 引用 artitalk -->\n<script type=\"text/javascript\" src=\"https://unpkg.com/artitalk\"></script>\n<!-- 存放说说的容器 -->\n<div id=\"artitalk_main\"></div>\n<script>\nnew Artitalk({\n    appId: 'blszhnruw5lJSvkUXt2icpcK-MdYXbMMI', // Your LeanCloud appId\n    appKey: 'hRUegQRKN8nkH3Bc1wdlDvzm', // Your LeanCloud appKey\n    pageSize: 20, //每页评论数量\n    shuoPla: '', //评论框里显示，可以不填\n    motion: 0, //加载动画的开关 0（关闭），1（开启）\n    atComment: 0, //评论功能的开关 0（关闭），1（开启）\n    bgImg: '', //评论框里的背景，可以不填\n    color1: 'linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 154, 190) 85%)',\n    color2: 'linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 154, 190) 85%)',\n    color3: 'black',\n})\n</script>","site":{"data":{}},"excerpt":"","more":"<!-- 引用 artitalk -->\n<script type=\"text/javascript\" src=\"https://unpkg.com/artitalk\"></script>\n<!-- 存放说说的容器 -->\n<div id=\"artitalk_main\"></div>\n<script>\nnew Artitalk({\n    appId: 'blszhnruw5lJSvkUXt2icpcK-MdYXbMMI', // Your LeanCloud appId\n    appKey: 'hRUegQRKN8nkH3Bc1wdlDvzm', // Your LeanCloud appKey\n    pageSize: 20, //每页评论数量\n    shuoPla: '', //评论框里显示，可以不填\n    motion: 0, //加载动画的开关 0（关闭），1（开启）\n    atComment: 0, //评论功能的开关 0（关闭），1（开启）\n    bgImg: '', //评论框里的背景，可以不填\n    color1: 'linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 154, 190) 85%)',\n    color2: 'linear-gradient(45deg, rgb(109, 208, 242) 15%, rgb(245, 154, 190) 85%)',\n    color3: 'black',\n})\n</script>"},{"title":"关于","date":"2022-01-05T15:26:02.000Z","type":"about","comments":0,"_content":"\n嗨！\n\n我是包博，一名后端开发工程师。\n\n擅长使用 Java 与 Go 语言，正在努力学习 Vue 中。\n\n读过很多书，走过很多路，仍觉得美好在前方。\n\n希望你能在这里获得新的经验，一起进步！\n\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2022-01-05 23:26:02\ntype: \"about\"\ncomments: false\n---\n\n嗨！\n\n我是包博，一名后端开发工程师。\n\n擅长使用 Java 与 Go 语言，正在努力学习 Vue 中。\n\n读过很多书，走过很多路，仍觉得美好在前方。\n\n希望你能在这里获得新的经验，一起进步！\n\n","updated":"2022-09-08T10:54:50.091Z","path":"about/index.html","layout":"page","_id":"cl924eooe0008nq54fkawapng","content":"<p>嗨！</p>\n<p>我是包博，一名后端开发工程师。</p>\n<p>擅长使用 Java 与 Go 语言，正在努力学习 Vue 中。</p>\n<p>读过很多书，走过很多路，仍觉得美好在前方。</p>\n<p>希望你能在这里获得新的经验，一起进步！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>嗨！</p>\n<p>我是包博，一名后端开发工程师。</p>\n<p>擅长使用 Java 与 Go 语言，正在努力学习 Vue 中。</p>\n<p>读过很多书，走过很多路，仍觉得美好在前方。</p>\n<p>希望你能在这里获得新的经验，一起进步！</p>\n"}],"Post":[{"title":"Alfred Workflow 时间转换","description":"<center>使用 Alfred Workflow 创建一个时间转换的工具。</center>","abbrlink":393446932,"date":"2022-03-23T11:37:39.000Z","_content":"\n# 创建 Workflow\n\n参考教程：https://sspai.com/post/61754 。\n\n# 注意：如果使用 Python3\n\n需要使用此仓库的 workflow 文件夹内容：https://github.com/NorthIsUp/alfred-workflow-py3。\n\n# 注意：默认时区为当地时区\n\n如果需要 UTC 时间，请手动将 timestamp.py 中 第 14 行的 `time.localtime(ts)` 修改为 `time.gmtime(ts)` 。\n\n# 使用示例\n\n![TimeConvert](../images/TimeConvert.png)\n\n# 项目地址\n\nhttps://github.com/sakiila/minipy/tree/main/AlfredWorkflow\n\n\n参考教程：\n[使用python实现一个日期和时间戳互转的Alfred workflow](https://pythonmana.com/2022/02/202202252149470874.html)\n\n","source":"_posts/AlfredWorkflow时间转换.md","raw":"---\ntitle: Alfred Workflow 时间转换\ntags:\n  - Alfred\n  - 实战\ncategories: 开发\ndescription: <center>使用 Alfred Workflow 创建一个时间转换的工具。</center>\nabbrlink: 393446932\ndate: 2022-03-23 19:37:39\n---\n\n# 创建 Workflow\n\n参考教程：https://sspai.com/post/61754 。\n\n# 注意：如果使用 Python3\n\n需要使用此仓库的 workflow 文件夹内容：https://github.com/NorthIsUp/alfred-workflow-py3。\n\n# 注意：默认时区为当地时区\n\n如果需要 UTC 时间，请手动将 timestamp.py 中 第 14 行的 `time.localtime(ts)` 修改为 `time.gmtime(ts)` 。\n\n# 使用示例\n\n![TimeConvert](../images/TimeConvert.png)\n\n# 项目地址\n\nhttps://github.com/sakiila/minipy/tree/main/AlfredWorkflow\n\n\n参考教程：\n[使用python实现一个日期和时间戳互转的Alfred workflow](https://pythonmana.com/2022/02/202202252149470874.html)\n\n","slug":"AlfredWorkflow时间转换","published":1,"updated":"2022-09-16T03:54:36.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooa0001nq548kb46g9o","content":"<h1 id=\"创建-Workflow\"><a href=\"#创建-Workflow\" class=\"headerlink\" title=\"创建 Workflow\"></a>创建 Workflow</h1><p>参考教程：<a href=\"https://sspai.com/post/61754\">https://sspai.com/post/61754</a> 。</p>\n<h1 id=\"注意：如果使用-Python3\"><a href=\"#注意：如果使用-Python3\" class=\"headerlink\" title=\"注意：如果使用 Python3\"></a>注意：如果使用 Python3</h1><p>需要使用此仓库的 workflow 文件夹内容：<a href=\"https://github.com/NorthIsUp/alfred-workflow-py3%E3%80%82\">https://github.com/NorthIsUp/alfred-workflow-py3。</a></p>\n<h1 id=\"注意：默认时区为当地时区\"><a href=\"#注意：默认时区为当地时区\" class=\"headerlink\" title=\"注意：默认时区为当地时区\"></a>注意：默认时区为当地时区</h1><p>如果需要 UTC 时间，请手动将 timestamp.py 中 第 14 行的 <code>time.localtime(ts)</code> 修改为 <code>time.gmtime(ts)</code> 。</p>\n<h1 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h1><p><img src=\"../images/TimeConvert.png\" alt=\"TimeConvert\"></p>\n<h1 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h1><p><a href=\"https://github.com/sakiila/minipy/tree/main/AlfredWorkflow\">https://github.com/sakiila/minipy/tree/main/AlfredWorkflow</a></p>\n<p>参考教程：<br><a href=\"https://pythonmana.com/2022/02/202202252149470874.html\">使用python实现一个日期和时间戳互转的Alfred workflow</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"创建-Workflow\"><a href=\"#创建-Workflow\" class=\"headerlink\" title=\"创建 Workflow\"></a>创建 Workflow</h1><p>参考教程：<a href=\"https://sspai.com/post/61754\">https://sspai.com/post/61754</a> 。</p>\n<h1 id=\"注意：如果使用-Python3\"><a href=\"#注意：如果使用-Python3\" class=\"headerlink\" title=\"注意：如果使用 Python3\"></a>注意：如果使用 Python3</h1><p>需要使用此仓库的 workflow 文件夹内容：<a href=\"https://github.com/NorthIsUp/alfred-workflow-py3%E3%80%82\">https://github.com/NorthIsUp/alfred-workflow-py3。</a></p>\n<h1 id=\"注意：默认时区为当地时区\"><a href=\"#注意：默认时区为当地时区\" class=\"headerlink\" title=\"注意：默认时区为当地时区\"></a>注意：默认时区为当地时区</h1><p>如果需要 UTC 时间，请手动将 timestamp.py 中 第 14 行的 <code>time.localtime(ts)</code> 修改为 <code>time.gmtime(ts)</code> 。</p>\n<h1 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h1><p><img src=\"../images/TimeConvert.png\" alt=\"TimeConvert\"></p>\n<h1 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h1><p><a href=\"https://github.com/sakiila/minipy/tree/main/AlfredWorkflow\">https://github.com/sakiila/minipy/tree/main/AlfredWorkflow</a></p>\n<p>参考教程：<br><a href=\"https://pythonmana.com/2022/02/202202252149470874.html\">使用python实现一个日期和时间戳互转的Alfred workflow</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"../images/TimeConvert.png","popularPost_tmp_gaData":{"updated":"Fri Sep 16 2022 11:54:36 GMT+0800 (China Standard Time)","title":"Alfred Workflow 时间转换","path":"393446932/","eyeCatchImage":"../images/TimeConvert.png","excerpt":"<center>使用 Alfred Workflow 创建一个时间转换的工具。</center>","date":{"_isAMomentObject":true,"_i":"2022-03-23T11:37:39.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-03-23T11:37:39.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["Alfred","实战"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"DNS 汇总","description":"<center>DNS 汇总</center>","abbrlink":569693028,"date":"2017-05-21T13:50:00.000Z","_content":"114:\n114.114.114.114 114.114.115.115 普通用户使用\n114.114.114.119 114.114.115.119 拦截钓鱼病毒木马网站\n114.114.114.110 114.114.115.110 拦截色情网站\n\nGoogle Public DNS：\n8.8.8.8\n8.8.4.4\n2001:4860:4860::8888\n2001:4860:4860::8844\n\nOpenDNS:\n208.67.222.222\n208.67.220.220\n\nOpenNIC:\n128.199.248.105\n106.186.17.181\n\nV2EX DNS:\n199.91.73.222\n178.79.131.110\n\ngiga.net.tw:\n203.133.1.6\n203.133.1.7\n203.133.1.8\n\n阿里巴巴 DNS:\n223.5.5.5\n223.6.6.6\n\nUrns – 具备抗污染/具备科学网\n218.59.181.182\n115.159.157.26\n115.159.158.38\n\nPandaDNS – 具备抗污染/具备科学网\n182.254.158.191\n120.27.30.176\n\nOneDNS – 具备抗污染/广告/加速\n南方首选:112.124.47.27\n北方首选:114.215.126.16﻿\n\n科学上网：\n123.207.137.88","source":"_posts/DNS 汇总.md","raw":"---\ntitle: DNS 汇总\ntags:\n  - DNS\ncategories: 收集\ndescription: <center>DNS 汇总</center>\nabbrlink: 569693028\ndate: 2017-05-21 21:50:00\n---\n114:\n114.114.114.114 114.114.115.115 普通用户使用\n114.114.114.119 114.114.115.119 拦截钓鱼病毒木马网站\n114.114.114.110 114.114.115.110 拦截色情网站\n\nGoogle Public DNS：\n8.8.8.8\n8.8.4.4\n2001:4860:4860::8888\n2001:4860:4860::8844\n\nOpenDNS:\n208.67.222.222\n208.67.220.220\n\nOpenNIC:\n128.199.248.105\n106.186.17.181\n\nV2EX DNS:\n199.91.73.222\n178.79.131.110\n\ngiga.net.tw:\n203.133.1.6\n203.133.1.7\n203.133.1.8\n\n阿里巴巴 DNS:\n223.5.5.5\n223.6.6.6\n\nUrns – 具备抗污染/具备科学网\n218.59.181.182\n115.159.157.26\n115.159.158.38\n\nPandaDNS – 具备抗污染/具备科学网\n182.254.158.191\n120.27.30.176\n\nOneDNS – 具备抗污染/广告/加速\n南方首选:112.124.47.27\n北方首选:114.215.126.16﻿\n\n科学上网：\n123.207.137.88","slug":"DNS 汇总","published":1,"updated":"2022-09-13T14:24:02.929Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooc0003nq54b4yf5cac","content":"<p>114:<br>114.114.114.114 114.114.115.115 普通用户使用<br>114.114.114.119 114.114.115.119 拦截钓鱼病毒木马网站<br>114.114.114.110 114.114.115.110 拦截色情网站</p>\n<p>Google Public DNS：<br>8.8.8.8<br>8.8.4.4<br>2001:4860:4860::8888<br>2001:4860:4860::8844</p>\n<p>OpenDNS:<br>208.67.222.222<br>208.67.220.220</p>\n<p>OpenNIC:<br>128.199.248.105<br>106.186.17.181</p>\n<p>V2EX DNS:<br>199.91.73.222<br>178.79.131.110</p>\n<p>giga.net.tw:<br>203.133.1.6<br>203.133.1.7<br>203.133.1.8</p>\n<p>阿里巴巴 DNS:<br>223.5.5.5<br>223.6.6.6</p>\n<p>Urns – 具备抗污染/具备科学网<br>218.59.181.182<br>115.159.157.26<br>115.159.158.38</p>\n<p>PandaDNS – 具备抗污染/具备科学网<br>182.254.158.191<br>120.27.30.176</p>\n<p>OneDNS – 具备抗污染/广告/加速<br>南方首选:112.124.47.27<br>北方首选:114.215.126.16﻿</p>\n<p>科学上网：<br>123.207.137.88</p>\n","site":{"data":{}},"excerpt":"","more":"<p>114:<br>114.114.114.114 114.114.115.115 普通用户使用<br>114.114.114.119 114.114.115.119 拦截钓鱼病毒木马网站<br>114.114.114.110 114.114.115.110 拦截色情网站</p>\n<p>Google Public DNS：<br>8.8.8.8<br>8.8.4.4<br>2001:4860:4860::8888<br>2001:4860:4860::8844</p>\n<p>OpenDNS:<br>208.67.222.222<br>208.67.220.220</p>\n<p>OpenNIC:<br>128.199.248.105<br>106.186.17.181</p>\n<p>V2EX DNS:<br>199.91.73.222<br>178.79.131.110</p>\n<p>giga.net.tw:<br>203.133.1.6<br>203.133.1.7<br>203.133.1.8</p>\n<p>阿里巴巴 DNS:<br>223.5.5.5<br>223.6.6.6</p>\n<p>Urns – 具备抗污染/具备科学网<br>218.59.181.182<br>115.159.157.26<br>115.159.158.38</p>\n<p>PandaDNS – 具备抗污染/具备科学网<br>182.254.158.191<br>120.27.30.176</p>\n<p>OneDNS – 具备抗污染/广告/加速<br>南方首选:112.124.47.27<br>北方首选:114.215.126.16﻿</p>\n<p>科学上网：<br>123.207.137.88</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"DNS 汇总","path":"569693028/","eyeCatchImage":null,"excerpt":"<center>DNS 汇总</center>","date":{"_isAMomentObject":true,"_i":"2017-05-21T13:50:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-05-21T13:50:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"收集","tags":["DNS"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"2018 年阅读清单","description":"<center>2018 年阅读清单</center>","abbrlink":2106794902,"date":"2018-01-05T12:18:00.000Z","_content":"# 读过的书：\n### 技术类\n- 《JavaScript Dom编程艺术》\n- 《Java核心技术 卷一》\n- 《计算机是怎样跑起来的》\n- 《跟阿铭学Linux》\n- 《Sql必知必会》\n- 《算法图解》\n\n### 文学类\n- 《黑客与画家》\n\n# 正在读的书：\n### 技术类：\n- 《程序员面试金典》\n- 《Java编程思想》\n- 《算法》\n- 《精通Spring 4.x 企业应用开发实战》\n- 《Linux命令行与shell脚本编程大全》\n- 《Merriam-Webster's Vocabulary Builder》\n\n### 文学类：\n- 《围城》\n- 《堂吉诃德》\n\n# 计划读的书：\n### 技术类：\n- 《剑指Offer》\n- 《Mysql必知必会》\n- 《程序是怎样跑起来的》\n- 《深入理解Java虚拟机》\n- 《图解HTTP》\n- 《图解Java多线程设计模式》\n- 《图解设计模式》\n- 《Structure and Interpretation of Computer Programs》\n- 《Clean Code》\n- 《The pragmatic programmer》\n- 《Land of Lisp》\n- 《Common Lisp》\n\n### 文学类：\n- 《时间简史》\n- 《小小小小的火》\n\n加油！","source":"_posts/2018 年阅读清单.md","raw":"---\ntitle: 2018 年阅读清单\ntags:\n  - 清单\ncategories: 阅读\ndescription: <center>2018 年阅读清单</center>\nabbrlink: 2106794902\ndate: 2018-01-05 20:18:00\n---\n# 读过的书：\n### 技术类\n- 《JavaScript Dom编程艺术》\n- 《Java核心技术 卷一》\n- 《计算机是怎样跑起来的》\n- 《跟阿铭学Linux》\n- 《Sql必知必会》\n- 《算法图解》\n\n### 文学类\n- 《黑客与画家》\n\n# 正在读的书：\n### 技术类：\n- 《程序员面试金典》\n- 《Java编程思想》\n- 《算法》\n- 《精通Spring 4.x 企业应用开发实战》\n- 《Linux命令行与shell脚本编程大全》\n- 《Merriam-Webster's Vocabulary Builder》\n\n### 文学类：\n- 《围城》\n- 《堂吉诃德》\n\n# 计划读的书：\n### 技术类：\n- 《剑指Offer》\n- 《Mysql必知必会》\n- 《程序是怎样跑起来的》\n- 《深入理解Java虚拟机》\n- 《图解HTTP》\n- 《图解Java多线程设计模式》\n- 《图解设计模式》\n- 《Structure and Interpretation of Computer Programs》\n- 《Clean Code》\n- 《The pragmatic programmer》\n- 《Land of Lisp》\n- 《Common Lisp》\n\n### 文学类：\n- 《时间简史》\n- 《小小小小的火》\n\n加油！","slug":"2018 年阅读清单","published":1,"updated":"2022-09-13T14:24:02.920Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooe0007nq542f24an91","content":"<h1 id=\"读过的书：\"><a href=\"#读过的书：\" class=\"headerlink\" title=\"读过的书：\"></a>读过的书：</h1><h3 id=\"技术类\"><a href=\"#技术类\" class=\"headerlink\" title=\"技术类\"></a>技术类</h3><ul>\n<li>《JavaScript Dom编程艺术》</li>\n<li>《Java核心技术 卷一》</li>\n<li>《计算机是怎样跑起来的》</li>\n<li>《跟阿铭学Linux》</li>\n<li>《Sql必知必会》</li>\n<li>《算法图解》</li>\n</ul>\n<h3 id=\"文学类\"><a href=\"#文学类\" class=\"headerlink\" title=\"文学类\"></a>文学类</h3><ul>\n<li>《黑客与画家》</li>\n</ul>\n<h1 id=\"正在读的书：\"><a href=\"#正在读的书：\" class=\"headerlink\" title=\"正在读的书：\"></a>正在读的书：</h1><h3 id=\"技术类：\"><a href=\"#技术类：\" class=\"headerlink\" title=\"技术类：\"></a>技术类：</h3><ul>\n<li>《程序员面试金典》</li>\n<li>《Java编程思想》</li>\n<li>《算法》</li>\n<li>《精通Spring 4.x 企业应用开发实战》</li>\n<li>《Linux命令行与shell脚本编程大全》</li>\n<li>《Merriam-Webster’s Vocabulary Builder》</li>\n</ul>\n<h3 id=\"文学类：\"><a href=\"#文学类：\" class=\"headerlink\" title=\"文学类：\"></a>文学类：</h3><ul>\n<li>《围城》</li>\n<li>《堂吉诃德》</li>\n</ul>\n<h1 id=\"计划读的书：\"><a href=\"#计划读的书：\" class=\"headerlink\" title=\"计划读的书：\"></a>计划读的书：</h1><h3 id=\"技术类：-1\"><a href=\"#技术类：-1\" class=\"headerlink\" title=\"技术类：\"></a>技术类：</h3><ul>\n<li>《剑指Offer》</li>\n<li>《Mysql必知必会》</li>\n<li>《程序是怎样跑起来的》</li>\n<li>《深入理解Java虚拟机》</li>\n<li>《图解HTTP》</li>\n<li>《图解Java多线程设计模式》</li>\n<li>《图解设计模式》</li>\n<li>《Structure and Interpretation of Computer Programs》</li>\n<li>《Clean Code》</li>\n<li>《The pragmatic programmer》</li>\n<li>《Land of Lisp》</li>\n<li>《Common Lisp》</li>\n</ul>\n<h3 id=\"文学类：-1\"><a href=\"#文学类：-1\" class=\"headerlink\" title=\"文学类：\"></a>文学类：</h3><ul>\n<li>《时间简史》</li>\n<li>《小小小小的火》</li>\n</ul>\n<p>加油！</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"读过的书：\"><a href=\"#读过的书：\" class=\"headerlink\" title=\"读过的书：\"></a>读过的书：</h1><h3 id=\"技术类\"><a href=\"#技术类\" class=\"headerlink\" title=\"技术类\"></a>技术类</h3><ul>\n<li>《JavaScript Dom编程艺术》</li>\n<li>《Java核心技术 卷一》</li>\n<li>《计算机是怎样跑起来的》</li>\n<li>《跟阿铭学Linux》</li>\n<li>《Sql必知必会》</li>\n<li>《算法图解》</li>\n</ul>\n<h3 id=\"文学类\"><a href=\"#文学类\" class=\"headerlink\" title=\"文学类\"></a>文学类</h3><ul>\n<li>《黑客与画家》</li>\n</ul>\n<h1 id=\"正在读的书：\"><a href=\"#正在读的书：\" class=\"headerlink\" title=\"正在读的书：\"></a>正在读的书：</h1><h3 id=\"技术类：\"><a href=\"#技术类：\" class=\"headerlink\" title=\"技术类：\"></a>技术类：</h3><ul>\n<li>《程序员面试金典》</li>\n<li>《Java编程思想》</li>\n<li>《算法》</li>\n<li>《精通Spring 4.x 企业应用开发实战》</li>\n<li>《Linux命令行与shell脚本编程大全》</li>\n<li>《Merriam-Webster’s Vocabulary Builder》</li>\n</ul>\n<h3 id=\"文学类：\"><a href=\"#文学类：\" class=\"headerlink\" title=\"文学类：\"></a>文学类：</h3><ul>\n<li>《围城》</li>\n<li>《堂吉诃德》</li>\n</ul>\n<h1 id=\"计划读的书：\"><a href=\"#计划读的书：\" class=\"headerlink\" title=\"计划读的书：\"></a>计划读的书：</h1><h3 id=\"技术类：-1\"><a href=\"#技术类：-1\" class=\"headerlink\" title=\"技术类：\"></a>技术类：</h3><ul>\n<li>《剑指Offer》</li>\n<li>《Mysql必知必会》</li>\n<li>《程序是怎样跑起来的》</li>\n<li>《深入理解Java虚拟机》</li>\n<li>《图解HTTP》</li>\n<li>《图解Java多线程设计模式》</li>\n<li>《图解设计模式》</li>\n<li>《Structure and Interpretation of Computer Programs》</li>\n<li>《Clean Code》</li>\n<li>《The pragmatic programmer》</li>\n<li>《Land of Lisp》</li>\n<li>《Common Lisp》</li>\n</ul>\n<h3 id=\"文学类：-1\"><a href=\"#文学类：-1\" class=\"headerlink\" title=\"文学类：\"></a>文学类：</h3><ul>\n<li>《时间简史》</li>\n<li>《小小小小的火》</li>\n</ul>\n<p>加油！</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"2018 年阅读清单","path":"2106794902/","eyeCatchImage":null,"excerpt":"<center>2018 年阅读清单</center>","date":{"_isAMomentObject":true,"_i":"2018-01-05T12:18:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-01-05T12:18:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"阅读","tags":["清单"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"GrayUtils 灰度配置工具类","description":"<center>使用 GrayUtils 灰度配置工具类来控制灰度开关和流量。</center>","abbrlink":40207247,"date":"2022-01-20T13:15:00.000Z","_content":"# 一、使用方式\n\n1. 添加相关配置，参考配置示例；\n2. 使用 `GrayUtils.IsHitGray(远端配置, Id)` 方法，进行灰度判断。\n\n# 二、配置示例\n\n```json\n{\n \"needGray\": true,\n \"needCheck\": true,\n \"whiteldList\":［1386999，13870001],\n \"whitePercent\": \"64.5\"\n}\n```\n\n参数解释：\n\n- needGray：灰度总开关，Boolean 类型，为 true 则继续灰度判断流程，为 false 则跳过判断执行原有逻辑。\n- needCheck：校验开关，Boolean 类型。为 true 则继续灰度判断流程，为 false 则跳过判断执行灰度逻辑（等于全量灰度）。\n- whiteldList：白名单配置列表，Long 类型数组，命中则执行灰度逻辑，未命中或为空则继续灰度判断流程。\n- whitePercent：百分比配置字符串，数字格字符串，可以为小数（最好不超过一位），命中则执行灰度逻辑，未命中或为空则执行原有逻辑。举例：“64.5“ 表示 64.5％ 以下的请求执行灰度逻辑。\n\n# 三、执行流程\n\n![GrayUtils](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/28ff9937-b3d6-4548-a3d2-33a61cddc439/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220916%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220916T110340Z&X-Amz-Expires=86400&X-Amz-Signature=502f9e912ba4400dfc93b7b86f5ca93aacb17484672d20dad7b6fd3769564855&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22&x-id=GetObject)\n\n# 四、示例代码\n\n```java\nimport com.alibaba.fastjson.JSONObject;\nimport lombok.Data;\nimport org.apache.commons.collections.CollectionUtils;\nimport org.apache.commons.lang3.StringUtils;\n\nimport java.math.BigDecimal;\nimport java.util.List;\n\n/**\n * 灰度工具\n * @see <a href=\"https://km.sankuai.com/page/1204474051\">使用教程</a>\n */\npublic class GrayUtils {\n    \n    public static boolean isHitGray(String jsonString) {\n        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);\n        return grayConfDTO.isHitGray();\n    }\n    \n    public static boolean isHitGray(String jsonString, Long id) {\n        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);\n        return grayConfDTO.isHitGray(id);\n    }\n    \n    public static boolean isHitGrayWithoutId(String jsonString) {\n        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);\n        return grayConfDTO.isHitGrayWithoutId();\n    }\n\n    @Data\n    static class GrayConfDTO {\n        /**\n         * 灰度总开关\n         */\n        private Boolean needGray;\n\n        /**\n         * 灰度校验开关\n         */\n        private Boolean needCheck;\n\n        /**\n         * 灰度列表\n         */\n        private List<Long> whiteIdList;\n\n        /**\n         * 灰度百分比\n         */\n        private String whitePercent;\n\n        public boolean isHitGray() {\n            return needGray;\n        }\n\n        public boolean isHitGray(Long id) {\n            // 总开关关闭，执行原有逻辑\n            if (!needGray) {\n                return Boolean.FALSE;\n            }\n\n            // 不需要校验，执行新逻辑\n            if (!needCheck) {\n                return Boolean.TRUE;\n            }\n\n            // id 为空，执行原有逻辑\n            if (id == null) {\n                return  Boolean.FALSE;\n            }\n\n            // id 在列表中，执行新逻辑\n            if (CollectionUtils.isNotEmpty(whiteIdList)\n                    && whiteIdList.contains(id)) {\n                return Boolean.TRUE;\n            }\n\n            // id 在百分比中，执行新逻辑\n            if (StringUtils.isNotBlank(whitePercent)) {\n                return isHitPercent(id, whitePercent);\n            }\n\n            return Boolean.FALSE;\n        }\n\n        public boolean isHitGrayWithoutId() {\n            // 总开关关闭，执行原有逻辑\n            if (!needGray) {\n                return Boolean.FALSE;\n            }\n\n            // 不需要校验，执行新逻辑\n            if (!needCheck) {\n                return Boolean.TRUE;\n            }\n\n            // 根据时间戳进行灰度（暂行）\n            if (StringUtils.isNotBlank(whitePercent)) {\n                return isHitPercent(System.currentTimeMillis(), whitePercent);\n            }\n\n            return Boolean.FALSE;\n        }\n\n        /**\n         * 判断是否命中百分比配置\n         *\n         * @param id\n         * @param whitePercent\n         * @return\n         */\n        private Boolean isHitPercent(Long id, String whitePercent) {\n            // 被除数\n            BigDecimal dividend = new BigDecimal(id);\n            // 除数\n            BigDecimal divisor = new BigDecimal(\"100\");\n            // 余数\n            BigDecimal remainder = new BigDecimal(whitePercent.trim());\n\n            // 计算小数点后位数 n\n            int decimalPlaces = countDecimalPlaces(whitePercent);\n            // 放大 10 ^ n\n            divisor = divisor.scaleByPowerOfTen(decimalPlaces);\n            remainder = remainder.scaleByPowerOfTen(decimalPlaces);\n\n            // 取余\n            BigDecimal idRemainder = dividend.remainder(divisor);\n\n            // 比较\n            if (idRemainder.compareTo(remainder) < 0) {\n                return Boolean.TRUE;\n            }\n            return Boolean.FALSE;\n        }\n\n        /**\n         * 计算小数点后位数\n         * 12 = 0\n         * 12.5 = 1\n         * 12.50 = 2\n         *\n         * @param stringNumber\n         * @return\n         */\n        private int countDecimalPlaces(String stringNumber) {\n            if (!stringNumber.contains(\".\")) {\n                return 0;\n            }\n            return stringNumber.length() - stringNumber.indexOf('.') - 1;\n        }\n    }\n}\n```","source":"_posts/GrayUtils 灰度配置工具类.md","raw":"---\ntitle: GrayUtils 灰度配置工具类\ntags:\n  - Java\n  - Gray\ncategories: 开发\ndescription: <center>使用 GrayUtils 灰度配置工具类来控制灰度开关和流量。</center>\nabbrlink: 40207247\ndate: 2022-01-20 21:15:00\n---\n# 一、使用方式\n\n1. 添加相关配置，参考配置示例；\n2. 使用 `GrayUtils.IsHitGray(远端配置, Id)` 方法，进行灰度判断。\n\n# 二、配置示例\n\n```json\n{\n \"needGray\": true,\n \"needCheck\": true,\n \"whiteldList\":［1386999，13870001],\n \"whitePercent\": \"64.5\"\n}\n```\n\n参数解释：\n\n- needGray：灰度总开关，Boolean 类型，为 true 则继续灰度判断流程，为 false 则跳过判断执行原有逻辑。\n- needCheck：校验开关，Boolean 类型。为 true 则继续灰度判断流程，为 false 则跳过判断执行灰度逻辑（等于全量灰度）。\n- whiteldList：白名单配置列表，Long 类型数组，命中则执行灰度逻辑，未命中或为空则继续灰度判断流程。\n- whitePercent：百分比配置字符串，数字格字符串，可以为小数（最好不超过一位），命中则执行灰度逻辑，未命中或为空则执行原有逻辑。举例：“64.5“ 表示 64.5％ 以下的请求执行灰度逻辑。\n\n# 三、执行流程\n\n![GrayUtils](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/28ff9937-b3d6-4548-a3d2-33a61cddc439/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220916%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220916T110340Z&X-Amz-Expires=86400&X-Amz-Signature=502f9e912ba4400dfc93b7b86f5ca93aacb17484672d20dad7b6fd3769564855&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22&x-id=GetObject)\n\n# 四、示例代码\n\n```java\nimport com.alibaba.fastjson.JSONObject;\nimport lombok.Data;\nimport org.apache.commons.collections.CollectionUtils;\nimport org.apache.commons.lang3.StringUtils;\n\nimport java.math.BigDecimal;\nimport java.util.List;\n\n/**\n * 灰度工具\n * @see <a href=\"https://km.sankuai.com/page/1204474051\">使用教程</a>\n */\npublic class GrayUtils {\n    \n    public static boolean isHitGray(String jsonString) {\n        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);\n        return grayConfDTO.isHitGray();\n    }\n    \n    public static boolean isHitGray(String jsonString, Long id) {\n        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);\n        return grayConfDTO.isHitGray(id);\n    }\n    \n    public static boolean isHitGrayWithoutId(String jsonString) {\n        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);\n        return grayConfDTO.isHitGrayWithoutId();\n    }\n\n    @Data\n    static class GrayConfDTO {\n        /**\n         * 灰度总开关\n         */\n        private Boolean needGray;\n\n        /**\n         * 灰度校验开关\n         */\n        private Boolean needCheck;\n\n        /**\n         * 灰度列表\n         */\n        private List<Long> whiteIdList;\n\n        /**\n         * 灰度百分比\n         */\n        private String whitePercent;\n\n        public boolean isHitGray() {\n            return needGray;\n        }\n\n        public boolean isHitGray(Long id) {\n            // 总开关关闭，执行原有逻辑\n            if (!needGray) {\n                return Boolean.FALSE;\n            }\n\n            // 不需要校验，执行新逻辑\n            if (!needCheck) {\n                return Boolean.TRUE;\n            }\n\n            // id 为空，执行原有逻辑\n            if (id == null) {\n                return  Boolean.FALSE;\n            }\n\n            // id 在列表中，执行新逻辑\n            if (CollectionUtils.isNotEmpty(whiteIdList)\n                    && whiteIdList.contains(id)) {\n                return Boolean.TRUE;\n            }\n\n            // id 在百分比中，执行新逻辑\n            if (StringUtils.isNotBlank(whitePercent)) {\n                return isHitPercent(id, whitePercent);\n            }\n\n            return Boolean.FALSE;\n        }\n\n        public boolean isHitGrayWithoutId() {\n            // 总开关关闭，执行原有逻辑\n            if (!needGray) {\n                return Boolean.FALSE;\n            }\n\n            // 不需要校验，执行新逻辑\n            if (!needCheck) {\n                return Boolean.TRUE;\n            }\n\n            // 根据时间戳进行灰度（暂行）\n            if (StringUtils.isNotBlank(whitePercent)) {\n                return isHitPercent(System.currentTimeMillis(), whitePercent);\n            }\n\n            return Boolean.FALSE;\n        }\n\n        /**\n         * 判断是否命中百分比配置\n         *\n         * @param id\n         * @param whitePercent\n         * @return\n         */\n        private Boolean isHitPercent(Long id, String whitePercent) {\n            // 被除数\n            BigDecimal dividend = new BigDecimal(id);\n            // 除数\n            BigDecimal divisor = new BigDecimal(\"100\");\n            // 余数\n            BigDecimal remainder = new BigDecimal(whitePercent.trim());\n\n            // 计算小数点后位数 n\n            int decimalPlaces = countDecimalPlaces(whitePercent);\n            // 放大 10 ^ n\n            divisor = divisor.scaleByPowerOfTen(decimalPlaces);\n            remainder = remainder.scaleByPowerOfTen(decimalPlaces);\n\n            // 取余\n            BigDecimal idRemainder = dividend.remainder(divisor);\n\n            // 比较\n            if (idRemainder.compareTo(remainder) < 0) {\n                return Boolean.TRUE;\n            }\n            return Boolean.FALSE;\n        }\n\n        /**\n         * 计算小数点后位数\n         * 12 = 0\n         * 12.5 = 1\n         * 12.50 = 2\n         *\n         * @param stringNumber\n         * @return\n         */\n        private int countDecimalPlaces(String stringNumber) {\n            if (!stringNumber.contains(\".\")) {\n                return 0;\n            }\n            return stringNumber.length() - stringNumber.indexOf('.') - 1;\n        }\n    }\n}\n```","slug":"GrayUtils 灰度配置工具类","published":1,"updated":"2022-09-16T11:15:13.648Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooe0009nq54b4xjd8ua","content":"<h1 id=\"一、使用方式\"><a href=\"#一、使用方式\" class=\"headerlink\" title=\"一、使用方式\"></a>一、使用方式</h1><ol>\n<li>添加相关配置，参考配置示例；</li>\n<li>使用 <code>GrayUtils.IsHitGray(远端配置, Id)</code> 方法，进行灰度判断。</li>\n</ol>\n<h1 id=\"二、配置示例\"><a href=\"#二、配置示例\" class=\"headerlink\" title=\"二、配置示例\"></a>二、配置示例</h1><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"attr\">&quot;needGray&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;needCheck&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;whiteldList&quot;</span>:［<span class=\"number\">1386999</span>，<span class=\"number\">13870001</span>],</span><br><span class=\"line\"> <span class=\"attr\">&quot;whitePercent&quot;</span>: <span class=\"string\">&quot;64.5&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>参数解释：</p>\n<ul>\n<li>needGray：灰度总开关，Boolean 类型，为 true 则继续灰度判断流程，为 false 则跳过判断执行原有逻辑。</li>\n<li>needCheck：校验开关，Boolean 类型。为 true 则继续灰度判断流程，为 false 则跳过判断执行灰度逻辑（等于全量灰度）。</li>\n<li>whiteldList：白名单配置列表，Long 类型数组，命中则执行灰度逻辑，未命中或为空则继续灰度判断流程。</li>\n<li>whitePercent：百分比配置字符串，数字格字符串，可以为小数（最好不超过一位），命中则执行灰度逻辑，未命中或为空则执行原有逻辑。举例：“64.5“ 表示 64.5％ 以下的请求执行灰度逻辑。</li>\n</ul>\n<h1 id=\"三、执行流程\"><a href=\"#三、执行流程\" class=\"headerlink\" title=\"三、执行流程\"></a>三、执行流程</h1><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/28ff9937-b3d6-4548-a3d2-33a61cddc439/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220916/us-west-2/s3/aws4_request&X-Amz-Date=20220916T110340Z&X-Amz-Expires=86400&X-Amz-Signature=502f9e912ba4400dfc93b7b86f5ca93aacb17484672d20dad7b6fd3769564855&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject\" alt=\"GrayUtils\"></p>\n<h1 id=\"四、示例代码\"><a href=\"#四、示例代码\" class=\"headerlink\" title=\"四、示例代码\"></a>四、示例代码</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.collections.CollectionUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 灰度工具</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@see</span> &lt;a href=&quot;https://km.sankuai.com/page/1204474051&quot;&gt;使用教程&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GrayUtils</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGray</span><span class=\"params\">(String jsonString)</span> </span>&#123;</span><br><span class=\"line\">        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> grayConfDTO.isHitGray();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGray</span><span class=\"params\">(String jsonString, Long id)</span> </span>&#123;</span><br><span class=\"line\">        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> grayConfDTO.isHitGray(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGrayWithoutId</span><span class=\"params\">(String jsonString)</span> </span>&#123;</span><br><span class=\"line\">        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> grayConfDTO.isHitGrayWithoutId();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Data</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GrayConfDTO</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 灰度总开关</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> Boolean needGray;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 灰度校验开关</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> Boolean needCheck;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 灰度列表</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> List&lt;Long&gt; whiteIdList;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 灰度百分比</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String whitePercent;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGray</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> needGray;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGray</span><span class=\"params\">(Long id)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 总开关关闭，执行原有逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!needGray) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.FALSE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 不需要校验，执行新逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!needCheck) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.TRUE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// id 为空，执行原有逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (id == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>  Boolean.FALSE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// id 在列表中，执行新逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (CollectionUtils.isNotEmpty(whiteIdList)</span><br><span class=\"line\">                    &amp;&amp; whiteIdList.contains(id)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.TRUE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// id 在百分比中，执行新逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isNotBlank(whitePercent)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> isHitPercent(id, whitePercent);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Boolean.FALSE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGrayWithoutId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 总开关关闭，执行原有逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!needGray) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.FALSE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 不需要校验，执行新逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!needCheck) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.TRUE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 根据时间戳进行灰度（暂行）</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isNotBlank(whitePercent)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> isHitPercent(System.currentTimeMillis(), whitePercent);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Boolean.FALSE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 判断是否命中百分比配置</span></span><br><span class=\"line\"><span class=\"comment\">         *</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@param</span> whitePercent</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> Boolean <span class=\"title\">isHitPercent</span><span class=\"params\">(Long id, String whitePercent)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 被除数</span></span><br><span class=\"line\">            BigDecimal dividend = <span class=\"keyword\">new</span> BigDecimal(id);</span><br><span class=\"line\">            <span class=\"comment\">// 除数</span></span><br><span class=\"line\">            BigDecimal divisor = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">&quot;100&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 余数</span></span><br><span class=\"line\">            BigDecimal remainder = <span class=\"keyword\">new</span> BigDecimal(whitePercent.trim());</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 计算小数点后位数 n</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> decimalPlaces = countDecimalPlaces(whitePercent);</span><br><span class=\"line\">            <span class=\"comment\">// 放大 10 ^ n</span></span><br><span class=\"line\">            divisor = divisor.scaleByPowerOfTen(decimalPlaces);</span><br><span class=\"line\">            remainder = remainder.scaleByPowerOfTen(decimalPlaces);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 取余</span></span><br><span class=\"line\">            BigDecimal idRemainder = dividend.remainder(divisor);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 比较</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (idRemainder.compareTo(remainder) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.TRUE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Boolean.FALSE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 计算小数点后位数</span></span><br><span class=\"line\"><span class=\"comment\">         * 12 = 0</span></span><br><span class=\"line\"><span class=\"comment\">         * 12.5 = 1</span></span><br><span class=\"line\"><span class=\"comment\">         * 12.50 = 2</span></span><br><span class=\"line\"><span class=\"comment\">         *</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@param</span> stringNumber</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">countDecimalPlaces</span><span class=\"params\">(String stringNumber)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!stringNumber.contains(<span class=\"string\">&quot;.&quot;</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> stringNumber.length() - stringNumber.indexOf(<span class=\"string\">&#x27;.&#x27;</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、使用方式\"><a href=\"#一、使用方式\" class=\"headerlink\" title=\"一、使用方式\"></a>一、使用方式</h1><ol>\n<li>添加相关配置，参考配置示例；</li>\n<li>使用 <code>GrayUtils.IsHitGray(远端配置, Id)</code> 方法，进行灰度判断。</li>\n</ol>\n<h1 id=\"二、配置示例\"><a href=\"#二、配置示例\" class=\"headerlink\" title=\"二、配置示例\"></a>二、配置示例</h1><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"attr\">&quot;needGray&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;needCheck&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"> <span class=\"attr\">&quot;whiteldList&quot;</span>:［<span class=\"number\">1386999</span>，<span class=\"number\">13870001</span>],</span><br><span class=\"line\"> <span class=\"attr\">&quot;whitePercent&quot;</span>: <span class=\"string\">&quot;64.5&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>参数解释：</p>\n<ul>\n<li>needGray：灰度总开关，Boolean 类型，为 true 则继续灰度判断流程，为 false 则跳过判断执行原有逻辑。</li>\n<li>needCheck：校验开关，Boolean 类型。为 true 则继续灰度判断流程，为 false 则跳过判断执行灰度逻辑（等于全量灰度）。</li>\n<li>whiteldList：白名单配置列表，Long 类型数组，命中则执行灰度逻辑，未命中或为空则继续灰度判断流程。</li>\n<li>whitePercent：百分比配置字符串，数字格字符串，可以为小数（最好不超过一位），命中则执行灰度逻辑，未命中或为空则执行原有逻辑。举例：“64.5“ 表示 64.5％ 以下的请求执行灰度逻辑。</li>\n</ul>\n<h1 id=\"三、执行流程\"><a href=\"#三、执行流程\" class=\"headerlink\" title=\"三、执行流程\"></a>三、执行流程</h1><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/28ff9937-b3d6-4548-a3d2-33a61cddc439/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220916/us-west-2/s3/aws4_request&X-Amz-Date=20220916T110340Z&X-Amz-Expires=86400&X-Amz-Signature=502f9e912ba4400dfc93b7b86f5ca93aacb17484672d20dad7b6fd3769564855&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject\" alt=\"GrayUtils\"></p>\n<h1 id=\"四、示例代码\"><a href=\"#四、示例代码\" class=\"headerlink\" title=\"四、示例代码\"></a>四、示例代码</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.collections.CollectionUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 灰度工具</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@see</span> &lt;a href=&quot;https://km.sankuai.com/page/1204474051&quot;&gt;使用教程&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GrayUtils</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGray</span><span class=\"params\">(String jsonString)</span> </span>&#123;</span><br><span class=\"line\">        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> grayConfDTO.isHitGray();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGray</span><span class=\"params\">(String jsonString, Long id)</span> </span>&#123;</span><br><span class=\"line\">        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> grayConfDTO.isHitGray(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGrayWithoutId</span><span class=\"params\">(String jsonString)</span> </span>&#123;</span><br><span class=\"line\">        GrayConfDTO grayConfDTO = JSONObject.parseObject(jsonString, GrayConfDTO.class);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> grayConfDTO.isHitGrayWithoutId();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Data</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GrayConfDTO</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 灰度总开关</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> Boolean needGray;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 灰度校验开关</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> Boolean needCheck;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 灰度列表</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> List&lt;Long&gt; whiteIdList;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 灰度百分比</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String whitePercent;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGray</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> needGray;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGray</span><span class=\"params\">(Long id)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 总开关关闭，执行原有逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!needGray) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.FALSE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 不需要校验，执行新逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!needCheck) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.TRUE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// id 为空，执行原有逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (id == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>  Boolean.FALSE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// id 在列表中，执行新逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (CollectionUtils.isNotEmpty(whiteIdList)</span><br><span class=\"line\">                    &amp;&amp; whiteIdList.contains(id)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.TRUE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// id 在百分比中，执行新逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isNotBlank(whitePercent)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> isHitPercent(id, whitePercent);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Boolean.FALSE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isHitGrayWithoutId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 总开关关闭，执行原有逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!needGray) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.FALSE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 不需要校验，执行新逻辑</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!needCheck) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.TRUE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 根据时间戳进行灰度（暂行）</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isNotBlank(whitePercent)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> isHitPercent(System.currentTimeMillis(), whitePercent);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Boolean.FALSE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 判断是否命中百分比配置</span></span><br><span class=\"line\"><span class=\"comment\">         *</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@param</span> whitePercent</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> Boolean <span class=\"title\">isHitPercent</span><span class=\"params\">(Long id, String whitePercent)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 被除数</span></span><br><span class=\"line\">            BigDecimal dividend = <span class=\"keyword\">new</span> BigDecimal(id);</span><br><span class=\"line\">            <span class=\"comment\">// 除数</span></span><br><span class=\"line\">            BigDecimal divisor = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">&quot;100&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 余数</span></span><br><span class=\"line\">            BigDecimal remainder = <span class=\"keyword\">new</span> BigDecimal(whitePercent.trim());</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 计算小数点后位数 n</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> decimalPlaces = countDecimalPlaces(whitePercent);</span><br><span class=\"line\">            <span class=\"comment\">// 放大 10 ^ n</span></span><br><span class=\"line\">            divisor = divisor.scaleByPowerOfTen(decimalPlaces);</span><br><span class=\"line\">            remainder = remainder.scaleByPowerOfTen(decimalPlaces);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 取余</span></span><br><span class=\"line\">            BigDecimal idRemainder = dividend.remainder(divisor);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 比较</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (idRemainder.compareTo(remainder) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boolean.TRUE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Boolean.FALSE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 计算小数点后位数</span></span><br><span class=\"line\"><span class=\"comment\">         * 12 = 0</span></span><br><span class=\"line\"><span class=\"comment\">         * 12.5 = 1</span></span><br><span class=\"line\"><span class=\"comment\">         * 12.50 = 2</span></span><br><span class=\"line\"><span class=\"comment\">         *</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@param</span> stringNumber</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">countDecimalPlaces</span><span class=\"params\">(String stringNumber)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!stringNumber.contains(<span class=\"string\">&quot;.&quot;</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> stringNumber.length() - stringNumber.indexOf(<span class=\"string\">&#x27;.&#x27;</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","popularPost_tmp_postPath":true,"eyeCatchImage":"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/28ff9937-b3d6-4548-a3d2-33a61cddc439/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220916/us-west-2/s3/aws4_request&X-Amz-Date=20220916T110340Z&X-Amz-Expires=86400&X-Amz-Signature=502f9e912ba4400dfc93b7b86f5ca93aacb17484672d20dad7b6fd3769564855&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject","popularPost_tmp_gaData":{"updated":"Fri Sep 16 2022 19:15:13 GMT+0800 (China Standard Time)","title":"GrayUtils 灰度配置工具类","path":"40207247/","eyeCatchImage":"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/28ff9937-b3d6-4548-a3d2-33a61cddc439/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20220916/us-west-2/s3/aws4_request&X-Amz-Date=20220916T110340Z&X-Amz-Expires=86400&X-Amz-Signature=502f9e912ba4400dfc93b7b86f5ca93aacb17484672d20dad7b6fd3769564855&X-Amz-SignedHeaders=host&response-content-disposition=filename%20=%22Untitled.png%22&x-id=GetObject","excerpt":"<center>使用 GrayUtils 灰度配置工具类来控制灰度开关和流量。</center>","date":{"_isAMomentObject":true,"_i":"2022-01-20T13:15:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-01-20T13:15:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["Java","Gray"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Gradle 搭配 Mybatis-Generator 进行代码自动生成","description":"<center>Gradle 搭配 Mybatis-Generator 进行代码自动生成。</center>","abbrlink":680024629,"date":"2022-08-24T10:10:37.000Z","_content":"# 一、Mybatis-Generator 引入\n\n在 build.gradle 文件的 plugins 模块加上一行配置：\n```\nid \"com.thinkimi.gradle.MybatisGenerator\" version \"2.4\"\n```\n\n然后，在 build.gradle 文件的末尾加上配置引入：\n```\nconfigurations {\nmybatisGenerator\n}\n\nmybatisGenerator {\nverbose = true\nconfigFile = 'bob-server-模块名/src/main/resources/MyBatisGeneratorConfig.xml'\n}\n```\n然后 load 一下 Gradle 配置进行刷新。\n\n# 二、MyBatisGeneratorConfig.xml 配置文件修改\n\n将以下配置进行粘贴覆盖：\n```xml\n<jdbcConnection driverClass=\"com.mysql.jdbc.Driver\"\nconnectionURL=\"jdbc:mysql://db\" userId=\"username\" password=\"password\">\n</jdbcConnection>\n\n<javaModelGenerator targetPackage=\"me.bob.server.模块名.mapperbean\"\ntargetProject=\"bob-server-模块名/src/main/java\">\n<property name=\"trimStrings\" value=\"true\"/>\n</javaModelGenerator>\n\n<sqlMapGenerator targetPackage=\"me.bob.server.模块名.mapperxml\"\ntargetProject=\"bob-server-模块名/src/main/java\"/>\n\n<javaClientGenerator targetPackage=\"me.bob.server.模块名.mapper\"\ntargetProject=\"bob-server-模块名/src/main/java\" type=\"XMLMAPPER\">\n</javaClientGenerator>\n```\n\n# 三、使用插件进行代码生成\n\n点击 IDEA 的 Gradle 标签（如果没有标签，见下方备注），打开 Tasks - util，双击 mbGenerator，即可生成代码。如有失败，参考提示信息进行排查。  \n\n备注：如果没有 Gradle 标签，按以下步骤打开：View -> Tool Windows -> Gradle。\n\n\n\n参考资料：  \nhttps://segmentfault.com/a/1190000013534059  \nhttps://github.com/kimichen13/mybatis-generator-plugin","source":"_posts/Gradle 搭配 Mybatis-Generator 进行代码自动生成.md","raw":"---\ntitle: Gradle 搭配 Mybatis-Generator 进行代码自动生成\ntags:\n  - gradle\n  - mybatis\ncategories: 开发\ndescription: <center>Gradle 搭配 Mybatis-Generator 进行代码自动生成。</center>\nabbrlink: 680024629\ndate: 2022-08-24 18:10:37\n---\n# 一、Mybatis-Generator 引入\n\n在 build.gradle 文件的 plugins 模块加上一行配置：\n```\nid \"com.thinkimi.gradle.MybatisGenerator\" version \"2.4\"\n```\n\n然后，在 build.gradle 文件的末尾加上配置引入：\n```\nconfigurations {\nmybatisGenerator\n}\n\nmybatisGenerator {\nverbose = true\nconfigFile = 'bob-server-模块名/src/main/resources/MyBatisGeneratorConfig.xml'\n}\n```\n然后 load 一下 Gradle 配置进行刷新。\n\n# 二、MyBatisGeneratorConfig.xml 配置文件修改\n\n将以下配置进行粘贴覆盖：\n```xml\n<jdbcConnection driverClass=\"com.mysql.jdbc.Driver\"\nconnectionURL=\"jdbc:mysql://db\" userId=\"username\" password=\"password\">\n</jdbcConnection>\n\n<javaModelGenerator targetPackage=\"me.bob.server.模块名.mapperbean\"\ntargetProject=\"bob-server-模块名/src/main/java\">\n<property name=\"trimStrings\" value=\"true\"/>\n</javaModelGenerator>\n\n<sqlMapGenerator targetPackage=\"me.bob.server.模块名.mapperxml\"\ntargetProject=\"bob-server-模块名/src/main/java\"/>\n\n<javaClientGenerator targetPackage=\"me.bob.server.模块名.mapper\"\ntargetProject=\"bob-server-模块名/src/main/java\" type=\"XMLMAPPER\">\n</javaClientGenerator>\n```\n\n# 三、使用插件进行代码生成\n\n点击 IDEA 的 Gradle 标签（如果没有标签，见下方备注），打开 Tasks - util，双击 mbGenerator，即可生成代码。如有失败，参考提示信息进行排查。  \n\n备注：如果没有 Gradle 标签，按以下步骤打开：View -> Tool Windows -> Gradle。\n\n\n\n参考资料：  \nhttps://segmentfault.com/a/1190000013534059  \nhttps://github.com/kimichen13/mybatis-generator-plugin","slug":"Gradle 搭配 Mybatis-Generator 进行代码自动生成","published":1,"updated":"2022-10-10T01:53:20.181Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eoof000anq54hn3revpn","content":"<h1 id=\"一、Mybatis-Generator-引入\"><a href=\"#一、Mybatis-Generator-引入\" class=\"headerlink\" title=\"一、Mybatis-Generator 引入\"></a>一、Mybatis-Generator 引入</h1><p>在 build.gradle 文件的 plugins 模块加上一行配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id &quot;com.thinkimi.gradle.MybatisGenerator&quot; version &quot;2.4&quot;</span><br></pre></td></tr></table></figure>\n\n<p>然后，在 build.gradle 文件的末尾加上配置引入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configurations &#123;</span><br><span class=\"line\">mybatisGenerator</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">mybatisGenerator &#123;</span><br><span class=\"line\">verbose = true</span><br><span class=\"line\">configFile = &#x27;bob-server-模块名/src/main/resources/MyBatisGeneratorConfig.xml&#x27;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后 load 一下 Gradle 配置进行刷新。</p>\n<h1 id=\"二、MyBatisGeneratorConfig-xml-配置文件修改\"><a href=\"#二、MyBatisGeneratorConfig-xml-配置文件修改\" class=\"headerlink\" title=\"二、MyBatisGeneratorConfig.xml 配置文件修改\"></a>二、MyBatisGeneratorConfig.xml 配置文件修改</h1><p>将以下配置进行粘贴覆盖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">connectionURL</span>=<span class=\"string\">&quot;jdbc:mysql://db&quot;</span> <span class=\"attr\">userId</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">password</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">&quot;me.bob.server.模块名.mapperbean&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">targetProject</span>=<span class=\"string\">&quot;bob-server-模块名/src/main/java&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;trimStrings&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">&quot;me.bob.server.模块名.mapperxml&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">targetProject</span>=<span class=\"string\">&quot;bob-server-模块名/src/main/java&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">&quot;me.bob.server.模块名.mapper&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">targetProject</span>=<span class=\"string\">&quot;bob-server-模块名/src/main/java&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;XMLMAPPER&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三、使用插件进行代码生成\"><a href=\"#三、使用插件进行代码生成\" class=\"headerlink\" title=\"三、使用插件进行代码生成\"></a>三、使用插件进行代码生成</h1><p>点击 IDEA 的 Gradle 标签（如果没有标签，见下方备注），打开 Tasks - util，双击 mbGenerator，即可生成代码。如有失败，参考提示信息进行排查。  </p>\n<p>备注：如果没有 Gradle 标签，按以下步骤打开：View -&gt; Tool Windows -&gt; Gradle。</p>\n<p>参考资料：<br><a href=\"https://segmentfault.com/a/1190000013534059\">https://segmentfault.com/a/1190000013534059</a><br><a href=\"https://github.com/kimichen13/mybatis-generator-plugin\">https://github.com/kimichen13/mybatis-generator-plugin</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、Mybatis-Generator-引入\"><a href=\"#一、Mybatis-Generator-引入\" class=\"headerlink\" title=\"一、Mybatis-Generator 引入\"></a>一、Mybatis-Generator 引入</h1><p>在 build.gradle 文件的 plugins 模块加上一行配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id &quot;com.thinkimi.gradle.MybatisGenerator&quot; version &quot;2.4&quot;</span><br></pre></td></tr></table></figure>\n\n<p>然后，在 build.gradle 文件的末尾加上配置引入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configurations &#123;</span><br><span class=\"line\">mybatisGenerator</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">mybatisGenerator &#123;</span><br><span class=\"line\">verbose = true</span><br><span class=\"line\">configFile = &#x27;bob-server-模块名/src/main/resources/MyBatisGeneratorConfig.xml&#x27;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后 load 一下 Gradle 配置进行刷新。</p>\n<h1 id=\"二、MyBatisGeneratorConfig-xml-配置文件修改\"><a href=\"#二、MyBatisGeneratorConfig-xml-配置文件修改\" class=\"headerlink\" title=\"二、MyBatisGeneratorConfig.xml 配置文件修改\"></a>二、MyBatisGeneratorConfig.xml 配置文件修改</h1><p>将以下配置进行粘贴覆盖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">connectionURL</span>=<span class=\"string\">&quot;jdbc:mysql://db&quot;</span> <span class=\"attr\">userId</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">password</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">&quot;me.bob.server.模块名.mapperbean&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">targetProject</span>=<span class=\"string\">&quot;bob-server-模块名/src/main/java&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;trimStrings&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">&quot;me.bob.server.模块名.mapperxml&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">targetProject</span>=<span class=\"string\">&quot;bob-server-模块名/src/main/java&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">&quot;me.bob.server.模块名.mapper&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">targetProject</span>=<span class=\"string\">&quot;bob-server-模块名/src/main/java&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;XMLMAPPER&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三、使用插件进行代码生成\"><a href=\"#三、使用插件进行代码生成\" class=\"headerlink\" title=\"三、使用插件进行代码生成\"></a>三、使用插件进行代码生成</h1><p>点击 IDEA 的 Gradle 标签（如果没有标签，见下方备注），打开 Tasks - util，双击 mbGenerator，即可生成代码。如有失败，参考提示信息进行排查。  </p>\n<p>备注：如果没有 Gradle 标签，按以下步骤打开：View -&gt; Tool Windows -&gt; Gradle。</p>\n<p>参考资料：<br><a href=\"https://segmentfault.com/a/1190000013534059\">https://segmentfault.com/a/1190000013534059</a><br><a href=\"https://github.com/kimichen13/mybatis-generator-plugin\">https://github.com/kimichen13/mybatis-generator-plugin</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Mon Oct 10 2022 09:53:20 GMT+0800 (China Standard Time)","title":"Gradle 搭配 Mybatis-Generator 进行代码自动生成","path":"680024629/","eyeCatchImage":null,"excerpt":"<center>Gradle 搭配 Mybatis-Generator 进行代码自动生成。</center>","date":{"_isAMomentObject":true,"_i":"2022-08-24T10:10:37.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-08-24T10:10:37.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["gradle","mybatis"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Git 批量 checkout 和 update","description":"<center>Git 批量 checkout 和 update 脚本。</center>","abbrlink":1177415153,"date":"2022-10-09T07:50:22.000Z","_content":"# 一、下载脚本\n\n脚本代码：\n```shell\n#!/bin/bash\nbranch=\"production\"\n\nif [ \"$1\" ]\nthen\nbranch=\"$1\"\nfi\n\nfor f in `ls ./`\ndo\nif [[ ${f} == moego* ]]\nthen\necho -e \"\\n${f}\"\ncd ${f}\n\n        echo \"1. checkout ${branch} result: \"\n        git checkout ${branch}\n        echo \"2. pull rebase result: \"\n        git pull --rebase\n        cd ..\n    fi\ndone\necho \"Finished\"\n```\n\n将脚本放置在 MoeGo 项目代码同一目录下。\n\n\n# 二、赋权\n\n进入当前目录，执行赋权命令：  \n```shell\nchmod +x ./update.sh\n```\n\n# 三、运行\n\n注意：执行前，记得 commit 或者 shelve 代码，以防本地代码丢失。  \n\n默认将所有 moego 开头的仓库代码 checkout 到 production 分支，并执行 pull --rebase 命令：  \n```shell\n./update.sh\n```\n如果需要 checkout 到其他分支，可以加上分支名，例如：  \n```shell\n./update.sh master\n```","source":"_posts/Git 批量 checkout 和 update.md","raw":"---\ntitle: Git 批量 checkout 和 update\ntags:\n  - git\ncategories: 开发\ndescription: <center>Git 批量 checkout 和 update 脚本。</center>\nabbrlink: 1177415153\ndate: 2022-10-09 15:50:22\n---\n# 一、下载脚本\n\n脚本代码：\n```shell\n#!/bin/bash\nbranch=\"production\"\n\nif [ \"$1\" ]\nthen\nbranch=\"$1\"\nfi\n\nfor f in `ls ./`\ndo\nif [[ ${f} == moego* ]]\nthen\necho -e \"\\n${f}\"\ncd ${f}\n\n        echo \"1. checkout ${branch} result: \"\n        git checkout ${branch}\n        echo \"2. pull rebase result: \"\n        git pull --rebase\n        cd ..\n    fi\ndone\necho \"Finished\"\n```\n\n将脚本放置在 MoeGo 项目代码同一目录下。\n\n\n# 二、赋权\n\n进入当前目录，执行赋权命令：  \n```shell\nchmod +x ./update.sh\n```\n\n# 三、运行\n\n注意：执行前，记得 commit 或者 shelve 代码，以防本地代码丢失。  \n\n默认将所有 moego 开头的仓库代码 checkout 到 production 分支，并执行 pull --rebase 命令：  \n```shell\n./update.sh\n```\n如果需要 checkout 到其他分支，可以加上分支名，例如：  \n```shell\n./update.sh master\n```","slug":"Git 批量 checkout 和 update","published":1,"updated":"2022-10-10T01:53:31.503Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eoof000dnq5461tjeayu","content":"<h1 id=\"一、下载脚本\"><a href=\"#一、下载脚本\" class=\"headerlink\" title=\"一、下载脚本\"></a>一、下载脚本</h1><p>脚本代码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">branch=&quot;production&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if [ &quot;$1&quot; ]</span><br><span class=\"line\">then</span><br><span class=\"line\">branch=&quot;$1&quot;</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">for f in `ls ./`</span><br><span class=\"line\">do</span><br><span class=\"line\">if [[ $&#123;f&#125; == moego* ]]</span><br><span class=\"line\">then</span><br><span class=\"line\">echo -e &quot;\\n$&#123;f&#125;&quot;</span><br><span class=\"line\">cd $&#123;f&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        echo &quot;1. checkout $&#123;branch&#125; result: &quot;</span><br><span class=\"line\">        git checkout $&#123;branch&#125;</span><br><span class=\"line\">        echo &quot;2. pull rebase result: &quot;</span><br><span class=\"line\">        git pull --rebase</span><br><span class=\"line\">        cd ..</span><br><span class=\"line\">    fi</span><br><span class=\"line\">done</span><br><span class=\"line\">echo &quot;Finished&quot;</span><br></pre></td></tr></table></figure>\n\n<p>将脚本放置在 MoeGo 项目代码同一目录下。</p>\n<h1 id=\"二、赋权\"><a href=\"#二、赋权\" class=\"headerlink\" title=\"二、赋权\"></a>二、赋权</h1><p>进入当前目录，执行赋权命令：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x ./update.sh</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三、运行\"><a href=\"#三、运行\" class=\"headerlink\" title=\"三、运行\"></a>三、运行</h1><p>注意：执行前，记得 commit 或者 shelve 代码，以防本地代码丢失。  </p>\n<p>默认将所有 moego 开头的仓库代码 checkout 到 production 分支，并执行 pull –rebase 命令：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./update.sh</span><br></pre></td></tr></table></figure>\n<p>如果需要 checkout 到其他分支，可以加上分支名，例如：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./update.sh master</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、下载脚本\"><a href=\"#一、下载脚本\" class=\"headerlink\" title=\"一、下载脚本\"></a>一、下载脚本</h1><p>脚本代码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">branch=&quot;production&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if [ &quot;$1&quot; ]</span><br><span class=\"line\">then</span><br><span class=\"line\">branch=&quot;$1&quot;</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">for f in `ls ./`</span><br><span class=\"line\">do</span><br><span class=\"line\">if [[ $&#123;f&#125; == moego* ]]</span><br><span class=\"line\">then</span><br><span class=\"line\">echo -e &quot;\\n$&#123;f&#125;&quot;</span><br><span class=\"line\">cd $&#123;f&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        echo &quot;1. checkout $&#123;branch&#125; result: &quot;</span><br><span class=\"line\">        git checkout $&#123;branch&#125;</span><br><span class=\"line\">        echo &quot;2. pull rebase result: &quot;</span><br><span class=\"line\">        git pull --rebase</span><br><span class=\"line\">        cd ..</span><br><span class=\"line\">    fi</span><br><span class=\"line\">done</span><br><span class=\"line\">echo &quot;Finished&quot;</span><br></pre></td></tr></table></figure>\n\n<p>将脚本放置在 MoeGo 项目代码同一目录下。</p>\n<h1 id=\"二、赋权\"><a href=\"#二、赋权\" class=\"headerlink\" title=\"二、赋权\"></a>二、赋权</h1><p>进入当前目录，执行赋权命令：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x ./update.sh</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三、运行\"><a href=\"#三、运行\" class=\"headerlink\" title=\"三、运行\"></a>三、运行</h1><p>注意：执行前，记得 commit 或者 shelve 代码，以防本地代码丢失。  </p>\n<p>默认将所有 moego 开头的仓库代码 checkout 到 production 分支，并执行 pull –rebase 命令：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./update.sh</span><br></pre></td></tr></table></figure>\n<p>如果需要 checkout 到其他分支，可以加上分支名，例如：  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./update.sh master</span><br></pre></td></tr></table></figure>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Mon Oct 10 2022 09:53:31 GMT+0800 (China Standard Time)","title":"Git 批量 checkout 和 update","path":"1177415153/","eyeCatchImage":null,"excerpt":"<center>Git 批量 checkout 和 update 脚本。</center>","date":{"_isAMomentObject":true,"_i":"2022-10-09T07:50:22.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-10-09T07:50:22.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["git"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"ExcelGo","description":"<center>ExcelGo 是一个能读取 Excel 文件内容，并获取到其中的邮箱，将表格内容发送至指定的邮箱地址。</center>","abbrlink":2646382575,"date":"2018-07-17T13:10:00.000Z","_content":"ExcelGo 是一个能读取 Excel 文件内容，并获取到其中的邮箱，将表格内容发送至指定的邮箱地址。最初构想来自于需要将公司内部对账单文件中的每行内容发送至各人邮箱。\n# 功能描述\n- 获取表格内容：通过Apache POI组件读取Excle表格，将内容存放至HashMap集合中。\n- 发送邮件：通过员工编号将同一个人的信息组合起来，使用JavaMail API 和Java Activation Framework (JAF) 发送至其邮箱。\n\n# 总体设计\n主要程序由GoExcel.java、GoMail.java和Main.java三个文件组成。\n1. GoExcel.java\n\t此文件判断Excel文件后缀类型，读取Excel表格表头和数据内容，并根据Cell类型设置数据。\n2. GoMail.java\n\t此文件包含名为goMail的方法，其主要功能是获得收件人邮箱和表格内容，通过QQ邮箱来发送消息。\n3. Main.java\n\t此文件包含Main方法，定义Excel文件路径，组合同一个收件人的消息，并调用goMail方法发送邮件。\n\n# 文件格式\n因为特别的原因，此处将前三列分别定义为员工编号、收件人姓名和其邮箱地址。\n![Excel文件格式](../images/Excel文件格式.jpeg)\n\n# 效果展示\n![收件效果](../images/收件效果.jpeg)\n\n# 代码实现\n[https://github.com/sakiila/ExcelGo](https://github.com/sakiila/ExcelGo)","source":"_posts/ExcelGo.md","raw":"---\ntitle: ExcelGo\ntags:\n  - Java\n  - Excel\ncategories: 开发\ndescription: <center>ExcelGo 是一个能读取 Excel 文件内容，并获取到其中的邮箱，将表格内容发送至指定的邮箱地址。</center>\nabbrlink: 2646382575\ndate: 2018-07-17 21:10:00\n---\nExcelGo 是一个能读取 Excel 文件内容，并获取到其中的邮箱，将表格内容发送至指定的邮箱地址。最初构想来自于需要将公司内部对账单文件中的每行内容发送至各人邮箱。\n# 功能描述\n- 获取表格内容：通过Apache POI组件读取Excle表格，将内容存放至HashMap集合中。\n- 发送邮件：通过员工编号将同一个人的信息组合起来，使用JavaMail API 和Java Activation Framework (JAF) 发送至其邮箱。\n\n# 总体设计\n主要程序由GoExcel.java、GoMail.java和Main.java三个文件组成。\n1. GoExcel.java\n\t此文件判断Excel文件后缀类型，读取Excel表格表头和数据内容，并根据Cell类型设置数据。\n2. GoMail.java\n\t此文件包含名为goMail的方法，其主要功能是获得收件人邮箱和表格内容，通过QQ邮箱来发送消息。\n3. Main.java\n\t此文件包含Main方法，定义Excel文件路径，组合同一个收件人的消息，并调用goMail方法发送邮件。\n\n# 文件格式\n因为特别的原因，此处将前三列分别定义为员工编号、收件人姓名和其邮箱地址。\n![Excel文件格式](../images/Excel文件格式.jpeg)\n\n# 效果展示\n![收件效果](../images/收件效果.jpeg)\n\n# 代码实现\n[https://github.com/sakiila/ExcelGo](https://github.com/sakiila/ExcelGo)","slug":"ExcelGo","published":1,"updated":"2022-09-16T11:13:12.267Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eoof000enq54cyxzh8xe","content":"<p>ExcelGo 是一个能读取 Excel 文件内容，并获取到其中的邮箱，将表格内容发送至指定的邮箱地址。最初构想来自于需要将公司内部对账单文件中的每行内容发送至各人邮箱。</p>\n<h1 id=\"功能描述\"><a href=\"#功能描述\" class=\"headerlink\" title=\"功能描述\"></a>功能描述</h1><ul>\n<li>获取表格内容：通过Apache POI组件读取Excle表格，将内容存放至HashMap集合中。</li>\n<li>发送邮件：通过员工编号将同一个人的信息组合起来，使用JavaMail API 和Java Activation Framework (JAF) 发送至其邮箱。</li>\n</ul>\n<h1 id=\"总体设计\"><a href=\"#总体设计\" class=\"headerlink\" title=\"总体设计\"></a>总体设计</h1><p>主要程序由GoExcel.java、GoMail.java和Main.java三个文件组成。</p>\n<ol>\n<li>GoExcel.java<br> 此文件判断Excel文件后缀类型，读取Excel表格表头和数据内容，并根据Cell类型设置数据。</li>\n<li>GoMail.java<br> 此文件包含名为goMail的方法，其主要功能是获得收件人邮箱和表格内容，通过QQ邮箱来发送消息。</li>\n<li>Main.java<br> 此文件包含Main方法，定义Excel文件路径，组合同一个收件人的消息，并调用goMail方法发送邮件。</li>\n</ol>\n<h1 id=\"文件格式\"><a href=\"#文件格式\" class=\"headerlink\" title=\"文件格式\"></a>文件格式</h1><p>因为特别的原因，此处将前三列分别定义为员工编号、收件人姓名和其邮箱地址。<br><img src=\"../images/Excel%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F.jpeg\" alt=\"Excel文件格式\"></p>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p><img src=\"../images/%E6%94%B6%E4%BB%B6%E6%95%88%E6%9E%9C.jpeg\" alt=\"收件效果\"></p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p><a href=\"https://github.com/sakiila/ExcelGo\">https://github.com/sakiila/ExcelGo</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>ExcelGo 是一个能读取 Excel 文件内容，并获取到其中的邮箱，将表格内容发送至指定的邮箱地址。最初构想来自于需要将公司内部对账单文件中的每行内容发送至各人邮箱。</p>\n<h1 id=\"功能描述\"><a href=\"#功能描述\" class=\"headerlink\" title=\"功能描述\"></a>功能描述</h1><ul>\n<li>获取表格内容：通过Apache POI组件读取Excle表格，将内容存放至HashMap集合中。</li>\n<li>发送邮件：通过员工编号将同一个人的信息组合起来，使用JavaMail API 和Java Activation Framework (JAF) 发送至其邮箱。</li>\n</ul>\n<h1 id=\"总体设计\"><a href=\"#总体设计\" class=\"headerlink\" title=\"总体设计\"></a>总体设计</h1><p>主要程序由GoExcel.java、GoMail.java和Main.java三个文件组成。</p>\n<ol>\n<li>GoExcel.java<br> 此文件判断Excel文件后缀类型，读取Excel表格表头和数据内容，并根据Cell类型设置数据。</li>\n<li>GoMail.java<br> 此文件包含名为goMail的方法，其主要功能是获得收件人邮箱和表格内容，通过QQ邮箱来发送消息。</li>\n<li>Main.java<br> 此文件包含Main方法，定义Excel文件路径，组合同一个收件人的消息，并调用goMail方法发送邮件。</li>\n</ol>\n<h1 id=\"文件格式\"><a href=\"#文件格式\" class=\"headerlink\" title=\"文件格式\"></a>文件格式</h1><p>因为特别的原因，此处将前三列分别定义为员工编号、收件人姓名和其邮箱地址。<br><img src=\"../images/Excel%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F.jpeg\" alt=\"Excel文件格式\"></p>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p><img src=\"../images/%E6%94%B6%E4%BB%B6%E6%95%88%E6%9E%9C.jpeg\" alt=\"收件效果\"></p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p><a href=\"https://github.com/sakiila/ExcelGo\">https://github.com/sakiila/ExcelGo</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"../images/Excel%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F.jpeg","popularPost_tmp_gaData":{"updated":"Fri Sep 16 2022 19:13:12 GMT+0800 (China Standard Time)","title":"ExcelGo","path":"2646382575/","eyeCatchImage":"../images/Excel%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F.jpeg","excerpt":"<center>ExcelGo 是一个能读取 Excel 文件内容，并获取到其中的邮箱，将表格内容发送至指定的邮箱地址。</center>","date":{"_isAMomentObject":true,"_i":"2018-07-17T13:10:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-07-17T13:10:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["Java","Excel"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"RoadToRender","description":"<center>RoadToRender 开发</center>","abbrlink":3652395819,"date":"2017-11-30T07:30:00.000Z","_content":"使用的语言：Java\n使用的工具：Eclipse\n\n### 一、设计思路\n设计五个类，名字分别为MazeFactory、Maze、Check、Main和Test。\n#### 1.MazeFactory类\n该类包含一个create()方法，传入第一行字符串，使用二维数组进行初始化一个渲染网格，然后返回一个Maze对象。\n\n#### 2.Maze类\n该类有一个构造方法，参数为二维数组。另外有一个render()方法，传入第二行字符串，连通网格，并使网格字符化。\n\n#### 3.Check类\n该类有两个方法：checkLine1()和checkLine2()。分别对输入的第一行和第二行字符串做检查，返回一个字符串。\n\n#### 4.Main类\n该类是主类，有一个main()方法。该方法读取控制台输入的字符串，然后调用Check类的方法检查，再返回一个字符串作为结果。\n\n#### 5.Test类\n测试类，用来运行程序，并在控制台输出结果。\n\n\n\n### 二、UML图\n\n![RoadToRender-UML](https://upload-images.jianshu.io/upload_images/2348575-d734d316af894e16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n### 三、程序测试\n#### 1.正常输入：\n\n```log\n3 3\n0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n```\n\n运行结果：\n\n\tPlease input:\n\t3 3\n\t0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\tThe result is:\n\t[W] [W] [W] [W] [W] [W] [W] \n\t[W] [R] [W] [R] [R] [R] [W] \n\t[W] [R] [W] [R] [W] [R] [W] \n\t[W] [R] [R] [R] [R] [R] [W] \n\t[W] [W] [W] [R] [W] [R] [W] \n\t[W] [R] [R] [R] [W] [R] [W] \n\t[W] [W] [W] [W] [W] [W] [W] \n\t\n\tEnd.\n\n\n#### 2.无效的数字：\n\n\t3 %\n\t0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\n运行结果：\n\n\tPlease input:\n\t3 %\n\t0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\tThe result is:\n\tInvalid number format.\n\tEnd.\n\n\n\n#### 3.数字超出预定范围：\n\n\t3 3\n\t8,1 0,4;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\n运行结果：\n\n\tPlease input:\n\t3 3\n\t8,1 0,4;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\tThe result is:\n\tIncorrect command format.\n\tEnd.\n\n\n#### 4.格式错误；\n\n\t3 3\n\t0 1 0 2 0 0 1 0 0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\n运行结果：\n\n\tPlease input:\n\t3 3\n\t0 1 0 2 0 0 1 0 0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\tThe result is:\n\tIncorrect command format.\n\tEnd.\n\n\n\n#### 5.连通性错误：\n\n\t3 3\n\t0,1 0,3;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\n运行结果：\n\n\tPlease input:\n\t3 3\n\t0,1 0,3;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\tThe result is:\n\tIncorrect command format.\n\tEnd.\n\n","source":"_posts/RoadToRender.md","raw":"---\ntitle: RoadToRender\ntags:\n  - Java\ncategories: 开发\ndescription: <center>RoadToRender 开发</center>\nabbrlink: 3652395819\ndate: 2017-11-30 15:30:00\n---\n使用的语言：Java\n使用的工具：Eclipse\n\n### 一、设计思路\n设计五个类，名字分别为MazeFactory、Maze、Check、Main和Test。\n#### 1.MazeFactory类\n该类包含一个create()方法，传入第一行字符串，使用二维数组进行初始化一个渲染网格，然后返回一个Maze对象。\n\n#### 2.Maze类\n该类有一个构造方法，参数为二维数组。另外有一个render()方法，传入第二行字符串，连通网格，并使网格字符化。\n\n#### 3.Check类\n该类有两个方法：checkLine1()和checkLine2()。分别对输入的第一行和第二行字符串做检查，返回一个字符串。\n\n#### 4.Main类\n该类是主类，有一个main()方法。该方法读取控制台输入的字符串，然后调用Check类的方法检查，再返回一个字符串作为结果。\n\n#### 5.Test类\n测试类，用来运行程序，并在控制台输出结果。\n\n\n\n### 二、UML图\n\n![RoadToRender-UML](https://upload-images.jianshu.io/upload_images/2348575-d734d316af894e16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n### 三、程序测试\n#### 1.正常输入：\n\n```log\n3 3\n0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n```\n\n运行结果：\n\n\tPlease input:\n\t3 3\n\t0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\tThe result is:\n\t[W] [W] [W] [W] [W] [W] [W] \n\t[W] [R] [W] [R] [R] [R] [W] \n\t[W] [R] [W] [R] [W] [R] [W] \n\t[W] [R] [R] [R] [R] [R] [W] \n\t[W] [W] [W] [R] [W] [R] [W] \n\t[W] [R] [R] [R] [W] [R] [W] \n\t[W] [W] [W] [W] [W] [W] [W] \n\t\n\tEnd.\n\n\n#### 2.无效的数字：\n\n\t3 %\n\t0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\n运行结果：\n\n\tPlease input:\n\t3 %\n\t0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\tThe result is:\n\tInvalid number format.\n\tEnd.\n\n\n\n#### 3.数字超出预定范围：\n\n\t3 3\n\t8,1 0,4;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\n运行结果：\n\n\tPlease input:\n\t3 3\n\t8,1 0,4;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\tThe result is:\n\tIncorrect command format.\n\tEnd.\n\n\n#### 4.格式错误；\n\n\t3 3\n\t0 1 0 2 0 0 1 0 0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\n运行结果：\n\n\tPlease input:\n\t3 3\n\t0 1 0 2 0 0 1 0 0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\tThe result is:\n\tIncorrect command format.\n\tEnd.\n\n\n\n#### 5.连通性错误：\n\n\t3 3\n\t0,1 0,3;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\n运行结果：\n\n\tPlease input:\n\t3 3\n\t0,1 0,3;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n\tThe result is:\n\tIncorrect command format.\n\tEnd.\n\n","slug":"RoadToRender","published":1,"updated":"2022-09-13T14:24:02.931Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eoog000inq54922u45id","content":"<p>使用的语言：Java<br>使用的工具：Eclipse</p>\n<h3 id=\"一、设计思路\"><a href=\"#一、设计思路\" class=\"headerlink\" title=\"一、设计思路\"></a>一、设计思路</h3><p>设计五个类，名字分别为MazeFactory、Maze、Check、Main和Test。</p>\n<h4 id=\"1-MazeFactory类\"><a href=\"#1-MazeFactory类\" class=\"headerlink\" title=\"1.MazeFactory类\"></a>1.MazeFactory类</h4><p>该类包含一个create()方法，传入第一行字符串，使用二维数组进行初始化一个渲染网格，然后返回一个Maze对象。</p>\n<h4 id=\"2-Maze类\"><a href=\"#2-Maze类\" class=\"headerlink\" title=\"2.Maze类\"></a>2.Maze类</h4><p>该类有一个构造方法，参数为二维数组。另外有一个render()方法，传入第二行字符串，连通网格，并使网格字符化。</p>\n<h4 id=\"3-Check类\"><a href=\"#3-Check类\" class=\"headerlink\" title=\"3.Check类\"></a>3.Check类</h4><p>该类有两个方法：checkLine1()和checkLine2()。分别对输入的第一行和第二行字符串做检查，返回一个字符串。</p>\n<h4 id=\"4-Main类\"><a href=\"#4-Main类\" class=\"headerlink\" title=\"4.Main类\"></a>4.Main类</h4><p>该类是主类，有一个main()方法。该方法读取控制台输入的字符串，然后调用Check类的方法检查，再返回一个字符串作为结果。</p>\n<h4 id=\"5-Test类\"><a href=\"#5-Test类\" class=\"headerlink\" title=\"5.Test类\"></a>5.Test类</h4><p>测试类，用来运行程序，并在控制台输出结果。</p>\n<h3 id=\"二、UML图\"><a href=\"#二、UML图\" class=\"headerlink\" title=\"二、UML图\"></a>二、UML图</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/2348575-d734d316af894e16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"RoadToRender-UML\"></p>\n<h3 id=\"三、程序测试\"><a href=\"#三、程序测试\" class=\"headerlink\" title=\"三、程序测试\"></a>三、程序测试</h3><h4 id=\"1-正常输入：\"><a href=\"#1-正常输入：\" class=\"headerlink\" title=\"1.正常输入：\"></a>1.正常输入：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 3</span><br><span class=\"line\">0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1</span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<pre><code>Please input:\n3 3\n0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\nThe result is:\n[W] [W] [W] [W] [W] [W] [W] \n[W] [R] [W] [R] [R] [R] [W] \n[W] [R] [W] [R] [W] [R] [W] \n[W] [R] [R] [R] [R] [R] [W] \n[W] [W] [W] [R] [W] [R] [W] \n[W] [R] [R] [R] [W] [R] [W] \n[W] [W] [W] [W] [W] [W] [W] \n\nEnd.\n</code></pre>\n<h4 id=\"2-无效的数字：\"><a href=\"#2-无效的数字：\" class=\"headerlink\" title=\"2.无效的数字：\"></a>2.无效的数字：</h4><pre><code>3 %\n0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n</code></pre>\n<p>运行结果：</p>\n<pre><code>Please input:\n3 %\n0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\nThe result is:\nInvalid number format.\nEnd.\n</code></pre>\n<h4 id=\"3-数字超出预定范围：\"><a href=\"#3-数字超出预定范围：\" class=\"headerlink\" title=\"3.数字超出预定范围：\"></a>3.数字超出预定范围：</h4><pre><code>3 3\n8,1 0,4;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n</code></pre>\n<p>运行结果：</p>\n<pre><code>Please input:\n3 3\n8,1 0,4;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\nThe result is:\nIncorrect command format.\nEnd.\n</code></pre>\n<h4 id=\"4-格式错误；\"><a href=\"#4-格式错误；\" class=\"headerlink\" title=\"4.格式错误；\"></a>4.格式错误；</h4><pre><code>3 3\n0 1 0 2 0 0 1 0 0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n</code></pre>\n<p>运行结果：</p>\n<pre><code>Please input:\n3 3\n0 1 0 2 0 0 1 0 0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\nThe result is:\nIncorrect command format.\nEnd.\n</code></pre>\n<h4 id=\"5-连通性错误：\"><a href=\"#5-连通性错误：\" class=\"headerlink\" title=\"5.连通性错误：\"></a>5.连通性错误：</h4><pre><code>3 3\n0,1 0,3;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n</code></pre>\n<p>运行结果：</p>\n<pre><code>Please input:\n3 3\n0,1 0,3;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\nThe result is:\nIncorrect command format.\nEnd.\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<p>使用的语言：Java<br>使用的工具：Eclipse</p>\n<h3 id=\"一、设计思路\"><a href=\"#一、设计思路\" class=\"headerlink\" title=\"一、设计思路\"></a>一、设计思路</h3><p>设计五个类，名字分别为MazeFactory、Maze、Check、Main和Test。</p>\n<h4 id=\"1-MazeFactory类\"><a href=\"#1-MazeFactory类\" class=\"headerlink\" title=\"1.MazeFactory类\"></a>1.MazeFactory类</h4><p>该类包含一个create()方法，传入第一行字符串，使用二维数组进行初始化一个渲染网格，然后返回一个Maze对象。</p>\n<h4 id=\"2-Maze类\"><a href=\"#2-Maze类\" class=\"headerlink\" title=\"2.Maze类\"></a>2.Maze类</h4><p>该类有一个构造方法，参数为二维数组。另外有一个render()方法，传入第二行字符串，连通网格，并使网格字符化。</p>\n<h4 id=\"3-Check类\"><a href=\"#3-Check类\" class=\"headerlink\" title=\"3.Check类\"></a>3.Check类</h4><p>该类有两个方法：checkLine1()和checkLine2()。分别对输入的第一行和第二行字符串做检查，返回一个字符串。</p>\n<h4 id=\"4-Main类\"><a href=\"#4-Main类\" class=\"headerlink\" title=\"4.Main类\"></a>4.Main类</h4><p>该类是主类，有一个main()方法。该方法读取控制台输入的字符串，然后调用Check类的方法检查，再返回一个字符串作为结果。</p>\n<h4 id=\"5-Test类\"><a href=\"#5-Test类\" class=\"headerlink\" title=\"5.Test类\"></a>5.Test类</h4><p>测试类，用来运行程序，并在控制台输出结果。</p>\n<h3 id=\"二、UML图\"><a href=\"#二、UML图\" class=\"headerlink\" title=\"二、UML图\"></a>二、UML图</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/2348575-d734d316af894e16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"RoadToRender-UML\"></p>\n<h3 id=\"三、程序测试\"><a href=\"#三、程序测试\" class=\"headerlink\" title=\"三、程序测试\"></a>三、程序测试</h3><h4 id=\"1-正常输入：\"><a href=\"#1-正常输入：\" class=\"headerlink\" title=\"1.正常输入：\"></a>1.正常输入：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 3</span><br><span class=\"line\">0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1</span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<pre><code>Please input:\n3 3\n0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\nThe result is:\n[W] [W] [W] [W] [W] [W] [W] \n[W] [R] [W] [R] [R] [R] [W] \n[W] [R] [W] [R] [W] [R] [W] \n[W] [R] [R] [R] [R] [R] [W] \n[W] [W] [W] [R] [W] [R] [W] \n[W] [R] [R] [R] [W] [R] [W] \n[W] [W] [W] [W] [W] [W] [W] \n\nEnd.\n</code></pre>\n<h4 id=\"2-无效的数字：\"><a href=\"#2-无效的数字：\" class=\"headerlink\" title=\"2.无效的数字：\"></a>2.无效的数字：</h4><pre><code>3 %\n0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n</code></pre>\n<p>运行结果：</p>\n<pre><code>Please input:\n3 %\n0,1 0,2;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\nThe result is:\nInvalid number format.\nEnd.\n</code></pre>\n<h4 id=\"3-数字超出预定范围：\"><a href=\"#3-数字超出预定范围：\" class=\"headerlink\" title=\"3.数字超出预定范围：\"></a>3.数字超出预定范围：</h4><pre><code>3 3\n8,1 0,4;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n</code></pre>\n<p>运行结果：</p>\n<pre><code>Please input:\n3 3\n8,1 0,4;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\nThe result is:\nIncorrect command format.\nEnd.\n</code></pre>\n<h4 id=\"4-格式错误；\"><a href=\"#4-格式错误；\" class=\"headerlink\" title=\"4.格式错误；\"></a>4.格式错误；</h4><pre><code>3 3\n0 1 0 2 0 0 1 0 0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n</code></pre>\n<p>运行结果：</p>\n<pre><code>Please input:\n3 3\n0 1 0 2 0 0 1 0 0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\nThe result is:\nIncorrect command format.\nEnd.\n</code></pre>\n<h4 id=\"5-连通性错误：\"><a href=\"#5-连通性错误：\" class=\"headerlink\" title=\"5.连通性错误：\"></a>5.连通性错误：</h4><pre><code>3 3\n0,1 0,3;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\n</code></pre>\n<p>运行结果：</p>\n<pre><code>Please input:\n3 3\n0,1 0,3;0,0 1,0;0,1 1,1;0,2 1,2;1,0 1,1;1,1 1,2;1,1 2,1;1,2 2,2;2,0 2,1\nThe result is:\nIncorrect command format.\nEnd.\n</code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"https://upload-images.jianshu.io/upload_images/2348575-d734d316af894e16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"RoadToRender","path":"3652395819/","eyeCatchImage":"https://upload-images.jianshu.io/upload_images/2348575-d734d316af894e16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","excerpt":"<center>RoadToRender 开发</center>","date":{"_isAMomentObject":true,"_i":"2017-11-30T07:30:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-11-30T07:30:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"SEO 优化笔记","description":"<center>SEO优化笔记</center>","abbrlink":3036052883,"date":"2016-12-19T02:27:00.000Z","_content":"## SEO（Search Engine Optimization）搜索引擎优化\n* 1、搜索引擎工作原理；\n* 2、分为白帽SEO和黑帽SEO\n* （1）白帽SEO：其改良和规范网站设计的作用，是网站获取合理的流量；\n* （2）黒帽SEO：乱加关键字，乱加外链，这类行为利用搜索引擎政策缺陷来获取更多用户的访问量，属于欺骗搜索引擎的；\n* 3、如何做白帽SEO：\n* （1）对网站标题，关键字，描述精心设计，反映网站定位，让搜索引擎知道网站是做什么的；\n* （2）网站内容优化；（增加关键字密度，增加长尾关键字...）\n* （3）合理设置Robot.txt文件\n* （4）网站地图；\n* （5）增加外链；\n* （6）网站结构优化；（前端攻城狮的分内事！）\n* （7）页面代码优化。（前端攻城狮的职责所在！）\n\n## 结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了\n控制首页链接数量中小网站100以内，页面导航、底部导航、锚文字链接等\n扁平化的目录层次（小蜘蛛跳转3次可以到达网站内任何一个内页，网站的设计主页、栏目、内容页，不要用纵线性的结构\n导航seo优化（头部、底部、内容部分，主导航、副导航、分类导航，尽量用文字，面包屑导航，在每个网站上留下面包屑，使用户可以了解网站组织形式，放于正文的左上方）\n内容页面的布局细节\n左面正文，右面热门文章、相关文章，下面是版权信息及链接，栏目排布：首页123456789下拉选择最赞）\n网站的加载速度会影响小蜘蛛的爬行，页面最好不要超过100k\n* 1，控制首页链接数量\n* 2，扁平化的目录层次\n* 3，导航SEO优化\n* 4，面包屑导航\n* 5，其他细节如分页导航的设计\n* 6，网页加载速度，控制页面大小，最好在100K以内\n\n## 网页代码优化（语义化代码）\n* A、title标题：强调重点\n* B、meta keywords关键词：列举几个关键词\n* C、meta description网页描述：高度概括网页的内容\n* 以上信息不要堆积、重复\n\n语义话代码（HTML 标签有自己的意义，在适当的位置用适当的标签）\n1、h1~h6 多用于标题\n2、ul 多用于无序列表\n3、ol 多用于有序列表 \n4、dl 用于定义数据列表\n5、em、strong 表示强调\n\ndiv、span 是 html 标签中最没有语义的\n\n## 有利搜索引擎\n* 1、a：访问外部链接时要加上 rel=\"nofollow\"，告诉搜索引擎外部链接无需追踪，加上 title 说明\n* 2、h1：搜索引擎外认为 h1 最重要，使用 css 调整，网页正文标题用 h1，副标题用 h2，其他不要乱用 h 标签\n* 3、br 用于文本间的换行，用在 p 内，也可以用 <p <br/ </p 表示空行\n* 4、caption：表格标题\n* 5、img：使用 title、alt 说明\n* 6、<strong <em 表示强调，<em的权重仅次于<strong,如果只想表示加粗斜体，建议使用<b<i,表示强调则使用<strong<i\n* 7、重要内容 HTML 代码放在最前面（使用 css 改变布局）\n* 8、重要内容不要用 JS 输出（搜索引擎看不懂 JS）\n* 9、尽量少使用 iframe 框架（搜索引擎不喜欢）\n* 10、谨慎使用 display:none（搜索引擎会过滤掉其内容，设置 z-index或text-index：\"-999em\"； 代替）\n* 11、精简代码\n\n\n","source":"_posts/SEO 优化笔记.md","raw":"---\ntitle: SEO 优化笔记\ntags:\n  - SEO\ncategories: 收集\ndescription: <center>SEO优化笔记</center>\nabbrlink: 3036052883\ndate: 2016-12-19 10:27:00\n---\n## SEO（Search Engine Optimization）搜索引擎优化\n* 1、搜索引擎工作原理；\n* 2、分为白帽SEO和黑帽SEO\n* （1）白帽SEO：其改良和规范网站设计的作用，是网站获取合理的流量；\n* （2）黒帽SEO：乱加关键字，乱加外链，这类行为利用搜索引擎政策缺陷来获取更多用户的访问量，属于欺骗搜索引擎的；\n* 3、如何做白帽SEO：\n* （1）对网站标题，关键字，描述精心设计，反映网站定位，让搜索引擎知道网站是做什么的；\n* （2）网站内容优化；（增加关键字密度，增加长尾关键字...）\n* （3）合理设置Robot.txt文件\n* （4）网站地图；\n* （5）增加外链；\n* （6）网站结构优化；（前端攻城狮的分内事！）\n* （7）页面代码优化。（前端攻城狮的职责所在！）\n\n## 结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了\n控制首页链接数量中小网站100以内，页面导航、底部导航、锚文字链接等\n扁平化的目录层次（小蜘蛛跳转3次可以到达网站内任何一个内页，网站的设计主页、栏目、内容页，不要用纵线性的结构\n导航seo优化（头部、底部、内容部分，主导航、副导航、分类导航，尽量用文字，面包屑导航，在每个网站上留下面包屑，使用户可以了解网站组织形式，放于正文的左上方）\n内容页面的布局细节\n左面正文，右面热门文章、相关文章，下面是版权信息及链接，栏目排布：首页123456789下拉选择最赞）\n网站的加载速度会影响小蜘蛛的爬行，页面最好不要超过100k\n* 1，控制首页链接数量\n* 2，扁平化的目录层次\n* 3，导航SEO优化\n* 4，面包屑导航\n* 5，其他细节如分页导航的设计\n* 6，网页加载速度，控制页面大小，最好在100K以内\n\n## 网页代码优化（语义化代码）\n* A、title标题：强调重点\n* B、meta keywords关键词：列举几个关键词\n* C、meta description网页描述：高度概括网页的内容\n* 以上信息不要堆积、重复\n\n语义话代码（HTML 标签有自己的意义，在适当的位置用适当的标签）\n1、h1~h6 多用于标题\n2、ul 多用于无序列表\n3、ol 多用于有序列表 \n4、dl 用于定义数据列表\n5、em、strong 表示强调\n\ndiv、span 是 html 标签中最没有语义的\n\n## 有利搜索引擎\n* 1、a：访问外部链接时要加上 rel=\"nofollow\"，告诉搜索引擎外部链接无需追踪，加上 title 说明\n* 2、h1：搜索引擎外认为 h1 最重要，使用 css 调整，网页正文标题用 h1，副标题用 h2，其他不要乱用 h 标签\n* 3、br 用于文本间的换行，用在 p 内，也可以用 <p <br/ </p 表示空行\n* 4、caption：表格标题\n* 5、img：使用 title、alt 说明\n* 6、<strong <em 表示强调，<em的权重仅次于<strong,如果只想表示加粗斜体，建议使用<b<i,表示强调则使用<strong<i\n* 7、重要内容 HTML 代码放在最前面（使用 css 改变布局）\n* 8、重要内容不要用 JS 输出（搜索引擎看不懂 JS）\n* 9、尽量少使用 iframe 框架（搜索引擎不喜欢）\n* 10、谨慎使用 display:none（搜索引擎会过滤掉其内容，设置 z-index或text-index：\"-999em\"； 代替）\n* 11、精简代码\n\n\n","slug":"SEO 优化笔记","published":1,"updated":"2022-09-13T14:24:02.931Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eoog000lnq54b0bocn62","content":"<h2 id=\"SEO（Search-Engine-Optimization）搜索引擎优化\"><a href=\"#SEO（Search-Engine-Optimization）搜索引擎优化\" class=\"headerlink\" title=\"SEO（Search Engine Optimization）搜索引擎优化\"></a>SEO（Search Engine Optimization）搜索引擎优化</h2><ul>\n<li>1、搜索引擎工作原理；</li>\n<li>2、分为白帽SEO和黑帽SEO</li>\n<li>（1）白帽SEO：其改良和规范网站设计的作用，是网站获取合理的流量；</li>\n<li>（2）黒帽SEO：乱加关键字，乱加外链，这类行为利用搜索引擎政策缺陷来获取更多用户的访问量，属于欺骗搜索引擎的；</li>\n<li>3、如何做白帽SEO：</li>\n<li>（1）对网站标题，关键字，描述精心设计，反映网站定位，让搜索引擎知道网站是做什么的；</li>\n<li>（2）网站内容优化；（增加关键字密度，增加长尾关键字…）</li>\n<li>（3）合理设置Robot.txt文件</li>\n<li>（4）网站地图；</li>\n<li>（5）增加外链；</li>\n<li>（6）网站结构优化；（前端攻城狮的分内事！）</li>\n<li>（7）页面代码优化。（前端攻城狮的职责所在！）</li>\n</ul>\n<h2 id=\"结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了\"><a href=\"#结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了\" class=\"headerlink\" title=\"结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了\"></a>结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了</h2><p>控制首页链接数量中小网站100以内，页面导航、底部导航、锚文字链接等<br>扁平化的目录层次（小蜘蛛跳转3次可以到达网站内任何一个内页，网站的设计主页、栏目、内容页，不要用纵线性的结构<br>导航seo优化（头部、底部、内容部分，主导航、副导航、分类导航，尽量用文字，面包屑导航，在每个网站上留下面包屑，使用户可以了解网站组织形式，放于正文的左上方）<br>内容页面的布局细节<br>左面正文，右面热门文章、相关文章，下面是版权信息及链接，栏目排布：首页123456789下拉选择最赞）<br>网站的加载速度会影响小蜘蛛的爬行，页面最好不要超过100k</p>\n<ul>\n<li>1，控制首页链接数量</li>\n<li>2，扁平化的目录层次</li>\n<li>3，导航SEO优化</li>\n<li>4，面包屑导航</li>\n<li>5，其他细节如分页导航的设计</li>\n<li>6，网页加载速度，控制页面大小，最好在100K以内</li>\n</ul>\n<h2 id=\"网页代码优化（语义化代码）\"><a href=\"#网页代码优化（语义化代码）\" class=\"headerlink\" title=\"网页代码优化（语义化代码）\"></a>网页代码优化（语义化代码）</h2><ul>\n<li>A、title标题：强调重点</li>\n<li>B、meta keywords关键词：列举几个关键词</li>\n<li>C、meta description网页描述：高度概括网页的内容</li>\n<li>以上信息不要堆积、重复</li>\n</ul>\n<p>语义话代码（HTML 标签有自己的意义，在适当的位置用适当的标签）<br>1、h1~h6 多用于标题<br>2、ul 多用于无序列表<br>3、ol 多用于有序列表<br>4、dl 用于定义数据列表<br>5、em、strong 表示强调</p>\n<p>div、span 是 html 标签中最没有语义的</p>\n<h2 id=\"有利搜索引擎\"><a href=\"#有利搜索引擎\" class=\"headerlink\" title=\"有利搜索引擎\"></a>有利搜索引擎</h2><ul>\n<li>1、a：访问外部链接时要加上 rel=”nofollow”，告诉搜索引擎外部链接无需追踪，加上 title 说明</li>\n<li>2、h1：搜索引擎外认为 h1 最重要，使用 css 调整，网页正文标题用 h1，副标题用 h2，其他不要乱用 h 标签</li>\n<li>3、br 用于文本间的换行，用在 p 内，也可以用 &lt;p &lt;br/ &lt;/p 表示空行</li>\n<li>4、caption：表格标题</li>\n<li>5、img：使用 title、alt 说明</li>\n<li>6、&lt;strong &lt;em 表示强调，&lt;em的权重仅次于&lt;strong,如果只想表示加粗斜体，建议使用&lt;b&lt;i,表示强调则使用&lt;strong&lt;i</li>\n<li>7、重要内容 HTML 代码放在最前面（使用 css 改变布局）</li>\n<li>8、重要内容不要用 JS 输出（搜索引擎看不懂 JS）</li>\n<li>9、尽量少使用 iframe 框架（搜索引擎不喜欢）</li>\n<li>10、谨慎使用 display:none（搜索引擎会过滤掉其内容，设置 z-index或text-index：”-999em”； 代替）</li>\n<li>11、精简代码</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"SEO（Search-Engine-Optimization）搜索引擎优化\"><a href=\"#SEO（Search-Engine-Optimization）搜索引擎优化\" class=\"headerlink\" title=\"SEO（Search Engine Optimization）搜索引擎优化\"></a>SEO（Search Engine Optimization）搜索引擎优化</h2><ul>\n<li>1、搜索引擎工作原理；</li>\n<li>2、分为白帽SEO和黑帽SEO</li>\n<li>（1）白帽SEO：其改良和规范网站设计的作用，是网站获取合理的流量；</li>\n<li>（2）黒帽SEO：乱加关键字，乱加外链，这类行为利用搜索引擎政策缺陷来获取更多用户的访问量，属于欺骗搜索引擎的；</li>\n<li>3、如何做白帽SEO：</li>\n<li>（1）对网站标题，关键字，描述精心设计，反映网站定位，让搜索引擎知道网站是做什么的；</li>\n<li>（2）网站内容优化；（增加关键字密度，增加长尾关键字…）</li>\n<li>（3）合理设置Robot.txt文件</li>\n<li>（4）网站地图；</li>\n<li>（5）增加外链；</li>\n<li>（6）网站结构优化；（前端攻城狮的分内事！）</li>\n<li>（7）页面代码优化。（前端攻城狮的职责所在！）</li>\n</ul>\n<h2 id=\"结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了\"><a href=\"#结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了\" class=\"headerlink\" title=\"结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了\"></a>结构布局优化：用扁平化结构层次结构超过三层小蜘蛛就不愿意爬了</h2><p>控制首页链接数量中小网站100以内，页面导航、底部导航、锚文字链接等<br>扁平化的目录层次（小蜘蛛跳转3次可以到达网站内任何一个内页，网站的设计主页、栏目、内容页，不要用纵线性的结构<br>导航seo优化（头部、底部、内容部分，主导航、副导航、分类导航，尽量用文字，面包屑导航，在每个网站上留下面包屑，使用户可以了解网站组织形式，放于正文的左上方）<br>内容页面的布局细节<br>左面正文，右面热门文章、相关文章，下面是版权信息及链接，栏目排布：首页123456789下拉选择最赞）<br>网站的加载速度会影响小蜘蛛的爬行，页面最好不要超过100k</p>\n<ul>\n<li>1，控制首页链接数量</li>\n<li>2，扁平化的目录层次</li>\n<li>3，导航SEO优化</li>\n<li>4，面包屑导航</li>\n<li>5，其他细节如分页导航的设计</li>\n<li>6，网页加载速度，控制页面大小，最好在100K以内</li>\n</ul>\n<h2 id=\"网页代码优化（语义化代码）\"><a href=\"#网页代码优化（语义化代码）\" class=\"headerlink\" title=\"网页代码优化（语义化代码）\"></a>网页代码优化（语义化代码）</h2><ul>\n<li>A、title标题：强调重点</li>\n<li>B、meta keywords关键词：列举几个关键词</li>\n<li>C、meta description网页描述：高度概括网页的内容</li>\n<li>以上信息不要堆积、重复</li>\n</ul>\n<p>语义话代码（HTML 标签有自己的意义，在适当的位置用适当的标签）<br>1、h1~h6 多用于标题<br>2、ul 多用于无序列表<br>3、ol 多用于有序列表<br>4、dl 用于定义数据列表<br>5、em、strong 表示强调</p>\n<p>div、span 是 html 标签中最没有语义的</p>\n<h2 id=\"有利搜索引擎\"><a href=\"#有利搜索引擎\" class=\"headerlink\" title=\"有利搜索引擎\"></a>有利搜索引擎</h2><ul>\n<li>1、a：访问外部链接时要加上 rel=”nofollow”，告诉搜索引擎外部链接无需追踪，加上 title 说明</li>\n<li>2、h1：搜索引擎外认为 h1 最重要，使用 css 调整，网页正文标题用 h1，副标题用 h2，其他不要乱用 h 标签</li>\n<li>3、br 用于文本间的换行，用在 p 内，也可以用 &lt;p &lt;br/ &lt;/p 表示空行</li>\n<li>4、caption：表格标题</li>\n<li>5、img：使用 title、alt 说明</li>\n<li>6、&lt;strong &lt;em 表示强调，&lt;em的权重仅次于&lt;strong,如果只想表示加粗斜体，建议使用&lt;b&lt;i,表示强调则使用&lt;strong&lt;i</li>\n<li>7、重要内容 HTML 代码放在最前面（使用 css 改变布局）</li>\n<li>8、重要内容不要用 JS 输出（搜索引擎看不懂 JS）</li>\n<li>9、尽量少使用 iframe 框架（搜索引擎不喜欢）</li>\n<li>10、谨慎使用 display:none（搜索引擎会过滤掉其内容，设置 z-index或text-index：”-999em”； 代替）</li>\n<li>11、精简代码</li>\n</ul>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"SEO 优化笔记","path":"3036052883/","eyeCatchImage":null,"excerpt":"<center>SEO优化笔记</center>","date":{"_isAMomentObject":true,"_i":"2016-12-19T02:27:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2016-12-19T02:27:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"收集","tags":["SEO"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Chrome 快捷键","description":"<center>记录几个比较常用的快捷键。</center>","abbrlink":763296652,"date":"2017-05-21T13:49:00.000Z","_content":"# 记录几个比较常用的快捷键\n\n* 打开新窗口\tCtrl + n\n* 打开新的标签页，并跳转到该标签页\tCtrl + t\n* 重新打开最后关闭的标签页，并跳转到该标签页\tCtrl + Shift + t\n* 跳转到下一个打开的标签页\tCtrl + Tab 或 Ctrl + PgDn\n* 跳转到上一个打开的标签页\tCtrl + Shift + Tab 或 Ctrl + PgUp\n* 在当前标签页中打开主页\tAlt + Home\n* 关闭当前标签页\tCtrl + w 或 Ctrl + F4\n* 关闭当前窗口\tAlt + F4\n* 退出 Google Chrome\tCtrl + Shift + q \n* 打开“开发者工具”\tCtrl + Shift + j 或 F12\n* 跳转到地址栏\tCtrl + l、Alt + d 或 F6 \n* 重新加载当前网页\tF5 或 Ctrl + r\n* 重新加载当前网页（忽略缓存的内容）\tShift + F5 或 Ctrl + Shift + r\n\n原网址：\n[https://support.google.com/chrome/answer/157179?hl=zh-Hans](https://support.google.com/chrome/answer/157179?hl=zh-Hans)\n","source":"_posts/Chrome 快捷键.md","raw":"---\ntitle: Chrome 快捷键\ntags:\n  - Chrome\ncategories: 收集\ndescription: <center>记录几个比较常用的快捷键。</center>\nabbrlink: 763296652\ndate: 2017-05-21 21:49:00\n---\n# 记录几个比较常用的快捷键\n\n* 打开新窗口\tCtrl + n\n* 打开新的标签页，并跳转到该标签页\tCtrl + t\n* 重新打开最后关闭的标签页，并跳转到该标签页\tCtrl + Shift + t\n* 跳转到下一个打开的标签页\tCtrl + Tab 或 Ctrl + PgDn\n* 跳转到上一个打开的标签页\tCtrl + Shift + Tab 或 Ctrl + PgUp\n* 在当前标签页中打开主页\tAlt + Home\n* 关闭当前标签页\tCtrl + w 或 Ctrl + F4\n* 关闭当前窗口\tAlt + F4\n* 退出 Google Chrome\tCtrl + Shift + q \n* 打开“开发者工具”\tCtrl + Shift + j 或 F12\n* 跳转到地址栏\tCtrl + l、Alt + d 或 F6 \n* 重新加载当前网页\tF5 或 Ctrl + r\n* 重新加载当前网页（忽略缓存的内容）\tShift + F5 或 Ctrl + Shift + r\n\n原网址：\n[https://support.google.com/chrome/answer/157179?hl=zh-Hans](https://support.google.com/chrome/answer/157179?hl=zh-Hans)\n","slug":"Chrome 快捷键","published":1,"updated":"2022-09-13T14:24:02.928Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooh000pnq548h6y1kua","content":"<h1 id=\"记录几个比较常用的快捷键\"><a href=\"#记录几个比较常用的快捷键\" class=\"headerlink\" title=\"记录几个比较常用的快捷键\"></a>记录几个比较常用的快捷键</h1><ul>\n<li>打开新窗口    Ctrl + n</li>\n<li>打开新的标签页，并跳转到该标签页    Ctrl + t</li>\n<li>重新打开最后关闭的标签页，并跳转到该标签页    Ctrl + Shift + t</li>\n<li>跳转到下一个打开的标签页    Ctrl + Tab 或 Ctrl + PgDn</li>\n<li>跳转到上一个打开的标签页    Ctrl + Shift + Tab 或 Ctrl + PgUp</li>\n<li>在当前标签页中打开主页    Alt + Home</li>\n<li>关闭当前标签页    Ctrl + w 或 Ctrl + F4</li>\n<li>关闭当前窗口    Alt + F4</li>\n<li>退出 Google Chrome    Ctrl + Shift + q </li>\n<li>打开“开发者工具”    Ctrl + Shift + j 或 F12</li>\n<li>跳转到地址栏    Ctrl + l、Alt + d 或 F6 </li>\n<li>重新加载当前网页    F5 或 Ctrl + r</li>\n<li>重新加载当前网页（忽略缓存的内容）    Shift + F5 或 Ctrl + Shift + r</li>\n</ul>\n<p>原网址：<br><a href=\"https://support.google.com/chrome/answer/157179?hl=zh-Hans\">https://support.google.com/chrome/answer/157179?hl=zh-Hans</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"记录几个比较常用的快捷键\"><a href=\"#记录几个比较常用的快捷键\" class=\"headerlink\" title=\"记录几个比较常用的快捷键\"></a>记录几个比较常用的快捷键</h1><ul>\n<li>打开新窗口    Ctrl + n</li>\n<li>打开新的标签页，并跳转到该标签页    Ctrl + t</li>\n<li>重新打开最后关闭的标签页，并跳转到该标签页    Ctrl + Shift + t</li>\n<li>跳转到下一个打开的标签页    Ctrl + Tab 或 Ctrl + PgDn</li>\n<li>跳转到上一个打开的标签页    Ctrl + Shift + Tab 或 Ctrl + PgUp</li>\n<li>在当前标签页中打开主页    Alt + Home</li>\n<li>关闭当前标签页    Ctrl + w 或 Ctrl + F4</li>\n<li>关闭当前窗口    Alt + F4</li>\n<li>退出 Google Chrome    Ctrl + Shift + q </li>\n<li>打开“开发者工具”    Ctrl + Shift + j 或 F12</li>\n<li>跳转到地址栏    Ctrl + l、Alt + d 或 F6 </li>\n<li>重新加载当前网页    F5 或 Ctrl + r</li>\n<li>重新加载当前网页（忽略缓存的内容）    Shift + F5 或 Ctrl + Shift + r</li>\n</ul>\n<p>原网址：<br><a href=\"https://support.google.com/chrome/answer/157179?hl=zh-Hans\">https://support.google.com/chrome/answer/157179?hl=zh-Hans</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"Chrome 快捷键","path":"763296652/","eyeCatchImage":null,"excerpt":"<center>记录几个比较常用的快捷键。</center>","date":{"_isAMomentObject":true,"_i":"2017-05-21T13:49:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-05-21T13:49:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"收集","tags":["Chrome"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Emacs 快速简明指南","description":"<center>简单整理了下 Emacs 指令，以备查阅。</center>","abbrlink":1446338271,"date":"2017-11-30T07:30:00.000Z","_content":"简单整理了下 Emacs 指令，以备查阅。\n\nEmacs 键盘命令通常包含 CONTROL 键（有时候以 CTRL 或 CTL 来标示）和 META 键（有时候用 EDIT 或 ALT 来标示）。为了避免每次都要写出全名，我们 约定使用下述缩写：\n\nC-<chr>  表示当输入字符 <chr> 时按住 CONTROL 键。\n         因此 C-f 就表示：按住 CONTROL 键再输入 f。\n\nM-<chr>  表示当输入字符 <chr> 时按住 META（或 EDIT 或 ALT）键。\n         如果你的键盘上没有 META 、EDIT 或 ALT 键，用下述方法也等效：\n         先按一下 ESC 键然后放开，再输入 <chr>。我们用 <ESC> 来表示\n         ESC 键。\n\n重要提示：要退出 Emacs，请用 C-x C-c（两个连续的组合键）。 要退出一个正在运行中的命令，请用 C-g。 \n\n\n# 1 小结（SUMMARY）\n以下命令在翻页浏览时相当有用：\n\n**C-v     向前移动一屏\nM-v     向后移动一屏\nC-l     重绘屏幕，并将光标所在行置于屏幕的中央\n        （注意是 CONTROL-L，不是 CONTROL-1）**\n> 找到光标，留意其附近的文字，然后输入 C-l。\n找找光标在哪里，你会发现其附近的文字与之前相同，位置却变为屏幕的中心。 如果你再次输入 C-l ，附近的文字将移动到屏幕的顶端。再次输入 C-l ， 文字将移动到底端。\n\n如果你的键盘上有 PageUp 和 PageDn，也可以用这两个键来滚屏。不过使用 C-v 和 M-v 的效率要更高一些。\n\n# 2 基本的光标控制（BASIC CURSOR CONTROL）\n整屏的移动很有用，但是如何在文字中精确定位呢？\n\n有几种方式可以选择。用方向键当然可以，不过更有效率的方法是保持双手位于 主键盘区，然后使用 C-p 、 C-b 、 C-f 和 C-n 这四个命令。它们的功能和方 向键是一样的，如下图所示:\n\n                             上一行 C-p\n                                  :\n                                  :\n            向左移 C-b .... 目前光标位置 .... 向右移 C-f\n                                  :\n                                  :\n                             下一行 C-n\n> 用 C-n 或 C-p 将光标移到上图的中央。\n  按 C-l，整幅图会被显示在屏幕的中央。\n“P N B F” 四个字母分别代表了四个词，用这四个词记忆这些组合键会更容易： P 代表 previous（上一行），N 代表 next（下一行），B 代表 backward（回 退），而 F 则代表 forward（前进）。这些组合键今后将与你形影不离。\n\n每行文字都以一个 “换行符” 结束，“换行符”把行与行区分开来。（通常情况下， 一个文件的最后一行会有一个换行符，但是 Emacs 不强制要求这一点。）\n\n> 在一行的行头输入 C-b。\n光标应该会移动到前一行的行尾，因为光标在回退过程中越过了换行符。\n\n同样 C-f 也可以像 C-b 一样越过换行符。\n\n> 连按几次 C-b，感受一下光标的移动。\n然后按几次 C-f 回到本行的行尾。 再按一次 C-f，光标会移动到下一行。\n\n当你移动光标穿越屏幕的上下边界时，在边界外的文字会移动到屏幕内，这称为 “滚动”（scrolling）。滚动使得光标可以被移动到文字中的任何位置，并且还 不会让光标跑到屏幕外边去。\n\n> 用 C-n 将光标下移，一直越过屏幕边界，同时观察发生了什么变化。\n如果你嫌一个字符一个字符地挪光标太慢，你还可以一个词一个词地跳。M-f (META-f) 可以将光标往前移动一个词，而 M-b 则是往后移。【这里的 “词” 指 英文单词，对中文来说，则是指移动到下一个标点符号。】\n\n> 试试 M-f 和 M-b。\n如果光标停在一个词的中间，M-f 会移动到这个词的末尾。如果光标处于词与词 之间的空白处，M-f 会移动到下一个词的末尾。M-b 的功能类似，只是方向相反。\n\n> 按几次 M-f 和 M-b，中间夹杂一些 C-f 和 C-b。\n你可以观察到 M-f 和 M-b 在不同位置上所表现出来的不同行为。\n\n请注意 C-f 、C-b 和 M-f 、M-b 两对之间的类比关系。通常的惯例是：META 系 列组合键用来操作 “由语言定义的单位（比如词、句子、段落）”，而 CONTROL 系列组合键用来操作 “与语言无关的基本单位（比如字符、行等等）”。\n\n类似的惯例在 “行” 与“句子”之间也同样适用：C-a 和 C-e 可以将光标移动到 “一行”的头部和尾部；而 M-a 和 M-e 则将光标移动到 “一句” 的头部和尾部。\n\n> 按两次 C-a，再按两次 C-e。\n按两次 M-a，再按两次 M-e。\n\n想一想为什么重复的 C-a 命令会没有作用，而重复的 M-a 命令则会让光标不断 地回退到上一个句子。虽然这个类比规律并不严格，但是很自然。\n\n光标停留的位置也可以称作 “点位”（point）。或者干脆说，光标指示出了屏幕 上“点位” 在文本中的位置。\n\n这里对简单的光标移动命令做一个总结，其中也包括了整词和整句的移动：\n\n**C-f     向右移动一个字符\nC-b     向左移动一个字符**\n\n**M-f     向右移动一个词【对中文是移动到下一个标点符号】\nM-b     向左移动一个词【对中文是移动到上一个标点符号】**\n\n**C-n     移动到下一行\nC-p     移动到上一行**\n\n**C-a     移动到行首\nC-e     移动到行尾**\n\n**M-a     移动到句首\nM-e     移动到句尾**\n\n> 把上面所有的命令都练习几次，这些可都是最常用的命令。\n这里还要介绍两个重要的光标移动命令：M-<（META 小于号）可以将光标移动到 所有文字的最开头；M-> （META 大于号）可以将光标移动到所有文字的最末尾。\n\n注意，在大部分键盘上，小于号（<）需要用上档键（Shift）来输入，所以在这 些键盘上你应该用 Shift 键来输入 M-<，如果不按 Shift 键，你输入的会是 M-comma（META 逗号）。\n\n\n大部分的 Emacs 命令接受数字参数，并且对于多数命令而言，这些数字参数的作 用是指定命令的重复次数。为一个命令指定数字参数（也就是重复次数）的方法 是：先输入 C-u，然后输入数字作为参数，最后再输入命令。如果你有 META （或 EDIT 或 ALT）键，那么还有另一种办法：按住 META 键不放，然后输入数字。不 过我们还是建议你用 C-u，因为它在任何终端机上都能用。这种数字参数也称为 “前缀参数”，意思是说这个参数是先于使用它的命令而输入的。\n\n举例来说， C-u 8 C-f 会向前移动 8 个字符。\n\n> 为 C-n 或者 C-p 指定一个数字参数，这样你可以只用一个命令就把光标移动\n到本行的附近。\n\n虽然大部分命令把数字参数解释为其重复次数，但是也有些命令例外，它们将数 字参数另做它用。比如有些命令（我们目前还没学到）仅仅将前缀参数作为一个 标志――只要给出有一个前缀参数，不管其值为何，它都会改变命令的功能。\n\n而 C-v 和 M-v 则属于另一种类型的例外。当给定一个参数时，它们将滚动你指 定的 “行数”，而不是 “屏数”。举例来说，C-u 8 C-v 将文本向下滚动 8 行。\n\n> 现在试试看，输入 C-u 8 C-v。\n这个命令应该已经将文字向上滚动了 8 行。如果你想将它再次地向下滚动，你可 以给定一个参数然后执行 M-v。\n\n如果你正在使用图形界面，比如 X 或者微软的 Windows，那么在 Emacs 窗 口的一边应该有一个长方形的区域叫 “滚动条”。你可以用鼠标操纵滚动条来滚动 文字。\n\n如果你的鼠标有滚轮的话，你也可以使用滚轮来滚动。\n\n# 3 如果 EMACS 失去响应（IF EMACS STOPS RESPONDING）\n如果 Emacs 对你的命令失去响应，你可以用 C-g 来安全地终止这条命令。C-g 也可以终止一条执行过久的命令。\n\n**C-g 还可以取消数字参数和只输入到一半的命令。**\n\n> 输入 C-u 100 设定一个值为 100 的数字参数，然后按 C-g。\n现在再按 C-f，光标应该只会移动一个字符，因为你已经用 C-g 取消了参数。\n\n如果你不小心按了一下 <ESC>，你也可以用 C-g 来取消它。 【这个说法似乎有问题，因为按照这个按键顺序输入的应该是 C-M-g。 取消 <ESC> 的正确做法是再连按两次 <ESC>。】\n\n# 4 被禁用的命令（DISABLED COMMANDS）\n有一些 Emacs 命令被 “禁用” 了，以避免初学者在不了解其确切功能的情况下误 用而造成麻烦。\n\n如果你用到了一个被禁用的命令，Emacs 会显示一个提示消息，告诉你这个命令 到底是干什么的，询问你是否要继续，并在得到你的肯定之后再执行这命令。\n\n如果你真的想用这条命令，在 Emacs 询问你的时候应该按空格。一般来说，如果 你不想用，就按 “n”。\n\n> 试试 C-x C-l （这是一个被禁用的命令）\n然后用 n 来回答询问。\n\n# 5 窗格（WINDOWS）\nEmacs 可以有多个 “窗格”，每个窗格显示不同的文字。后面会介绍怎么对付多个窗格，现在我们先学会如何关掉多余的窗格。其实也很简单：\n\n**C-x 1 只保留一个窗格（也就是关掉其它所有窗格）。**\n\n也就是先按 CONTROL-x 然后再按 1。C-x 1 会保留光标所在的窗格，并将其扩大到整个屏幕，同时关掉所有其它的窗格。\n\n> 把光标移到本行然后输入 C-u 0 C-l。\n> 输入 C-h k C-f。观察当一个新窗格出现时当前窗格（用来显示C-f 命令的文档）是如何缩小的。\n\n> 输入 C-x 1 关掉文档窗格。\n有一系列命令是以 CONTROL-x 开始的，这些命令许多都跟 “窗格、文件、缓冲区 【缓冲区（buffer）会在后文详细介绍】” 等等诸如此类的东西有关，其中有些 命令可能包含了 2 个、3 个或者 4 个字符。\n\n# 6 插入与删除（INSERTING AND DELETING）\n插入文字很简单，直接敲键盘就可以了。普通的字符，比如 A、7、* 等等，会 随着你的输入而插入。要插入一个换行符，输入 <Return>（这个键在键盘上有 时会被标注成 “Enter”）。\n\n你可以用 <DEL> 来删除光标左边的字符，这个键通常被标注为 “Backspace”――跟 你在 Emacs 之外的用法应该一样，删除最后一个输入的字符。\n\n你的键盘上可能有另外一个键，标注着 <Delete>，但那个不是我们所说的 <DEL>。\n\n如果一行文字很长、超出了窗格的宽度，显示不下的部分会在紧邻的下一行继续 显示。如果你使用的是图形界面，文本区域两边的狭窄区域（左右 “边缘”）会出 现小小的转弯箭头，表明这是某一行的接续显示。如果你使用的是文本终端，接 续显示由屏幕最右边一列的一个反斜线来表示。\n\n好，现在你应该已经掌握了最基本的的文本插入和修改功能，其实删除还可以 “以词为单位”进行，下面是一个关于 “删除” 操作的小结：\n\n**<DEL>        删除光标前的一个字符\nC-d          删除光标后的一个字符**\n\n**M-<DEL>      移除光标前的一个词\nM-d          移除光标后的一个词**\n\n**C-k          移除从光标到“行尾”间的字符\nM-k          移除从光标到“句尾”间的字符**\n【可能你已经注意到了 “删除（delete）” 和“移除（kill）”的用词区别，后文会有详细说明。】\n\n注意 “<DEL> 和 C-d” 还有 “M-<DEL> 和 M-d” 是根据前述惯例从 C-f 和 M-f 衍生 出来的（其实 < DEL > 不是控制字符，我们先忽略这一点）。C-k 和 M-k 的关系在 某种程度上与 C-e 和 M-e 一样――如果把 “一行” 和“一句”作一个类比的话。\n\n你也可以用一种通用的办法来移除缓冲区里的任何一部分：首先把光标移动到你 想要移除的区域的一端，然后按 C-<SPC>（<SPC > 指空格）【注意，C-<SPC> 往 往被中文用户设定成输入法热键，如果这样，C-<SPC> 就被系统拦截而无法传递 给 Emacs 了，在这种情况下可以使用 C-@。】，然后将光标移动到你准备移除的 文字的另一端。这个时候， Emacs 会高亮光标和你按下 C-<SPC> 之间的文本。 最后，按下 C-w 。这样就可以把位于这两点之间的所有文字移除了。\n\n> 移动光标到上一段开头的“你”字。\n> 输入 C-<SPC> 。Emacs 应该会在屏幕的下方显示一个“Mark set”的消息。\n> 移动光标到第二行中的“端”字。\n> 输入 C-w，从“你”开始到“端”之前的文字被全部移除。\n\n注意,“移除（kill）”和 “删除（delete）” 的不同在于被移除的东西可以被重新 插入（在任何位置），而被删除的就不能使用相同的方法重新插入了（不过可以 通过撤销一个删除命令来做到，后文会提到）。【实际上，移除掉的东西虽然看 起来 “消失” 了，但实际上被 Emacs 记录了下来，因此还可以找回来；而删除掉 的东西虽然也可能还在内存里，但是已经被 Emacs“抛弃”了，所以就找不回来 了。】重新插入被移除的文字称为“召回（yank）”。一般而言，那些可能消除很 多文字的命令会把消除掉的文字记录下来（它们被设定成了“可召回”），而那些 只消除一个字符或者只消除空白的命令就不会记录被消除的内容（自然你也就无 法召回了）。\n\n> 移动光标到一非空白行的行头，然后输入 C-k 移除那一行上的文字。\n> 再次 C-k，你可以看到它移除了跟在那一行后面的换行符。\n\n注意，单独的 C-k 会把一行的内容移除，而第二个 C-k 则会移除换行符，并使 其后所有的行都向上移动。C-k 处理数字参数的方式很特别，它会把参数指定的 那么多行连同其后的换行符一起移除，而不仅仅是重复 C-k 而已。比如 C-u 2 C-k 会把两行以及它们的换行符移除；而如果只是输入 C-k 两次显然不是这个结果。\n\n重新插入被移除的文字恢复的动作称为 “召回（yanking）”。（就好像把别人从你身边 移走的东西又猛力地拉回来。）你可以在你删除文字的地方召回，也可以在别的 地方召回，还可以多次召回同样的文字以得到它的多个拷贝。很多其它的编辑器 把移除和召回叫做“剪切” 和“粘贴” （详情可见 Emacs 使用手册里的术语表）。\n\n召回的命令是 C-y。它会在光标所在处插入你最后移除的文字。\n\nC-y 可以召回最近一次移除的内容，那如何召回前几次移除的内容呢？它们当然 没有丢，你可以用 M-y 来召回它们。在用 C-y 召回最近移除的文字之后，紧接 着再按 M-y 就可以召回再前一次被移除的内容，再按一次 M-y 又可以召回再上 一次的…… 连续使用 M-y 直到找到你想要召回的东西，然后什么也不用做，继续 编辑就行了。\n\n如果连续按 M-y 很多次，你可能会回到起始点，也就是最近移除的文字。 【看得出这实际上是一个环。】\n\n# 7 撤销（UNDO）\n如果你修改了一段文字，又觉得改得不好，可以用 undo 命令进行撤销：C-/。\n\n通常 C-/ 会消除一个命令所造成的所有改变；如果你在一行中连续多次地使用 C-/，你会把以前的命令也依次撤销。\n\n但是有两个例外： 1） 没有改变文字的命令不算（包括光标移动命令和滚动命令） 2） 从键盘输入的字符以组为单位――每组最多 20 个字符――来进行处理。 （这是为了减少你在撤销 “插入文字” 动作时需要输入 C-/ 的次数）\n\n> 用 C-k 将这一行移除，然后输入 C-/ ，它会再次出现。\nC-_ 也是撤销命令；它的作用跟 C-/ 一样，但是它比较容易多次输入。在 某些终端上，输入 C-/ 实际上向 Emacs 发送的是 C-_ 。 另外， C-x u 和 C-/ 完全一样，但是按起来有些麻烦。\n\n数字参数对于 C-/ 、 C-_ 和 C-x u 的意义是执行撤销的重复次数。\n\n# 8 文件（FILE）\n想保存工作成果就要记得存盘，否则一旦退出 Emacs 你编辑的文字就会丢失。要 存盘，就要在编辑前 “寻找” 到一个存盘文件。（这个过程通常也被称为“访问” 文件。）\n\n寻找到一个文件意味着你可以在 Emacs 里查看这个文件的内容。从许多角度看， 这就等于你在直接编辑这个文件，只是你所做的修改只有在 “存盘” 的时候才会 被写入文件。也正因为如此，你可以丢弃一个写到一半的文件而不必把这个残缺 文件也保存到计算机上。在存盘的时候，Emacs 会把存盘前的文件重命名保存， 以防你改完之后又想反悔。\n\n在屏幕的下方，你应该能够看到头部有短线 “-” 的一行，行首通常是一些诸如 “ -:— TUTORIAL.cn” 的文字，这些文字代表了你当前正在访问的文件。比如你现 在正在访问的文件是对 Emacs 快速指南的一份临时拷贝，叫做“TUTORIAL.cn”。 每当 Emacs 寻找到一个文件，文件名就会出现在这个位置。\n\n寻找文件的命令有一个特点，那就是你必须给出文件名。我们称这个命令 “读入 了一个参数”（在这里，这个参数显然就是文件名）。在你输入这条命令之后：\n\n**C-x C-f   寻找一个文件**\nEmacs 会提示你输入文件名。你输入的文件名会出现在屏幕最底端的一行，这一 行被称为小缓冲（minibuffer），在小缓冲里你可以使用通常的 Emacs 编辑命令 来编辑文件名。\n\n在小缓冲里输入文件名（其实输入其它东西也一样）时可以用 C-g 取消。\n\n> 输入 C-x C-f，然后输入 C-g\n这会关掉小缓冲，同时也会取消使用小缓冲的 C-x C-f 命令。 当然了，你也没有找任何文件。\n\n用 <Return> 结束文件名的输入。之后，小缓冲会消失，C-x C-f 将会去寻找你 指定的文件。小缓冲在 C-x C-f 命令结束之后也会消失。\n\n文件被显示在了屏幕上，你可以开始编辑了。存盘用这条命令：\n\n**C-x C-s   储存这个文件**\n这条命令把 Emacs 中的文字存储到文件中。第一次存盘的时候 Emacs 会将原文 件重命名以备份。重命名的规则通常是在原文件名之后添加一个 “~” 字符。 【对许多人来说，这是一个烦人的特性，关掉文件备份可以用如下命令： M-x customize-variable <Return> make-backup-files <Return>】\n\n存盘结束后，Emacs 会显示写入文件的文件名。你最好养成经常存盘的习惯，这 可以减少系统崩溃和死机给你带来的损失（也可参见下面的 “自动保存” 一节）。\n\n> 输入 C-x C-s TUTORIAL.cn <Return> 。\n这将会把该指南保存为一个名为 TUTORIAL.cn 的文件，并且在屏幕的下方显 示一条消息：“Wrote …TUTORIAL.cn”。\n\n你不但可以寻找一个已有的文件来查看或编辑，还可以寻找一个不存在的文件。 实际上这正是 Emacs 创建新文件的方法：找到不存在的新文件。事实上，只有 在存盘的时候，Emacs 才会真正创建这个文件。而在这之后的一切就跟编辑一个 已有文件没有区别了。\n\n# 9 缓冲区（BUFFER）\n你可以用 C-x C-f 找到并打开第二个文件，但第一个文件仍然在 Emacs 中。要 切回第一个文件，一种办法是再用一次 C-x C-f。这样，你就可以在 Emacs 中同 时打开多个文件。\n\nEmacs 把每个编辑中的文件都放在一个称为 “缓冲区（buffer）” 的地方。每寻 找到一个文件，Emacs 就在其内部开辟一个缓冲区。用下面的命令可以列出当前 所有的缓冲区：\n\n**C-x C-b 列出缓冲区**\n\n> 现在就试一下 C-x C-b\n观察一下缓冲区是如何被命名的，它很可能跟与其对应的文件同名。实际上，一 个 Emacs 窗格里的任何文字都是某个缓冲区的一部分。\n\n> 输入 C-x 1 离开缓冲区列表\n不管存在多少缓冲区，任何时候都只能有一个 “当前” 缓冲区，也就是你正在编 辑的这个。如果你想编辑其它的缓冲区，就必须 “切换” 过去。上面讲过，用 C-x C-f 是一种办法。不过还有一个更简单的办法，那就是用 C-x b。用这条命 令，你必须输入缓冲区的名称。\n\n> 通过输入 C-x C-f foo <Return> 创建一个名为“foo”的文件。\n然后输入 C-x b TUTORIAL.cn <Return> 回到这里。\n\n大多数情况下，缓冲区与跟其对应的文件是同名的（不包括目录名），不过这也 不是绝对的。用 C-x C-b 得到的缓冲区列表总是显示缓冲区名。\n\n缓冲区未必有对应文件。显示缓冲区列表的缓冲区（叫做 “*Buffer List*”）就 是这样。这个 TUTORIAL.cn 缓冲区起初没有对应的文件，但是现在有了，因为 在前一节你输入了 C-x C-s ， 将它保存成了一个文件。\n\n“*Messages*” 缓冲区也没有对应文件，这个缓冲区里存放的都是在 Emacs 底部 出现的消息。\n\n> 输入 C-x b *Messages* <Return> 瞅瞅消息缓冲区里都有什么东西。\n然后再输入 C-x b TUTORIAL.cn <Return> 回到这里。\n\n如果你对某个文件做了些修改，然后切换到另一个文件，这个动作并不会帮你把 前一个文件存盘。对第一个文件的修改仍然仅存在于 Emacs 中，也就是在它对 应的缓冲区里。并且，对第二个文件的修改也不会影响到第一个文件。这很有用， 但也意味着你需要一个简便的办法来保存第一个文件的缓冲区。先切换回那个缓 冲区，再用 C-x C-s 存盘，太麻烦了。你需要一个更简便的方法，而 Emacs 已 经为你准备好了：\n\n**C-x s   保存多个缓冲区\nC-x s 会找出所有已被修改但尚未存盘的缓冲区，然后向你逐个询问：是否需要存盘？**\n\n> 插入一行文字，然后输入 C-x s。\n它应该会问你，是否要储存名为 TUTORIAL.cn 的缓冲区？ 按 “y” 告诉它你想存盘。\n\n# 10 命令集扩展（EXTENDING THE COMMAND SET）\nEmacs 的命令就像天上的星星，数也数不清。把它们都对应到 CONTROL 和 META 组合键上显然是不可能的。Emacs 用扩展（eXtend）命令来解决这个问题，扩展 命令有两种风格：\n\n**C-x     字符扩展。  C-x 之后输入另一个字符或者组合键。\nM-x     命令名扩展。M-x 之后输入一个命令名。**\n很多扩展命令都相当有用，虽然与你已经学过的命令比起来，他们可能不那么常 用。我们早已经见过一些扩展命令了，比如用 C-x C-f 寻找文件和用 C-x C-s 保存文件；退出 Emacs 用的 C-x C-c 也是扩展命令。（不用担心退出 Emacs 会 给你带来什么损失，Emacs 会在退出之前提醒你存盘的。）\n\n如果你使用图形界面，你不需要任何特殊的命令来切换 Emacs 和其他应用程序。 你可以使用鼠标或者窗口管理器的命令。然而，如果你使用只能同时显示一个应 用程序的文本终端，你需要 “挂起” Emacs ，以切换到其他的应用程序。\n\nC-z 可以暂时离开 Emacs――当然，你还可以再回来。在允许 C-z 的系统中，C-z 会把 Emacs“挂起”，也就是说，它会回到 shell 但不杀死 Emacs 的进程。在常用的 shell 中，通常可以用 “fg” 或者 “%emacs” 命令再次回到 Emacs 中。\n\n你最好在打算退出登陆的时候再用 C-x C-c。在把 Emacs 当做一个临时的编辑 器的时候（比如被一个邮件处理程序调用），也可以用 C-x C-c 退出。\n\nC-x 的扩展命令有很多，下面列出的是你已经学过的：\n\n**C-x C-f         寻找文件。\nC-x C-s         保存文件。\nC-x C-b         列出缓冲区。\nC-x C-c         离开 Emacs。\nC-x 1           关掉其它所有窗格，只保留一个。\nC-x u           撤销。**\n\n用命令名扩展的命令通常并不常用，或只用在部分模式下。比如 replace-string（字符串替换）这个命令，它会把一个字符串替换成另一个。在 输入 M-x 之后，Emacs 会在屏幕底端向你询问并等待你输入命令名。如果你想 输入 “replace-string”，其实只需要敲“repl s<TAB>” 就行了，Emacs 会帮你自动补齐。输入完之后按 <Return> 提交。\n\n字符串替换命令需要两个参数――被替换的字符串和用来替换它的字符串。每个参数的输入都以换行符来结束。\n\n\n# 11 自动保存（AUTO SAVE）\n如果你已经修改了一个文件，但是还没来得及存盘你的计算机就罢工了，那么你 所做的修改就很可能会丢失。为了避免这样的不幸发生，Emacs 会定期将正在编 辑的文件写入一个 “自动保存” 文件中。自动保存文件的文件名的头尾各有一个 “#”字符，比如你正在编辑的文件叫“hello.c”，那么它的自动保存文件就叫 “#hello.c#”。这个文件会在正常存盘之后被 Emacs 删除。\n\n所以，假如不幸真的发生了，你大可以从容地打开原来的文件（注意不是自动保 存文件）然后输入 M-x recover file <Return> 来恢复你的自动保存文件。在 提示确认的时候，输入 yes<Return>。\n\n# 12 回显区（ECHO AREA）\n如果 Emacs 发现你输入多字符命令的节奏很慢，它会在窗格的下方称为 “回显区” 的地方给你提示。回显区位于屏幕的最下面一行。\n\n# 13 状态栏（MODE LINE）\n位于回显区正上方的一行被称为 “状态栏”。状态栏上会显示一些信息，比如：\n\n-:**- TUTORIAL.cn 63% L749 (Fundamental)\n\n状态栏显示了 Emacs 的状态和你正在编辑的文字的一些信息。\n\n你应该知道文件名的意思吧？就是你找到的那个文件嘛。-NN%– 显示的是光标在 全文中的位置。如果位于文件的开头，那么就显示 –Top– 而不是 –00%–；如 果位于文件的末尾，就显示 –Bot–。如果文件很小，一屏就足以显示全部内容， 那么状态栏会显示 –All–。\n\n“L” 和其后的数字给出了光标所在行的行号。\n\n最开头的星号（*）表示你已经对文字做过改动。刚刚打开的文件肯定没有被改动 过，所以状态栏上显示的不是星号而是短线（-）。\n\n状态栏上小括号里的内容告诉你当前正在使用的编辑模式。缺省的模式是 Fundamental，就是你现在正在使用的这个。它是一种 “主模式”。\n\nEmacs 的主模式林林总总。有用来编辑程序代码的――比如 Lisp 模式；也有用 来编辑各种自然语言文本的――比如 Text 模式。任何情况下只能应用一个主模 式，其名称会显示在状态栏上，也就是现在显示 “Fundamental” 的地方。\n\n主模式通常会改变一些命令的行为。比方说，不管编辑什么语言的程序代码，你 都可以用一个相同的命令来添加注释。但是在不同的语言中注释的语法往往是不 同的，这时不同的主模式就会用各自不同的语法规则来添加注释。主模式都是可 以用 M-x 启动的扩展命令，M-x fundamental-mode 就可以切换到 Fundamental 模式。\n\n编辑自然语言文本――比如现在――应该用 Text 模式。\n\n> 输入 M-x text-mode <Return>。\n别担心，什么都没变。不过细心一些可以发现，M-f 和 M-b 现在把单引号（'） 视为词的一部分了。而在先前的 Fundamental 模式中，M-f 和 M-b 都将单引号 视为分隔单词的符号。\n\n主模式通常都会搞一些类似的小动作，因为很多命令其实完成的是 “相同的工 作”，只是在不同环境下会有不同的工作方式而已。【所谓 “求同存异”，在 Emacs 里得到了很好的体现】\n\n用 C-h m 可以查看当前主模式的文档。\n\n> 把光标移动到下一行。\n> 用 C-l C-l 将本行带到屏幕的最上方。\n> 输入 C-h m，看看 Text 模式与 Fundamental 模式有哪些不同。\n> 输入 C-x 1 关掉文档窗格。\n\n主模式之所以称之为 “主（major）” 模式，是因为同时还有“辅模式”（minor mode）存在。辅模式并不能替代主模式，而是提供一些辅助的功能。每个辅模式 都可以独立地开启和关闭，跟其它辅模式无关，跟主模式也无关。所以你可以不 使用辅模式，也可以只使用一个或同时使用多个辅模式。\n\n有一个叫做自动折行（Auto Fill）的辅模式很有用，特别是在编辑自然语言文本 的时候。启用自动折行后，Emacs 会在你打字超出一行边界时自动替你换行。\n\n用 M-x auto-fill-mode <Return> 启动自动折行模式。再用一次这条命令，自 动折行模式会被关闭。也就是说，如果自动折行模式没有被开启，这个命令会开 启它；如果已经开启了，这个命令会关闭它。所以我们说，这个命令可以用来 “开关（toggle）” 模式。\n\n> 现在输入 M-x auto-fill-mode <Return>。然后随便敲点什么，直到你看到它\n分成两行。你必须敲一些空格，因为 Auto Fill 只在空白处进行断行。 【输入空格对英文来说是必须的，而对中文则不必。】\n\n行边界通常被设定为 70 个字符【这里指英文字符】，你可以用 C-x f 命令配合 数字参数来重新设定它。\n\n> 输入 C-x f 并传递参数 20： C-u 2 0 C-x f。\n然后输入一些文字，观察 Emacs 的自动折行动作 最后再用 C-x f 将边界设回 70。\n\n如果你在段落的中间做了一些修改，那么自动折行模式不会替你把整个段落重新 折行，你需要用 M-q 手动折行。注意，光标必须位于你需要折行的那一段里。\n\n> 移动光标到前一段中，然后输入 M-q。\n\n# 14 搜索（SEARCHING）\nEmacs 可以向前或向后搜索字符串（“字符串” 指的是一组连续的字符）。搜索命 令是一个移动光标的命令：搜索成功后，光标会停留在搜索目标出现的地方。\n\nEmacs 的搜索命令是 “渐进的（incremental）”。意思是搜索与输入同时进行： 你在键盘上一字一句地输入搜索词的过程中，Emacs 就已经开始替你搜索了。\n\n**C-s 是向前搜索，C-r 是向后搜索。**\n\n在按下 C-s 之后，回显区里会有 “I-search” 字样出现，表明目前 Emacs 正处 于 “渐进搜索” 状态，并等待你输入搜索字串。按 <Return> 可以结束搜索。\n\n> 输入 C-s 开始一个搜索。注意敲慢一点，一次输入一个字符。\n慢慢输入 “cursor” 这个词，每敲一个字都停顿一下并观察光标。 现在你应该已曾经找到 “cursor” 这个词了。\n\n> 再按一次 C-s，搜索下一个“cursor”出现的位置。\n> 现在按四次 <DEL> ，看看光标是如何移动的。\n> 敲 <Return> 结束搜索。\n\n看仔细了么？在一次渐进式搜索中，Emacs 会尝试跳到搜索目标出现的位置。要 跳到下一个命中位置，就再按一次 C-s。如果找不到目标，Emacs 会发出 “哔” 的一声，告诉你搜索失败。在整个过程中，都可以用 C-g 来终止搜索。【你会发 现 C-g 会让光标回到搜索开始的位置，而 <Return> 则让光标留在搜索结果上， 这是很有用的功能。】\n\n在渐进式搜索中，按 <DEL> 会 “撤回” 到最近一次搜索的命中位置。如果之前没 有一个命中， <DEL> 会抹去搜索字符串中的最后一个字符。比如你已经输入了 “c”，光标就停在 “c” 第一次出现的位置，再输入 “u”，光标停在“cu” 第一次出现 的位置，这时再按 <DEL> ，“u”就从搜索字串中消失了，然后光标会回到 “c” 第 一次出现的位置。\n\n另外，如果你在搜索的时候输入了 control 或者 meta 组合键的话，搜索可能会 结束。（也有例外，比如 C-s 和 C-r 这些用于搜索的命令。）\n\n前面说的都是 “向下” 搜索，如果想 “向上” 搜索，可以用 C-r。C-r 与 C-s 相比除了搜索方向相反之外，其余的操作都一样。\n\n# 15 多窗格（MULTIPLE WINDOWS）\nEmacs 的迷人之处很多，能够在屏幕上同时显示多个窗格就是其中之一。\n\n连续使用 C-x o 可以遍历所有窗格。“被选中的窗格”，也就是绝大多数的编辑 操作所发生的地方，是在你不打字时闪烁光标的那个窗格。其他的窗格有它们自 己的光标位置； 如果你在图形界面下运行 Emacs ，这些光标是镂空的长方形。\n\n当你在一个窗格中编辑，但用另一个窗格作为参考的时候，C-M-v 是很有用的命 令。无需离开被选中的窗格，你就可以用 C-M-v 命令滚动另外一个窗格中的文 字。【比如翻译和校对就很适合用这种方式进行。】\n\nC-M-v 是一个 CONTROL-META 组合键。如果你有 META （或 Alt）键的话，可以 同时按住 CONTROL 和 META 键并输入 v。CONTROL 和 META 键先按哪个都可以， 因为它们只是用来 “修饰（modify）” 你输入的字符的。\n\n如果你并没有 META 键，你也可以用 ESC 来代替，不过这样的话就要注意按键顺 序了：你必须先输入 ESC ，然后再输入 CONTROL-v。CONTROL-ESC v 是没用的， 因为 ESC 本身是一个字符键，而不是一个修饰键（modifier key）。\n\n> （在上方窗格里）输入 C-x 1 关掉下方窗格。\n（如果你在下方的窗格里输入 C-x 1，那么就会关掉上方的窗格。你可以把这个 命令看成是 “只保留一个窗格”――就是我们正在编辑的这个。）\n\n不同的窗格可以显示不同的缓冲区。如果你在一个窗格里用 C-x C-f 打开了一个 文件，另一个窗格并不会发生什么变化。任何一个窗格里都可以用来打开文件。\n\n用下面的方法可以在一个新开窗格里打开文件：\n\n> 输入 C-x 4 C-f，紧跟着输入一个文件名，再用 <Return> 结束。\n可以看到你指定的文件出现在下方的窗格中，同时光标也跳到了那里。\n\n> 输入 C-x o 回到上方的窗格，然后再用 C-x 1 关掉下方窗格。\n\n# 16 多窗口（MULTIPLE FRAMES）\nEmacs 可以创建多个窗口。窗口由许多窗格以及菜单、滚动条、回显区等组成。 在图形界面下，多个窗口可以同时显示出来。在文本终端中，只能同时显示一个 窗口。\n\n> 输入 M-x make-frame <Return>。\n可以看到一个新的窗口出现在了你的屏幕上。\n\n你可以在新的窗口里做最初的窗口里可以做的任何事情。第一个窗口没有什么特 别的。\n\n> 输入 M-x delete-frame <Return>.\n这个命令将会关闭选中的窗口。\n\n你也可以通过图形系统来关闭某个窗口（通常是在窗口上面的某个角落里的一个 “X” 按钮）。如果你关闭的是 Emacs 进程的最后一个窗口， Emacs 将会退出。\n\n# 17 递归编辑（RECURSIVE EDITING LEVELS）\n有时候你会进入所谓的 “递归编辑”。递归编辑状态由位于状态栏的方括号所指 示，其中包含了用小括号来指明的模式名称。比如说，你有时可能会看到 [(Fundamental)]，而不是 (Fundamental)。【比如在用 M-% 进行交互式替换的 时候你又用了 C-s 进行搜索，这时替换模式并没有结束，但你又进入了搜索模式， 这就是所谓的递归编辑。】\n\n离开递归编辑可以用 ESC ESC ESC。这是一个最通用的 “离开” 命令，你甚至可 以使用它来关掉多余的窗格，或者离开小缓冲。\n\n> 输入 M-x 进入小缓冲；然后输入 ESC ESC ESC 离开。\n你不能用 C-g 退出递归编辑，因为 C-g 的作用是取消 “本层递归编辑之内” 的 命令和其参数（arguments）。\n\n# 18 获得更多帮助（GETTING MORE HELP）\n本快速指南的目的仅仅是帮助你在 Emacs 的海洋里下水，不至于束手无策望洋兴 叹。有关 Emacs 的话题可谓汗牛充栋，这里自然是难尽万一。不过 Emacs 很理 解你求知若渴的心情，因为它提供的强大功能实在是太多了。为此，Emacs 提供 了一些命令来查看 Emacs 的命令文档，这些命令都以 CONTROL-h 开头，这个字 符也因此被称为 “帮助（Help）字符”。\n\n要使用帮助（Help）功能，请先输入 C-h，然后再输入一个字符以说明你需要什 么帮助。如果你连自己到底需要什么帮助都不知道，那么就输入 C-h ?，Emacs 会告诉你它能提供了哪些帮助。如果你按了 C-h 又想反悔，可以用 C-g 取消。\n\n（如果你按 C-h 之后没有任何帮助信息显示出来，那么试试 F1 键或者 M-x help <Return> 。）\n\n最基本的帮助功能是 C-h c。输入 C-h c 之后再输入一个组合键，Emacs 会给出 这个命令的简要说明。\n\n> 输入 C-h c C-p。\n显示的消息应该会是这样：\n\nC-p runs the command previous-line\n这条消息显示了 C-p 命令对应的函数名。命令的功能由函数完成，所以函数名 本身也可以被看成是最简单的文档――至少对于你已经学过的命令来说，它们的函 数名足以解释它们的功能了。\n\n多字符命令一样可以用 C-h c 来查看。\n\n想得到更多的信息，请把 C-h c 换成 C-h k 试试看。\n\n> 输入 C-h k C-p。\n上面的命令会新打开一个 Emacs 窗格以显示函数的名称及其文档。你读完之后可 以用 C-x 1 关掉这个帮助窗格。当然你并不需要立即这样做，你完全可以先在编 辑窗格里做点别的事情，然后再关掉帮助窗格。\n\n还有一些其它有用的 C-h 命令：\n\n**C-h f        解释一个函数。需要输入函数名。**\n\n> 试试看，输入 C-h f previous-line <Return>。\nEmacs 会给出它所知道的所有有关 “实现 C-p 命令功能的函数” 的信息。\n\n**C-h v 用来显示 Emacs 变量的文档。Emacs 变量可以被用来 “定制 Emacs 的行 为”。同样，你需要输入变量的名称。**\n\n**C-h a 相关命令搜索（Command Apropos）。 输入一个关键词然后 Emacs 会列出所有命令名中包含此关键词 的命令。**\n这些命令全都可以用 M-x 来启动。对于某些命令来说， 相关命令搜索还会列出一两个组合键。\n\n> 输入 C-h a file <Return>。\nEmacs 会在另一个窗格里显示一个 M-x 命令列表，这个列表包含了所有名称中含 有 “file” 的命令。你可以看到像 “C-x C-f” 这样的组合键显示在“find-file” 这样的命令名的旁边。\n\n> 用 C-M-v 来回滚动 help 窗格，多试几次。\n> 输入 C-x 1 来删除 help 窗格。\n\n**C-h i 阅读手册（也就是通常讲的 Info）。**\n这个命令会打开一个称为 “*info*” 的特殊缓冲区，在那里， 你可以阅读安装在系统里的软件包使用手册。要读 Emacs 的使用手册，按 m emacs <Return> 就可以了。如果你之前从没用过 Info 系统，那么请按“?”，Emacs 会带你进入 Info 的使用指南。在看完本快速指南之后，Emacs Info 会成为你的主要参考文档。","source":"_posts/Emacs 快速简明指南.md","raw":"---\ntitle: Emacs 快速简明指南\ntags:\n  - Emacs\ncategories: 收集\ndescription: <center>简单整理了下 Emacs 指令，以备查阅。</center>\nabbrlink: 1446338271\ndate: 2017-11-30 15:30:00\n---\n简单整理了下 Emacs 指令，以备查阅。\n\nEmacs 键盘命令通常包含 CONTROL 键（有时候以 CTRL 或 CTL 来标示）和 META 键（有时候用 EDIT 或 ALT 来标示）。为了避免每次都要写出全名，我们 约定使用下述缩写：\n\nC-<chr>  表示当输入字符 <chr> 时按住 CONTROL 键。\n         因此 C-f 就表示：按住 CONTROL 键再输入 f。\n\nM-<chr>  表示当输入字符 <chr> 时按住 META（或 EDIT 或 ALT）键。\n         如果你的键盘上没有 META 、EDIT 或 ALT 键，用下述方法也等效：\n         先按一下 ESC 键然后放开，再输入 <chr>。我们用 <ESC> 来表示\n         ESC 键。\n\n重要提示：要退出 Emacs，请用 C-x C-c（两个连续的组合键）。 要退出一个正在运行中的命令，请用 C-g。 \n\n\n# 1 小结（SUMMARY）\n以下命令在翻页浏览时相当有用：\n\n**C-v     向前移动一屏\nM-v     向后移动一屏\nC-l     重绘屏幕，并将光标所在行置于屏幕的中央\n        （注意是 CONTROL-L，不是 CONTROL-1）**\n> 找到光标，留意其附近的文字，然后输入 C-l。\n找找光标在哪里，你会发现其附近的文字与之前相同，位置却变为屏幕的中心。 如果你再次输入 C-l ，附近的文字将移动到屏幕的顶端。再次输入 C-l ， 文字将移动到底端。\n\n如果你的键盘上有 PageUp 和 PageDn，也可以用这两个键来滚屏。不过使用 C-v 和 M-v 的效率要更高一些。\n\n# 2 基本的光标控制（BASIC CURSOR CONTROL）\n整屏的移动很有用，但是如何在文字中精确定位呢？\n\n有几种方式可以选择。用方向键当然可以，不过更有效率的方法是保持双手位于 主键盘区，然后使用 C-p 、 C-b 、 C-f 和 C-n 这四个命令。它们的功能和方 向键是一样的，如下图所示:\n\n                             上一行 C-p\n                                  :\n                                  :\n            向左移 C-b .... 目前光标位置 .... 向右移 C-f\n                                  :\n                                  :\n                             下一行 C-n\n> 用 C-n 或 C-p 将光标移到上图的中央。\n  按 C-l，整幅图会被显示在屏幕的中央。\n“P N B F” 四个字母分别代表了四个词，用这四个词记忆这些组合键会更容易： P 代表 previous（上一行），N 代表 next（下一行），B 代表 backward（回 退），而 F 则代表 forward（前进）。这些组合键今后将与你形影不离。\n\n每行文字都以一个 “换行符” 结束，“换行符”把行与行区分开来。（通常情况下， 一个文件的最后一行会有一个换行符，但是 Emacs 不强制要求这一点。）\n\n> 在一行的行头输入 C-b。\n光标应该会移动到前一行的行尾，因为光标在回退过程中越过了换行符。\n\n同样 C-f 也可以像 C-b 一样越过换行符。\n\n> 连按几次 C-b，感受一下光标的移动。\n然后按几次 C-f 回到本行的行尾。 再按一次 C-f，光标会移动到下一行。\n\n当你移动光标穿越屏幕的上下边界时，在边界外的文字会移动到屏幕内，这称为 “滚动”（scrolling）。滚动使得光标可以被移动到文字中的任何位置，并且还 不会让光标跑到屏幕外边去。\n\n> 用 C-n 将光标下移，一直越过屏幕边界，同时观察发生了什么变化。\n如果你嫌一个字符一个字符地挪光标太慢，你还可以一个词一个词地跳。M-f (META-f) 可以将光标往前移动一个词，而 M-b 则是往后移。【这里的 “词” 指 英文单词，对中文来说，则是指移动到下一个标点符号。】\n\n> 试试 M-f 和 M-b。\n如果光标停在一个词的中间，M-f 会移动到这个词的末尾。如果光标处于词与词 之间的空白处，M-f 会移动到下一个词的末尾。M-b 的功能类似，只是方向相反。\n\n> 按几次 M-f 和 M-b，中间夹杂一些 C-f 和 C-b。\n你可以观察到 M-f 和 M-b 在不同位置上所表现出来的不同行为。\n\n请注意 C-f 、C-b 和 M-f 、M-b 两对之间的类比关系。通常的惯例是：META 系 列组合键用来操作 “由语言定义的单位（比如词、句子、段落）”，而 CONTROL 系列组合键用来操作 “与语言无关的基本单位（比如字符、行等等）”。\n\n类似的惯例在 “行” 与“句子”之间也同样适用：C-a 和 C-e 可以将光标移动到 “一行”的头部和尾部；而 M-a 和 M-e 则将光标移动到 “一句” 的头部和尾部。\n\n> 按两次 C-a，再按两次 C-e。\n按两次 M-a，再按两次 M-e。\n\n想一想为什么重复的 C-a 命令会没有作用，而重复的 M-a 命令则会让光标不断 地回退到上一个句子。虽然这个类比规律并不严格，但是很自然。\n\n光标停留的位置也可以称作 “点位”（point）。或者干脆说，光标指示出了屏幕 上“点位” 在文本中的位置。\n\n这里对简单的光标移动命令做一个总结，其中也包括了整词和整句的移动：\n\n**C-f     向右移动一个字符\nC-b     向左移动一个字符**\n\n**M-f     向右移动一个词【对中文是移动到下一个标点符号】\nM-b     向左移动一个词【对中文是移动到上一个标点符号】**\n\n**C-n     移动到下一行\nC-p     移动到上一行**\n\n**C-a     移动到行首\nC-e     移动到行尾**\n\n**M-a     移动到句首\nM-e     移动到句尾**\n\n> 把上面所有的命令都练习几次，这些可都是最常用的命令。\n这里还要介绍两个重要的光标移动命令：M-<（META 小于号）可以将光标移动到 所有文字的最开头；M-> （META 大于号）可以将光标移动到所有文字的最末尾。\n\n注意，在大部分键盘上，小于号（<）需要用上档键（Shift）来输入，所以在这 些键盘上你应该用 Shift 键来输入 M-<，如果不按 Shift 键，你输入的会是 M-comma（META 逗号）。\n\n\n大部分的 Emacs 命令接受数字参数，并且对于多数命令而言，这些数字参数的作 用是指定命令的重复次数。为一个命令指定数字参数（也就是重复次数）的方法 是：先输入 C-u，然后输入数字作为参数，最后再输入命令。如果你有 META （或 EDIT 或 ALT）键，那么还有另一种办法：按住 META 键不放，然后输入数字。不 过我们还是建议你用 C-u，因为它在任何终端机上都能用。这种数字参数也称为 “前缀参数”，意思是说这个参数是先于使用它的命令而输入的。\n\n举例来说， C-u 8 C-f 会向前移动 8 个字符。\n\n> 为 C-n 或者 C-p 指定一个数字参数，这样你可以只用一个命令就把光标移动\n到本行的附近。\n\n虽然大部分命令把数字参数解释为其重复次数，但是也有些命令例外，它们将数 字参数另做它用。比如有些命令（我们目前还没学到）仅仅将前缀参数作为一个 标志――只要给出有一个前缀参数，不管其值为何，它都会改变命令的功能。\n\n而 C-v 和 M-v 则属于另一种类型的例外。当给定一个参数时，它们将滚动你指 定的 “行数”，而不是 “屏数”。举例来说，C-u 8 C-v 将文本向下滚动 8 行。\n\n> 现在试试看，输入 C-u 8 C-v。\n这个命令应该已经将文字向上滚动了 8 行。如果你想将它再次地向下滚动，你可 以给定一个参数然后执行 M-v。\n\n如果你正在使用图形界面，比如 X 或者微软的 Windows，那么在 Emacs 窗 口的一边应该有一个长方形的区域叫 “滚动条”。你可以用鼠标操纵滚动条来滚动 文字。\n\n如果你的鼠标有滚轮的话，你也可以使用滚轮来滚动。\n\n# 3 如果 EMACS 失去响应（IF EMACS STOPS RESPONDING）\n如果 Emacs 对你的命令失去响应，你可以用 C-g 来安全地终止这条命令。C-g 也可以终止一条执行过久的命令。\n\n**C-g 还可以取消数字参数和只输入到一半的命令。**\n\n> 输入 C-u 100 设定一个值为 100 的数字参数，然后按 C-g。\n现在再按 C-f，光标应该只会移动一个字符，因为你已经用 C-g 取消了参数。\n\n如果你不小心按了一下 <ESC>，你也可以用 C-g 来取消它。 【这个说法似乎有问题，因为按照这个按键顺序输入的应该是 C-M-g。 取消 <ESC> 的正确做法是再连按两次 <ESC>。】\n\n# 4 被禁用的命令（DISABLED COMMANDS）\n有一些 Emacs 命令被 “禁用” 了，以避免初学者在不了解其确切功能的情况下误 用而造成麻烦。\n\n如果你用到了一个被禁用的命令，Emacs 会显示一个提示消息，告诉你这个命令 到底是干什么的，询问你是否要继续，并在得到你的肯定之后再执行这命令。\n\n如果你真的想用这条命令，在 Emacs 询问你的时候应该按空格。一般来说，如果 你不想用，就按 “n”。\n\n> 试试 C-x C-l （这是一个被禁用的命令）\n然后用 n 来回答询问。\n\n# 5 窗格（WINDOWS）\nEmacs 可以有多个 “窗格”，每个窗格显示不同的文字。后面会介绍怎么对付多个窗格，现在我们先学会如何关掉多余的窗格。其实也很简单：\n\n**C-x 1 只保留一个窗格（也就是关掉其它所有窗格）。**\n\n也就是先按 CONTROL-x 然后再按 1。C-x 1 会保留光标所在的窗格，并将其扩大到整个屏幕，同时关掉所有其它的窗格。\n\n> 把光标移到本行然后输入 C-u 0 C-l。\n> 输入 C-h k C-f。观察当一个新窗格出现时当前窗格（用来显示C-f 命令的文档）是如何缩小的。\n\n> 输入 C-x 1 关掉文档窗格。\n有一系列命令是以 CONTROL-x 开始的，这些命令许多都跟 “窗格、文件、缓冲区 【缓冲区（buffer）会在后文详细介绍】” 等等诸如此类的东西有关，其中有些 命令可能包含了 2 个、3 个或者 4 个字符。\n\n# 6 插入与删除（INSERTING AND DELETING）\n插入文字很简单，直接敲键盘就可以了。普通的字符，比如 A、7、* 等等，会 随着你的输入而插入。要插入一个换行符，输入 <Return>（这个键在键盘上有 时会被标注成 “Enter”）。\n\n你可以用 <DEL> 来删除光标左边的字符，这个键通常被标注为 “Backspace”――跟 你在 Emacs 之外的用法应该一样，删除最后一个输入的字符。\n\n你的键盘上可能有另外一个键，标注着 <Delete>，但那个不是我们所说的 <DEL>。\n\n如果一行文字很长、超出了窗格的宽度，显示不下的部分会在紧邻的下一行继续 显示。如果你使用的是图形界面，文本区域两边的狭窄区域（左右 “边缘”）会出 现小小的转弯箭头，表明这是某一行的接续显示。如果你使用的是文本终端，接 续显示由屏幕最右边一列的一个反斜线来表示。\n\n好，现在你应该已经掌握了最基本的的文本插入和修改功能，其实删除还可以 “以词为单位”进行，下面是一个关于 “删除” 操作的小结：\n\n**<DEL>        删除光标前的一个字符\nC-d          删除光标后的一个字符**\n\n**M-<DEL>      移除光标前的一个词\nM-d          移除光标后的一个词**\n\n**C-k          移除从光标到“行尾”间的字符\nM-k          移除从光标到“句尾”间的字符**\n【可能你已经注意到了 “删除（delete）” 和“移除（kill）”的用词区别，后文会有详细说明。】\n\n注意 “<DEL> 和 C-d” 还有 “M-<DEL> 和 M-d” 是根据前述惯例从 C-f 和 M-f 衍生 出来的（其实 < DEL > 不是控制字符，我们先忽略这一点）。C-k 和 M-k 的关系在 某种程度上与 C-e 和 M-e 一样――如果把 “一行” 和“一句”作一个类比的话。\n\n你也可以用一种通用的办法来移除缓冲区里的任何一部分：首先把光标移动到你 想要移除的区域的一端，然后按 C-<SPC>（<SPC > 指空格）【注意，C-<SPC> 往 往被中文用户设定成输入法热键，如果这样，C-<SPC> 就被系统拦截而无法传递 给 Emacs 了，在这种情况下可以使用 C-@。】，然后将光标移动到你准备移除的 文字的另一端。这个时候， Emacs 会高亮光标和你按下 C-<SPC> 之间的文本。 最后，按下 C-w 。这样就可以把位于这两点之间的所有文字移除了。\n\n> 移动光标到上一段开头的“你”字。\n> 输入 C-<SPC> 。Emacs 应该会在屏幕的下方显示一个“Mark set”的消息。\n> 移动光标到第二行中的“端”字。\n> 输入 C-w，从“你”开始到“端”之前的文字被全部移除。\n\n注意,“移除（kill）”和 “删除（delete）” 的不同在于被移除的东西可以被重新 插入（在任何位置），而被删除的就不能使用相同的方法重新插入了（不过可以 通过撤销一个删除命令来做到，后文会提到）。【实际上，移除掉的东西虽然看 起来 “消失” 了，但实际上被 Emacs 记录了下来，因此还可以找回来；而删除掉 的东西虽然也可能还在内存里，但是已经被 Emacs“抛弃”了，所以就找不回来 了。】重新插入被移除的文字称为“召回（yank）”。一般而言，那些可能消除很 多文字的命令会把消除掉的文字记录下来（它们被设定成了“可召回”），而那些 只消除一个字符或者只消除空白的命令就不会记录被消除的内容（自然你也就无 法召回了）。\n\n> 移动光标到一非空白行的行头，然后输入 C-k 移除那一行上的文字。\n> 再次 C-k，你可以看到它移除了跟在那一行后面的换行符。\n\n注意，单独的 C-k 会把一行的内容移除，而第二个 C-k 则会移除换行符，并使 其后所有的行都向上移动。C-k 处理数字参数的方式很特别，它会把参数指定的 那么多行连同其后的换行符一起移除，而不仅仅是重复 C-k 而已。比如 C-u 2 C-k 会把两行以及它们的换行符移除；而如果只是输入 C-k 两次显然不是这个结果。\n\n重新插入被移除的文字恢复的动作称为 “召回（yanking）”。（就好像把别人从你身边 移走的东西又猛力地拉回来。）你可以在你删除文字的地方召回，也可以在别的 地方召回，还可以多次召回同样的文字以得到它的多个拷贝。很多其它的编辑器 把移除和召回叫做“剪切” 和“粘贴” （详情可见 Emacs 使用手册里的术语表）。\n\n召回的命令是 C-y。它会在光标所在处插入你最后移除的文字。\n\nC-y 可以召回最近一次移除的内容，那如何召回前几次移除的内容呢？它们当然 没有丢，你可以用 M-y 来召回它们。在用 C-y 召回最近移除的文字之后，紧接 着再按 M-y 就可以召回再前一次被移除的内容，再按一次 M-y 又可以召回再上 一次的…… 连续使用 M-y 直到找到你想要召回的东西，然后什么也不用做，继续 编辑就行了。\n\n如果连续按 M-y 很多次，你可能会回到起始点，也就是最近移除的文字。 【看得出这实际上是一个环。】\n\n# 7 撤销（UNDO）\n如果你修改了一段文字，又觉得改得不好，可以用 undo 命令进行撤销：C-/。\n\n通常 C-/ 会消除一个命令所造成的所有改变；如果你在一行中连续多次地使用 C-/，你会把以前的命令也依次撤销。\n\n但是有两个例外： 1） 没有改变文字的命令不算（包括光标移动命令和滚动命令） 2） 从键盘输入的字符以组为单位――每组最多 20 个字符――来进行处理。 （这是为了减少你在撤销 “插入文字” 动作时需要输入 C-/ 的次数）\n\n> 用 C-k 将这一行移除，然后输入 C-/ ，它会再次出现。\nC-_ 也是撤销命令；它的作用跟 C-/ 一样，但是它比较容易多次输入。在 某些终端上，输入 C-/ 实际上向 Emacs 发送的是 C-_ 。 另外， C-x u 和 C-/ 完全一样，但是按起来有些麻烦。\n\n数字参数对于 C-/ 、 C-_ 和 C-x u 的意义是执行撤销的重复次数。\n\n# 8 文件（FILE）\n想保存工作成果就要记得存盘，否则一旦退出 Emacs 你编辑的文字就会丢失。要 存盘，就要在编辑前 “寻找” 到一个存盘文件。（这个过程通常也被称为“访问” 文件。）\n\n寻找到一个文件意味着你可以在 Emacs 里查看这个文件的内容。从许多角度看， 这就等于你在直接编辑这个文件，只是你所做的修改只有在 “存盘” 的时候才会 被写入文件。也正因为如此，你可以丢弃一个写到一半的文件而不必把这个残缺 文件也保存到计算机上。在存盘的时候，Emacs 会把存盘前的文件重命名保存， 以防你改完之后又想反悔。\n\n在屏幕的下方，你应该能够看到头部有短线 “-” 的一行，行首通常是一些诸如 “ -:— TUTORIAL.cn” 的文字，这些文字代表了你当前正在访问的文件。比如你现 在正在访问的文件是对 Emacs 快速指南的一份临时拷贝，叫做“TUTORIAL.cn”。 每当 Emacs 寻找到一个文件，文件名就会出现在这个位置。\n\n寻找文件的命令有一个特点，那就是你必须给出文件名。我们称这个命令 “读入 了一个参数”（在这里，这个参数显然就是文件名）。在你输入这条命令之后：\n\n**C-x C-f   寻找一个文件**\nEmacs 会提示你输入文件名。你输入的文件名会出现在屏幕最底端的一行，这一 行被称为小缓冲（minibuffer），在小缓冲里你可以使用通常的 Emacs 编辑命令 来编辑文件名。\n\n在小缓冲里输入文件名（其实输入其它东西也一样）时可以用 C-g 取消。\n\n> 输入 C-x C-f，然后输入 C-g\n这会关掉小缓冲，同时也会取消使用小缓冲的 C-x C-f 命令。 当然了，你也没有找任何文件。\n\n用 <Return> 结束文件名的输入。之后，小缓冲会消失，C-x C-f 将会去寻找你 指定的文件。小缓冲在 C-x C-f 命令结束之后也会消失。\n\n文件被显示在了屏幕上，你可以开始编辑了。存盘用这条命令：\n\n**C-x C-s   储存这个文件**\n这条命令把 Emacs 中的文字存储到文件中。第一次存盘的时候 Emacs 会将原文 件重命名以备份。重命名的规则通常是在原文件名之后添加一个 “~” 字符。 【对许多人来说，这是一个烦人的特性，关掉文件备份可以用如下命令： M-x customize-variable <Return> make-backup-files <Return>】\n\n存盘结束后，Emacs 会显示写入文件的文件名。你最好养成经常存盘的习惯，这 可以减少系统崩溃和死机给你带来的损失（也可参见下面的 “自动保存” 一节）。\n\n> 输入 C-x C-s TUTORIAL.cn <Return> 。\n这将会把该指南保存为一个名为 TUTORIAL.cn 的文件，并且在屏幕的下方显 示一条消息：“Wrote …TUTORIAL.cn”。\n\n你不但可以寻找一个已有的文件来查看或编辑，还可以寻找一个不存在的文件。 实际上这正是 Emacs 创建新文件的方法：找到不存在的新文件。事实上，只有 在存盘的时候，Emacs 才会真正创建这个文件。而在这之后的一切就跟编辑一个 已有文件没有区别了。\n\n# 9 缓冲区（BUFFER）\n你可以用 C-x C-f 找到并打开第二个文件，但第一个文件仍然在 Emacs 中。要 切回第一个文件，一种办法是再用一次 C-x C-f。这样，你就可以在 Emacs 中同 时打开多个文件。\n\nEmacs 把每个编辑中的文件都放在一个称为 “缓冲区（buffer）” 的地方。每寻 找到一个文件，Emacs 就在其内部开辟一个缓冲区。用下面的命令可以列出当前 所有的缓冲区：\n\n**C-x C-b 列出缓冲区**\n\n> 现在就试一下 C-x C-b\n观察一下缓冲区是如何被命名的，它很可能跟与其对应的文件同名。实际上，一 个 Emacs 窗格里的任何文字都是某个缓冲区的一部分。\n\n> 输入 C-x 1 离开缓冲区列表\n不管存在多少缓冲区，任何时候都只能有一个 “当前” 缓冲区，也就是你正在编 辑的这个。如果你想编辑其它的缓冲区，就必须 “切换” 过去。上面讲过，用 C-x C-f 是一种办法。不过还有一个更简单的办法，那就是用 C-x b。用这条命 令，你必须输入缓冲区的名称。\n\n> 通过输入 C-x C-f foo <Return> 创建一个名为“foo”的文件。\n然后输入 C-x b TUTORIAL.cn <Return> 回到这里。\n\n大多数情况下，缓冲区与跟其对应的文件是同名的（不包括目录名），不过这也 不是绝对的。用 C-x C-b 得到的缓冲区列表总是显示缓冲区名。\n\n缓冲区未必有对应文件。显示缓冲区列表的缓冲区（叫做 “*Buffer List*”）就 是这样。这个 TUTORIAL.cn 缓冲区起初没有对应的文件，但是现在有了，因为 在前一节你输入了 C-x C-s ， 将它保存成了一个文件。\n\n“*Messages*” 缓冲区也没有对应文件，这个缓冲区里存放的都是在 Emacs 底部 出现的消息。\n\n> 输入 C-x b *Messages* <Return> 瞅瞅消息缓冲区里都有什么东西。\n然后再输入 C-x b TUTORIAL.cn <Return> 回到这里。\n\n如果你对某个文件做了些修改，然后切换到另一个文件，这个动作并不会帮你把 前一个文件存盘。对第一个文件的修改仍然仅存在于 Emacs 中，也就是在它对 应的缓冲区里。并且，对第二个文件的修改也不会影响到第一个文件。这很有用， 但也意味着你需要一个简便的办法来保存第一个文件的缓冲区。先切换回那个缓 冲区，再用 C-x C-s 存盘，太麻烦了。你需要一个更简便的方法，而 Emacs 已 经为你准备好了：\n\n**C-x s   保存多个缓冲区\nC-x s 会找出所有已被修改但尚未存盘的缓冲区，然后向你逐个询问：是否需要存盘？**\n\n> 插入一行文字，然后输入 C-x s。\n它应该会问你，是否要储存名为 TUTORIAL.cn 的缓冲区？ 按 “y” 告诉它你想存盘。\n\n# 10 命令集扩展（EXTENDING THE COMMAND SET）\nEmacs 的命令就像天上的星星，数也数不清。把它们都对应到 CONTROL 和 META 组合键上显然是不可能的。Emacs 用扩展（eXtend）命令来解决这个问题，扩展 命令有两种风格：\n\n**C-x     字符扩展。  C-x 之后输入另一个字符或者组合键。\nM-x     命令名扩展。M-x 之后输入一个命令名。**\n很多扩展命令都相当有用，虽然与你已经学过的命令比起来，他们可能不那么常 用。我们早已经见过一些扩展命令了，比如用 C-x C-f 寻找文件和用 C-x C-s 保存文件；退出 Emacs 用的 C-x C-c 也是扩展命令。（不用担心退出 Emacs 会 给你带来什么损失，Emacs 会在退出之前提醒你存盘的。）\n\n如果你使用图形界面，你不需要任何特殊的命令来切换 Emacs 和其他应用程序。 你可以使用鼠标或者窗口管理器的命令。然而，如果你使用只能同时显示一个应 用程序的文本终端，你需要 “挂起” Emacs ，以切换到其他的应用程序。\n\nC-z 可以暂时离开 Emacs――当然，你还可以再回来。在允许 C-z 的系统中，C-z 会把 Emacs“挂起”，也就是说，它会回到 shell 但不杀死 Emacs 的进程。在常用的 shell 中，通常可以用 “fg” 或者 “%emacs” 命令再次回到 Emacs 中。\n\n你最好在打算退出登陆的时候再用 C-x C-c。在把 Emacs 当做一个临时的编辑 器的时候（比如被一个邮件处理程序调用），也可以用 C-x C-c 退出。\n\nC-x 的扩展命令有很多，下面列出的是你已经学过的：\n\n**C-x C-f         寻找文件。\nC-x C-s         保存文件。\nC-x C-b         列出缓冲区。\nC-x C-c         离开 Emacs。\nC-x 1           关掉其它所有窗格，只保留一个。\nC-x u           撤销。**\n\n用命令名扩展的命令通常并不常用，或只用在部分模式下。比如 replace-string（字符串替换）这个命令，它会把一个字符串替换成另一个。在 输入 M-x 之后，Emacs 会在屏幕底端向你询问并等待你输入命令名。如果你想 输入 “replace-string”，其实只需要敲“repl s<TAB>” 就行了，Emacs 会帮你自动补齐。输入完之后按 <Return> 提交。\n\n字符串替换命令需要两个参数――被替换的字符串和用来替换它的字符串。每个参数的输入都以换行符来结束。\n\n\n# 11 自动保存（AUTO SAVE）\n如果你已经修改了一个文件，但是还没来得及存盘你的计算机就罢工了，那么你 所做的修改就很可能会丢失。为了避免这样的不幸发生，Emacs 会定期将正在编 辑的文件写入一个 “自动保存” 文件中。自动保存文件的文件名的头尾各有一个 “#”字符，比如你正在编辑的文件叫“hello.c”，那么它的自动保存文件就叫 “#hello.c#”。这个文件会在正常存盘之后被 Emacs 删除。\n\n所以，假如不幸真的发生了，你大可以从容地打开原来的文件（注意不是自动保 存文件）然后输入 M-x recover file <Return> 来恢复你的自动保存文件。在 提示确认的时候，输入 yes<Return>。\n\n# 12 回显区（ECHO AREA）\n如果 Emacs 发现你输入多字符命令的节奏很慢，它会在窗格的下方称为 “回显区” 的地方给你提示。回显区位于屏幕的最下面一行。\n\n# 13 状态栏（MODE LINE）\n位于回显区正上方的一行被称为 “状态栏”。状态栏上会显示一些信息，比如：\n\n-:**- TUTORIAL.cn 63% L749 (Fundamental)\n\n状态栏显示了 Emacs 的状态和你正在编辑的文字的一些信息。\n\n你应该知道文件名的意思吧？就是你找到的那个文件嘛。-NN%– 显示的是光标在 全文中的位置。如果位于文件的开头，那么就显示 –Top– 而不是 –00%–；如 果位于文件的末尾，就显示 –Bot–。如果文件很小，一屏就足以显示全部内容， 那么状态栏会显示 –All–。\n\n“L” 和其后的数字给出了光标所在行的行号。\n\n最开头的星号（*）表示你已经对文字做过改动。刚刚打开的文件肯定没有被改动 过，所以状态栏上显示的不是星号而是短线（-）。\n\n状态栏上小括号里的内容告诉你当前正在使用的编辑模式。缺省的模式是 Fundamental，就是你现在正在使用的这个。它是一种 “主模式”。\n\nEmacs 的主模式林林总总。有用来编辑程序代码的――比如 Lisp 模式；也有用 来编辑各种自然语言文本的――比如 Text 模式。任何情况下只能应用一个主模 式，其名称会显示在状态栏上，也就是现在显示 “Fundamental” 的地方。\n\n主模式通常会改变一些命令的行为。比方说，不管编辑什么语言的程序代码，你 都可以用一个相同的命令来添加注释。但是在不同的语言中注释的语法往往是不 同的，这时不同的主模式就会用各自不同的语法规则来添加注释。主模式都是可 以用 M-x 启动的扩展命令，M-x fundamental-mode 就可以切换到 Fundamental 模式。\n\n编辑自然语言文本――比如现在――应该用 Text 模式。\n\n> 输入 M-x text-mode <Return>。\n别担心，什么都没变。不过细心一些可以发现，M-f 和 M-b 现在把单引号（'） 视为词的一部分了。而在先前的 Fundamental 模式中，M-f 和 M-b 都将单引号 视为分隔单词的符号。\n\n主模式通常都会搞一些类似的小动作，因为很多命令其实完成的是 “相同的工 作”，只是在不同环境下会有不同的工作方式而已。【所谓 “求同存异”，在 Emacs 里得到了很好的体现】\n\n用 C-h m 可以查看当前主模式的文档。\n\n> 把光标移动到下一行。\n> 用 C-l C-l 将本行带到屏幕的最上方。\n> 输入 C-h m，看看 Text 模式与 Fundamental 模式有哪些不同。\n> 输入 C-x 1 关掉文档窗格。\n\n主模式之所以称之为 “主（major）” 模式，是因为同时还有“辅模式”（minor mode）存在。辅模式并不能替代主模式，而是提供一些辅助的功能。每个辅模式 都可以独立地开启和关闭，跟其它辅模式无关，跟主模式也无关。所以你可以不 使用辅模式，也可以只使用一个或同时使用多个辅模式。\n\n有一个叫做自动折行（Auto Fill）的辅模式很有用，特别是在编辑自然语言文本 的时候。启用自动折行后，Emacs 会在你打字超出一行边界时自动替你换行。\n\n用 M-x auto-fill-mode <Return> 启动自动折行模式。再用一次这条命令，自 动折行模式会被关闭。也就是说，如果自动折行模式没有被开启，这个命令会开 启它；如果已经开启了，这个命令会关闭它。所以我们说，这个命令可以用来 “开关（toggle）” 模式。\n\n> 现在输入 M-x auto-fill-mode <Return>。然后随便敲点什么，直到你看到它\n分成两行。你必须敲一些空格，因为 Auto Fill 只在空白处进行断行。 【输入空格对英文来说是必须的，而对中文则不必。】\n\n行边界通常被设定为 70 个字符【这里指英文字符】，你可以用 C-x f 命令配合 数字参数来重新设定它。\n\n> 输入 C-x f 并传递参数 20： C-u 2 0 C-x f。\n然后输入一些文字，观察 Emacs 的自动折行动作 最后再用 C-x f 将边界设回 70。\n\n如果你在段落的中间做了一些修改，那么自动折行模式不会替你把整个段落重新 折行，你需要用 M-q 手动折行。注意，光标必须位于你需要折行的那一段里。\n\n> 移动光标到前一段中，然后输入 M-q。\n\n# 14 搜索（SEARCHING）\nEmacs 可以向前或向后搜索字符串（“字符串” 指的是一组连续的字符）。搜索命 令是一个移动光标的命令：搜索成功后，光标会停留在搜索目标出现的地方。\n\nEmacs 的搜索命令是 “渐进的（incremental）”。意思是搜索与输入同时进行： 你在键盘上一字一句地输入搜索词的过程中，Emacs 就已经开始替你搜索了。\n\n**C-s 是向前搜索，C-r 是向后搜索。**\n\n在按下 C-s 之后，回显区里会有 “I-search” 字样出现，表明目前 Emacs 正处 于 “渐进搜索” 状态，并等待你输入搜索字串。按 <Return> 可以结束搜索。\n\n> 输入 C-s 开始一个搜索。注意敲慢一点，一次输入一个字符。\n慢慢输入 “cursor” 这个词，每敲一个字都停顿一下并观察光标。 现在你应该已曾经找到 “cursor” 这个词了。\n\n> 再按一次 C-s，搜索下一个“cursor”出现的位置。\n> 现在按四次 <DEL> ，看看光标是如何移动的。\n> 敲 <Return> 结束搜索。\n\n看仔细了么？在一次渐进式搜索中，Emacs 会尝试跳到搜索目标出现的位置。要 跳到下一个命中位置，就再按一次 C-s。如果找不到目标，Emacs 会发出 “哔” 的一声，告诉你搜索失败。在整个过程中，都可以用 C-g 来终止搜索。【你会发 现 C-g 会让光标回到搜索开始的位置，而 <Return> 则让光标留在搜索结果上， 这是很有用的功能。】\n\n在渐进式搜索中，按 <DEL> 会 “撤回” 到最近一次搜索的命中位置。如果之前没 有一个命中， <DEL> 会抹去搜索字符串中的最后一个字符。比如你已经输入了 “c”，光标就停在 “c” 第一次出现的位置，再输入 “u”，光标停在“cu” 第一次出现 的位置，这时再按 <DEL> ，“u”就从搜索字串中消失了，然后光标会回到 “c” 第 一次出现的位置。\n\n另外，如果你在搜索的时候输入了 control 或者 meta 组合键的话，搜索可能会 结束。（也有例外，比如 C-s 和 C-r 这些用于搜索的命令。）\n\n前面说的都是 “向下” 搜索，如果想 “向上” 搜索，可以用 C-r。C-r 与 C-s 相比除了搜索方向相反之外，其余的操作都一样。\n\n# 15 多窗格（MULTIPLE WINDOWS）\nEmacs 的迷人之处很多，能够在屏幕上同时显示多个窗格就是其中之一。\n\n连续使用 C-x o 可以遍历所有窗格。“被选中的窗格”，也就是绝大多数的编辑 操作所发生的地方，是在你不打字时闪烁光标的那个窗格。其他的窗格有它们自 己的光标位置； 如果你在图形界面下运行 Emacs ，这些光标是镂空的长方形。\n\n当你在一个窗格中编辑，但用另一个窗格作为参考的时候，C-M-v 是很有用的命 令。无需离开被选中的窗格，你就可以用 C-M-v 命令滚动另外一个窗格中的文 字。【比如翻译和校对就很适合用这种方式进行。】\n\nC-M-v 是一个 CONTROL-META 组合键。如果你有 META （或 Alt）键的话，可以 同时按住 CONTROL 和 META 键并输入 v。CONTROL 和 META 键先按哪个都可以， 因为它们只是用来 “修饰（modify）” 你输入的字符的。\n\n如果你并没有 META 键，你也可以用 ESC 来代替，不过这样的话就要注意按键顺 序了：你必须先输入 ESC ，然后再输入 CONTROL-v。CONTROL-ESC v 是没用的， 因为 ESC 本身是一个字符键，而不是一个修饰键（modifier key）。\n\n> （在上方窗格里）输入 C-x 1 关掉下方窗格。\n（如果你在下方的窗格里输入 C-x 1，那么就会关掉上方的窗格。你可以把这个 命令看成是 “只保留一个窗格”――就是我们正在编辑的这个。）\n\n不同的窗格可以显示不同的缓冲区。如果你在一个窗格里用 C-x C-f 打开了一个 文件，另一个窗格并不会发生什么变化。任何一个窗格里都可以用来打开文件。\n\n用下面的方法可以在一个新开窗格里打开文件：\n\n> 输入 C-x 4 C-f，紧跟着输入一个文件名，再用 <Return> 结束。\n可以看到你指定的文件出现在下方的窗格中，同时光标也跳到了那里。\n\n> 输入 C-x o 回到上方的窗格，然后再用 C-x 1 关掉下方窗格。\n\n# 16 多窗口（MULTIPLE FRAMES）\nEmacs 可以创建多个窗口。窗口由许多窗格以及菜单、滚动条、回显区等组成。 在图形界面下，多个窗口可以同时显示出来。在文本终端中，只能同时显示一个 窗口。\n\n> 输入 M-x make-frame <Return>。\n可以看到一个新的窗口出现在了你的屏幕上。\n\n你可以在新的窗口里做最初的窗口里可以做的任何事情。第一个窗口没有什么特 别的。\n\n> 输入 M-x delete-frame <Return>.\n这个命令将会关闭选中的窗口。\n\n你也可以通过图形系统来关闭某个窗口（通常是在窗口上面的某个角落里的一个 “X” 按钮）。如果你关闭的是 Emacs 进程的最后一个窗口， Emacs 将会退出。\n\n# 17 递归编辑（RECURSIVE EDITING LEVELS）\n有时候你会进入所谓的 “递归编辑”。递归编辑状态由位于状态栏的方括号所指 示，其中包含了用小括号来指明的模式名称。比如说，你有时可能会看到 [(Fundamental)]，而不是 (Fundamental)。【比如在用 M-% 进行交互式替换的 时候你又用了 C-s 进行搜索，这时替换模式并没有结束，但你又进入了搜索模式， 这就是所谓的递归编辑。】\n\n离开递归编辑可以用 ESC ESC ESC。这是一个最通用的 “离开” 命令，你甚至可 以使用它来关掉多余的窗格，或者离开小缓冲。\n\n> 输入 M-x 进入小缓冲；然后输入 ESC ESC ESC 离开。\n你不能用 C-g 退出递归编辑，因为 C-g 的作用是取消 “本层递归编辑之内” 的 命令和其参数（arguments）。\n\n# 18 获得更多帮助（GETTING MORE HELP）\n本快速指南的目的仅仅是帮助你在 Emacs 的海洋里下水，不至于束手无策望洋兴 叹。有关 Emacs 的话题可谓汗牛充栋，这里自然是难尽万一。不过 Emacs 很理 解你求知若渴的心情，因为它提供的强大功能实在是太多了。为此，Emacs 提供 了一些命令来查看 Emacs 的命令文档，这些命令都以 CONTROL-h 开头，这个字 符也因此被称为 “帮助（Help）字符”。\n\n要使用帮助（Help）功能，请先输入 C-h，然后再输入一个字符以说明你需要什 么帮助。如果你连自己到底需要什么帮助都不知道，那么就输入 C-h ?，Emacs 会告诉你它能提供了哪些帮助。如果你按了 C-h 又想反悔，可以用 C-g 取消。\n\n（如果你按 C-h 之后没有任何帮助信息显示出来，那么试试 F1 键或者 M-x help <Return> 。）\n\n最基本的帮助功能是 C-h c。输入 C-h c 之后再输入一个组合键，Emacs 会给出 这个命令的简要说明。\n\n> 输入 C-h c C-p。\n显示的消息应该会是这样：\n\nC-p runs the command previous-line\n这条消息显示了 C-p 命令对应的函数名。命令的功能由函数完成，所以函数名 本身也可以被看成是最简单的文档――至少对于你已经学过的命令来说，它们的函 数名足以解释它们的功能了。\n\n多字符命令一样可以用 C-h c 来查看。\n\n想得到更多的信息，请把 C-h c 换成 C-h k 试试看。\n\n> 输入 C-h k C-p。\n上面的命令会新打开一个 Emacs 窗格以显示函数的名称及其文档。你读完之后可 以用 C-x 1 关掉这个帮助窗格。当然你并不需要立即这样做，你完全可以先在编 辑窗格里做点别的事情，然后再关掉帮助窗格。\n\n还有一些其它有用的 C-h 命令：\n\n**C-h f        解释一个函数。需要输入函数名。**\n\n> 试试看，输入 C-h f previous-line <Return>。\nEmacs 会给出它所知道的所有有关 “实现 C-p 命令功能的函数” 的信息。\n\n**C-h v 用来显示 Emacs 变量的文档。Emacs 变量可以被用来 “定制 Emacs 的行 为”。同样，你需要输入变量的名称。**\n\n**C-h a 相关命令搜索（Command Apropos）。 输入一个关键词然后 Emacs 会列出所有命令名中包含此关键词 的命令。**\n这些命令全都可以用 M-x 来启动。对于某些命令来说， 相关命令搜索还会列出一两个组合键。\n\n> 输入 C-h a file <Return>。\nEmacs 会在另一个窗格里显示一个 M-x 命令列表，这个列表包含了所有名称中含 有 “file” 的命令。你可以看到像 “C-x C-f” 这样的组合键显示在“find-file” 这样的命令名的旁边。\n\n> 用 C-M-v 来回滚动 help 窗格，多试几次。\n> 输入 C-x 1 来删除 help 窗格。\n\n**C-h i 阅读手册（也就是通常讲的 Info）。**\n这个命令会打开一个称为 “*info*” 的特殊缓冲区，在那里， 你可以阅读安装在系统里的软件包使用手册。要读 Emacs 的使用手册，按 m emacs <Return> 就可以了。如果你之前从没用过 Info 系统，那么请按“?”，Emacs 会带你进入 Info 的使用指南。在看完本快速指南之后，Emacs Info 会成为你的主要参考文档。","slug":"Emacs 快速简明指南","published":1,"updated":"2022-09-13T14:24:02.921Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooh000snq54hx3bgif3","content":"<p>简单整理了下 Emacs 指令，以备查阅。</p>\n<p>Emacs 键盘命令通常包含 CONTROL 键（有时候以 CTRL 或 CTL 来标示）和 META 键（有时候用 EDIT 或 ALT 来标示）。为了避免每次都要写出全名，我们 约定使用下述缩写：</p>\n<p>C-<chr>  表示当输入字符 <chr> 时按住 CONTROL 键。<br>         因此 C-f 就表示：按住 CONTROL 键再输入 f。</p>\n<p>M-<chr>  表示当输入字符 <chr> 时按住 META（或 EDIT 或 ALT）键。<br>         如果你的键盘上没有 META 、EDIT 或 ALT 键，用下述方法也等效：<br>         先按一下 ESC 键然后放开，再输入 <chr>。我们用 <ESC> 来表示<br>         ESC 键。</p>\n<p>重要提示：要退出 Emacs，请用 C-x C-c（两个连续的组合键）。 要退出一个正在运行中的命令，请用 C-g。 </p>\n<h1 id=\"1-小结（SUMMARY）\"><a href=\"#1-小结（SUMMARY）\" class=\"headerlink\" title=\"1 小结（SUMMARY）\"></a>1 小结（SUMMARY）</h1><p>以下命令在翻页浏览时相当有用：</p>\n<p><strong>C-v     向前移动一屏<br>M-v     向后移动一屏<br>C-l     重绘屏幕，并将光标所在行置于屏幕的中央<br>        （注意是 CONTROL-L，不是 CONTROL-1）</strong></p>\n<blockquote>\n<p>找到光标，留意其附近的文字，然后输入 C-l。<br>找找光标在哪里，你会发现其附近的文字与之前相同，位置却变为屏幕的中心。 如果你再次输入 C-l ，附近的文字将移动到屏幕的顶端。再次输入 C-l ， 文字将移动到底端。</p>\n</blockquote>\n<p>如果你的键盘上有 PageUp 和 PageDn，也可以用这两个键来滚屏。不过使用 C-v 和 M-v 的效率要更高一些。</p>\n<h1 id=\"2-基本的光标控制（BASIC-CURSOR-CONTROL）\"><a href=\"#2-基本的光标控制（BASIC-CURSOR-CONTROL）\" class=\"headerlink\" title=\"2 基本的光标控制（BASIC CURSOR CONTROL）\"></a>2 基本的光标控制（BASIC CURSOR CONTROL）</h1><p>整屏的移动很有用，但是如何在文字中精确定位呢？</p>\n<p>有几种方式可以选择。用方向键当然可以，不过更有效率的方法是保持双手位于 主键盘区，然后使用 C-p 、 C-b 、 C-f 和 C-n 这四个命令。它们的功能和方 向键是一样的，如下图所示:</p>\n<pre><code>                         上一行 C-p\n                              :\n                              :\n        向左移 C-b .... 目前光标位置 .... 向右移 C-f\n                              :\n                              :\n                         下一行 C-n\n</code></pre>\n<blockquote>\n<p>用 C-n 或 C-p 将光标移到上图的中央。<br>  按 C-l，整幅图会被显示在屏幕的中央。<br>“P N B F” 四个字母分别代表了四个词，用这四个词记忆这些组合键会更容易： P 代表 previous（上一行），N 代表 next（下一行），B 代表 backward（回 退），而 F 则代表 forward（前进）。这些组合键今后将与你形影不离。</p>\n</blockquote>\n<p>每行文字都以一个 “换行符” 结束，“换行符”把行与行区分开来。（通常情况下， 一个文件的最后一行会有一个换行符，但是 Emacs 不强制要求这一点。）</p>\n<blockquote>\n<p>在一行的行头输入 C-b。<br>光标应该会移动到前一行的行尾，因为光标在回退过程中越过了换行符。</p>\n</blockquote>\n<p>同样 C-f 也可以像 C-b 一样越过换行符。</p>\n<blockquote>\n<p>连按几次 C-b，感受一下光标的移动。<br>然后按几次 C-f 回到本行的行尾。 再按一次 C-f，光标会移动到下一行。</p>\n</blockquote>\n<p>当你移动光标穿越屏幕的上下边界时，在边界外的文字会移动到屏幕内，这称为 “滚动”（scrolling）。滚动使得光标可以被移动到文字中的任何位置，并且还 不会让光标跑到屏幕外边去。</p>\n<blockquote>\n<p>用 C-n 将光标下移，一直越过屏幕边界，同时观察发生了什么变化。<br>如果你嫌一个字符一个字符地挪光标太慢，你还可以一个词一个词地跳。M-f (META-f) 可以将光标往前移动一个词，而 M-b 则是往后移。【这里的 “词” 指 英文单词，对中文来说，则是指移动到下一个标点符号。】</p>\n</blockquote>\n<blockquote>\n<p>试试 M-f 和 M-b。<br>如果光标停在一个词的中间，M-f 会移动到这个词的末尾。如果光标处于词与词 之间的空白处，M-f 会移动到下一个词的末尾。M-b 的功能类似，只是方向相反。</p>\n</blockquote>\n<blockquote>\n<p>按几次 M-f 和 M-b，中间夹杂一些 C-f 和 C-b。<br>你可以观察到 M-f 和 M-b 在不同位置上所表现出来的不同行为。</p>\n</blockquote>\n<p>请注意 C-f 、C-b 和 M-f 、M-b 两对之间的类比关系。通常的惯例是：META 系 列组合键用来操作 “由语言定义的单位（比如词、句子、段落）”，而 CONTROL 系列组合键用来操作 “与语言无关的基本单位（比如字符、行等等）”。</p>\n<p>类似的惯例在 “行” 与“句子”之间也同样适用：C-a 和 C-e 可以将光标移动到 “一行”的头部和尾部；而 M-a 和 M-e 则将光标移动到 “一句” 的头部和尾部。</p>\n<blockquote>\n<p>按两次 C-a，再按两次 C-e。<br>按两次 M-a，再按两次 M-e。</p>\n</blockquote>\n<p>想一想为什么重复的 C-a 命令会没有作用，而重复的 M-a 命令则会让光标不断 地回退到上一个句子。虽然这个类比规律并不严格，但是很自然。</p>\n<p>光标停留的位置也可以称作 “点位”（point）。或者干脆说，光标指示出了屏幕 上“点位” 在文本中的位置。</p>\n<p>这里对简单的光标移动命令做一个总结，其中也包括了整词和整句的移动：</p>\n<p><strong>C-f     向右移动一个字符<br>C-b     向左移动一个字符</strong></p>\n<p><strong>M-f     向右移动一个词【对中文是移动到下一个标点符号】<br>M-b     向左移动一个词【对中文是移动到上一个标点符号】</strong></p>\n<p><strong>C-n     移动到下一行<br>C-p     移动到上一行</strong></p>\n<p><strong>C-a     移动到行首<br>C-e     移动到行尾</strong></p>\n<p><strong>M-a     移动到句首<br>M-e     移动到句尾</strong></p>\n<blockquote>\n<p>把上面所有的命令都练习几次，这些可都是最常用的命令。<br>这里还要介绍两个重要的光标移动命令：M-&lt;（META 小于号）可以将光标移动到 所有文字的最开头；M-&gt; （META 大于号）可以将光标移动到所有文字的最末尾。</p>\n</blockquote>\n<p>注意，在大部分键盘上，小于号（&lt;）需要用上档键（Shift）来输入，所以在这 些键盘上你应该用 Shift 键来输入 M-&lt;，如果不按 Shift 键，你输入的会是 M-comma（META 逗号）。</p>\n<p>大部分的 Emacs 命令接受数字参数，并且对于多数命令而言，这些数字参数的作 用是指定命令的重复次数。为一个命令指定数字参数（也就是重复次数）的方法 是：先输入 C-u，然后输入数字作为参数，最后再输入命令。如果你有 META （或 EDIT 或 ALT）键，那么还有另一种办法：按住 META 键不放，然后输入数字。不 过我们还是建议你用 C-u，因为它在任何终端机上都能用。这种数字参数也称为 “前缀参数”，意思是说这个参数是先于使用它的命令而输入的。</p>\n<p>举例来说， C-u 8 C-f 会向前移动 8 个字符。</p>\n<blockquote>\n<p>为 C-n 或者 C-p 指定一个数字参数，这样你可以只用一个命令就把光标移动<br>到本行的附近。</p>\n</blockquote>\n<p>虽然大部分命令把数字参数解释为其重复次数，但是也有些命令例外，它们将数 字参数另做它用。比如有些命令（我们目前还没学到）仅仅将前缀参数作为一个 标志――只要给出有一个前缀参数，不管其值为何，它都会改变命令的功能。</p>\n<p>而 C-v 和 M-v 则属于另一种类型的例外。当给定一个参数时，它们将滚动你指 定的 “行数”，而不是 “屏数”。举例来说，C-u 8 C-v 将文本向下滚动 8 行。</p>\n<blockquote>\n<p>现在试试看，输入 C-u 8 C-v。<br>这个命令应该已经将文字向上滚动了 8 行。如果你想将它再次地向下滚动，你可 以给定一个参数然后执行 M-v。</p>\n</blockquote>\n<p>如果你正在使用图形界面，比如 X 或者微软的 Windows，那么在 Emacs 窗 口的一边应该有一个长方形的区域叫 “滚动条”。你可以用鼠标操纵滚动条来滚动 文字。</p>\n<p>如果你的鼠标有滚轮的话，你也可以使用滚轮来滚动。</p>\n<h1 id=\"3-如果-EMACS-失去响应（IF-EMACS-STOPS-RESPONDING）\"><a href=\"#3-如果-EMACS-失去响应（IF-EMACS-STOPS-RESPONDING）\" class=\"headerlink\" title=\"3 如果 EMACS 失去响应（IF EMACS STOPS RESPONDING）\"></a>3 如果 EMACS 失去响应（IF EMACS STOPS RESPONDING）</h1><p>如果 Emacs 对你的命令失去响应，你可以用 C-g 来安全地终止这条命令。C-g 也可以终止一条执行过久的命令。</p>\n<p><strong>C-g 还可以取消数字参数和只输入到一半的命令。</strong></p>\n<blockquote>\n<p>输入 C-u 100 设定一个值为 100 的数字参数，然后按 C-g。<br>现在再按 C-f，光标应该只会移动一个字符，因为你已经用 C-g 取消了参数。</p>\n</blockquote>\n<p>如果你不小心按了一下 <ESC>，你也可以用 C-g 来取消它。 【这个说法似乎有问题，因为按照这个按键顺序输入的应该是 C-M-g。 取消 <ESC> 的正确做法是再连按两次 <ESC>。】</p>\n<h1 id=\"4-被禁用的命令（DISABLED-COMMANDS）\"><a href=\"#4-被禁用的命令（DISABLED-COMMANDS）\" class=\"headerlink\" title=\"4 被禁用的命令（DISABLED COMMANDS）\"></a>4 被禁用的命令（DISABLED COMMANDS）</h1><p>有一些 Emacs 命令被 “禁用” 了，以避免初学者在不了解其确切功能的情况下误 用而造成麻烦。</p>\n<p>如果你用到了一个被禁用的命令，Emacs 会显示一个提示消息，告诉你这个命令 到底是干什么的，询问你是否要继续，并在得到你的肯定之后再执行这命令。</p>\n<p>如果你真的想用这条命令，在 Emacs 询问你的时候应该按空格。一般来说，如果 你不想用，就按 “n”。</p>\n<blockquote>\n<p>试试 C-x C-l （这是一个被禁用的命令）<br>然后用 n 来回答询问。</p>\n</blockquote>\n<h1 id=\"5-窗格（WINDOWS）\"><a href=\"#5-窗格（WINDOWS）\" class=\"headerlink\" title=\"5 窗格（WINDOWS）\"></a>5 窗格（WINDOWS）</h1><p>Emacs 可以有多个 “窗格”，每个窗格显示不同的文字。后面会介绍怎么对付多个窗格，现在我们先学会如何关掉多余的窗格。其实也很简单：</p>\n<p><strong>C-x 1 只保留一个窗格（也就是关掉其它所有窗格）。</strong></p>\n<p>也就是先按 CONTROL-x 然后再按 1。C-x 1 会保留光标所在的窗格，并将其扩大到整个屏幕，同时关掉所有其它的窗格。</p>\n<blockquote>\n<p>把光标移到本行然后输入 C-u 0 C-l。<br>输入 C-h k C-f。观察当一个新窗格出现时当前窗格（用来显示C-f 命令的文档）是如何缩小的。</p>\n</blockquote>\n<blockquote>\n<p>输入 C-x 1 关掉文档窗格。<br>有一系列命令是以 CONTROL-x 开始的，这些命令许多都跟 “窗格、文件、缓冲区 【缓冲区（buffer）会在后文详细介绍】” 等等诸如此类的东西有关，其中有些 命令可能包含了 2 个、3 个或者 4 个字符。</p>\n</blockquote>\n<h1 id=\"6-插入与删除（INSERTING-AND-DELETING）\"><a href=\"#6-插入与删除（INSERTING-AND-DELETING）\" class=\"headerlink\" title=\"6 插入与删除（INSERTING AND DELETING）\"></a>6 插入与删除（INSERTING AND DELETING）</h1><p>插入文字很简单，直接敲键盘就可以了。普通的字符，比如 A、7、* 等等，会 随着你的输入而插入。要插入一个换行符，输入 <Return>（这个键在键盘上有 时会被标注成 “Enter”）。</p>\n<p>你可以用 <DEL> 来删除光标左边的字符，这个键通常被标注为 “Backspace”――跟 你在 Emacs 之外的用法应该一样，删除最后一个输入的字符。</p>\n<p>你的键盘上可能有另外一个键，标注着 <Delete>，但那个不是我们所说的 <DEL>。</p>\n<p>如果一行文字很长、超出了窗格的宽度，显示不下的部分会在紧邻的下一行继续 显示。如果你使用的是图形界面，文本区域两边的狭窄区域（左右 “边缘”）会出 现小小的转弯箭头，表明这是某一行的接续显示。如果你使用的是文本终端，接 续显示由屏幕最右边一列的一个反斜线来表示。</p>\n<p>好，现在你应该已经掌握了最基本的的文本插入和修改功能，其实删除还可以 “以词为单位”进行，下面是一个关于 “删除” 操作的小结：</p>\n<p><strong><DEL>        删除光标前的一个字符<br>C-d          删除光标后的一个字符</strong></p>\n<p><strong>M-<DEL>      移除光标前的一个词<br>M-d          移除光标后的一个词</strong></p>\n<p><strong>C-k          移除从光标到“行尾”间的字符<br>M-k          移除从光标到“句尾”间的字符</strong><br>【可能你已经注意到了 “删除（delete）” 和“移除（kill）”的用词区别，后文会有详细说明。】</p>\n<p>注意 “<DEL> 和 C-d” 还有 “M-<DEL> 和 M-d” 是根据前述惯例从 C-f 和 M-f 衍生 出来的（其实 &lt; DEL &gt; 不是控制字符，我们先忽略这一点）。C-k 和 M-k 的关系在 某种程度上与 C-e 和 M-e 一样――如果把 “一行” 和“一句”作一个类比的话。</p>\n<p>你也可以用一种通用的办法来移除缓冲区里的任何一部分：首先把光标移动到你 想要移除的区域的一端，然后按 C-<SPC>（<SPC > 指空格）【注意，C-<SPC> 往 往被中文用户设定成输入法热键，如果这样，C-<SPC> 就被系统拦截而无法传递 给 Emacs 了，在这种情况下可以使用 C-@。】，然后将光标移动到你准备移除的 文字的另一端。这个时候， Emacs 会高亮光标和你按下 C-<SPC> 之间的文本。 最后，按下 C-w 。这样就可以把位于这两点之间的所有文字移除了。</p>\n<blockquote>\n<p>移动光标到上一段开头的“你”字。<br>输入 C-<SPC> 。Emacs 应该会在屏幕的下方显示一个“Mark set”的消息。<br>移动光标到第二行中的“端”字。<br>输入 C-w，从“你”开始到“端”之前的文字被全部移除。</p>\n</blockquote>\n<p>注意,“移除（kill）”和 “删除（delete）” 的不同在于被移除的东西可以被重新 插入（在任何位置），而被删除的就不能使用相同的方法重新插入了（不过可以 通过撤销一个删除命令来做到，后文会提到）。【实际上，移除掉的东西虽然看 起来 “消失” 了，但实际上被 Emacs 记录了下来，因此还可以找回来；而删除掉 的东西虽然也可能还在内存里，但是已经被 Emacs“抛弃”了，所以就找不回来 了。】重新插入被移除的文字称为“召回（yank）”。一般而言，那些可能消除很 多文字的命令会把消除掉的文字记录下来（它们被设定成了“可召回”），而那些 只消除一个字符或者只消除空白的命令就不会记录被消除的内容（自然你也就无 法召回了）。</p>\n<blockquote>\n<p>移动光标到一非空白行的行头，然后输入 C-k 移除那一行上的文字。<br>再次 C-k，你可以看到它移除了跟在那一行后面的换行符。</p>\n</blockquote>\n<p>注意，单独的 C-k 会把一行的内容移除，而第二个 C-k 则会移除换行符，并使 其后所有的行都向上移动。C-k 处理数字参数的方式很特别，它会把参数指定的 那么多行连同其后的换行符一起移除，而不仅仅是重复 C-k 而已。比如 C-u 2 C-k 会把两行以及它们的换行符移除；而如果只是输入 C-k 两次显然不是这个结果。</p>\n<p>重新插入被移除的文字恢复的动作称为 “召回（yanking）”。（就好像把别人从你身边 移走的东西又猛力地拉回来。）你可以在你删除文字的地方召回，也可以在别的 地方召回，还可以多次召回同样的文字以得到它的多个拷贝。很多其它的编辑器 把移除和召回叫做“剪切” 和“粘贴” （详情可见 Emacs 使用手册里的术语表）。</p>\n<p>召回的命令是 C-y。它会在光标所在处插入你最后移除的文字。</p>\n<p>C-y 可以召回最近一次移除的内容，那如何召回前几次移除的内容呢？它们当然 没有丢，你可以用 M-y 来召回它们。在用 C-y 召回最近移除的文字之后，紧接 着再按 M-y 就可以召回再前一次被移除的内容，再按一次 M-y 又可以召回再上 一次的…… 连续使用 M-y 直到找到你想要召回的东西，然后什么也不用做，继续 编辑就行了。</p>\n<p>如果连续按 M-y 很多次，你可能会回到起始点，也就是最近移除的文字。 【看得出这实际上是一个环。】</p>\n<h1 id=\"7-撤销（UNDO）\"><a href=\"#7-撤销（UNDO）\" class=\"headerlink\" title=\"7 撤销（UNDO）\"></a>7 撤销（UNDO）</h1><p>如果你修改了一段文字，又觉得改得不好，可以用 undo 命令进行撤销：C-/。</p>\n<p>通常 C-/ 会消除一个命令所造成的所有改变；如果你在一行中连续多次地使用 C-/，你会把以前的命令也依次撤销。</p>\n<p>但是有两个例外： 1） 没有改变文字的命令不算（包括光标移动命令和滚动命令） 2） 从键盘输入的字符以组为单位――每组最多 20 个字符――来进行处理。 （这是为了减少你在撤销 “插入文字” 动作时需要输入 C-/ 的次数）</p>\n<blockquote>\n<p>用 C-k 将这一行移除，然后输入 C-/ ，它会再次出现。<br>C-_ 也是撤销命令；它的作用跟 C-/ 一样，但是它比较容易多次输入。在 某些终端上，输入 C-/ 实际上向 Emacs 发送的是 C-_ 。 另外， C-x u 和 C-/ 完全一样，但是按起来有些麻烦。</p>\n</blockquote>\n<p>数字参数对于 C-/ 、 C-_ 和 C-x u 的意义是执行撤销的重复次数。</p>\n<h1 id=\"8-文件（FILE）\"><a href=\"#8-文件（FILE）\" class=\"headerlink\" title=\"8 文件（FILE）\"></a>8 文件（FILE）</h1><p>想保存工作成果就要记得存盘，否则一旦退出 Emacs 你编辑的文字就会丢失。要 存盘，就要在编辑前 “寻找” 到一个存盘文件。（这个过程通常也被称为“访问” 文件。）</p>\n<p>寻找到一个文件意味着你可以在 Emacs 里查看这个文件的内容。从许多角度看， 这就等于你在直接编辑这个文件，只是你所做的修改只有在 “存盘” 的时候才会 被写入文件。也正因为如此，你可以丢弃一个写到一半的文件而不必把这个残缺 文件也保存到计算机上。在存盘的时候，Emacs 会把存盘前的文件重命名保存， 以防你改完之后又想反悔。</p>\n<p>在屏幕的下方，你应该能够看到头部有短线 “-” 的一行，行首通常是一些诸如 “ -:— TUTORIAL.cn” 的文字，这些文字代表了你当前正在访问的文件。比如你现 在正在访问的文件是对 Emacs 快速指南的一份临时拷贝，叫做“TUTORIAL.cn”。 每当 Emacs 寻找到一个文件，文件名就会出现在这个位置。</p>\n<p>寻找文件的命令有一个特点，那就是你必须给出文件名。我们称这个命令 “读入 了一个参数”（在这里，这个参数显然就是文件名）。在你输入这条命令之后：</p>\n<p><strong>C-x C-f   寻找一个文件</strong><br>Emacs 会提示你输入文件名。你输入的文件名会出现在屏幕最底端的一行，这一 行被称为小缓冲（minibuffer），在小缓冲里你可以使用通常的 Emacs 编辑命令 来编辑文件名。</p>\n<p>在小缓冲里输入文件名（其实输入其它东西也一样）时可以用 C-g 取消。</p>\n<blockquote>\n<p>输入 C-x C-f，然后输入 C-g<br>这会关掉小缓冲，同时也会取消使用小缓冲的 C-x C-f 命令。 当然了，你也没有找任何文件。</p>\n</blockquote>\n<p>用 <Return> 结束文件名的输入。之后，小缓冲会消失，C-x C-f 将会去寻找你 指定的文件。小缓冲在 C-x C-f 命令结束之后也会消失。</p>\n<p>文件被显示在了屏幕上，你可以开始编辑了。存盘用这条命令：</p>\n<p><strong>C-x C-s   储存这个文件</strong><br>这条命令把 Emacs 中的文字存储到文件中。第一次存盘的时候 Emacs 会将原文 件重命名以备份。重命名的规则通常是在原文件名之后添加一个 “~” 字符。 【对许多人来说，这是一个烦人的特性，关掉文件备份可以用如下命令： M-x customize-variable <Return> make-backup-files <Return>】</p>\n<p>存盘结束后，Emacs 会显示写入文件的文件名。你最好养成经常存盘的习惯，这 可以减少系统崩溃和死机给你带来的损失（也可参见下面的 “自动保存” 一节）。</p>\n<blockquote>\n<p>输入 C-x C-s TUTORIAL.cn <Return> 。<br>这将会把该指南保存为一个名为 TUTORIAL.cn 的文件，并且在屏幕的下方显 示一条消息：“Wrote …TUTORIAL.cn”。</p>\n</blockquote>\n<p>你不但可以寻找一个已有的文件来查看或编辑，还可以寻找一个不存在的文件。 实际上这正是 Emacs 创建新文件的方法：找到不存在的新文件。事实上，只有 在存盘的时候，Emacs 才会真正创建这个文件。而在这之后的一切就跟编辑一个 已有文件没有区别了。</p>\n<h1 id=\"9-缓冲区（BUFFER）\"><a href=\"#9-缓冲区（BUFFER）\" class=\"headerlink\" title=\"9 缓冲区（BUFFER）\"></a>9 缓冲区（BUFFER）</h1><p>你可以用 C-x C-f 找到并打开第二个文件，但第一个文件仍然在 Emacs 中。要 切回第一个文件，一种办法是再用一次 C-x C-f。这样，你就可以在 Emacs 中同 时打开多个文件。</p>\n<p>Emacs 把每个编辑中的文件都放在一个称为 “缓冲区（buffer）” 的地方。每寻 找到一个文件，Emacs 就在其内部开辟一个缓冲区。用下面的命令可以列出当前 所有的缓冲区：</p>\n<p><strong>C-x C-b 列出缓冲区</strong></p>\n<blockquote>\n<p>现在就试一下 C-x C-b<br>观察一下缓冲区是如何被命名的，它很可能跟与其对应的文件同名。实际上，一 个 Emacs 窗格里的任何文字都是某个缓冲区的一部分。</p>\n</blockquote>\n<blockquote>\n<p>输入 C-x 1 离开缓冲区列表<br>不管存在多少缓冲区，任何时候都只能有一个 “当前” 缓冲区，也就是你正在编 辑的这个。如果你想编辑其它的缓冲区，就必须 “切换” 过去。上面讲过，用 C-x C-f 是一种办法。不过还有一个更简单的办法，那就是用 C-x b。用这条命 令，你必须输入缓冲区的名称。</p>\n</blockquote>\n<blockquote>\n<p>通过输入 C-x C-f foo <Return> 创建一个名为“foo”的文件。<br>然后输入 C-x b TUTORIAL.cn <Return> 回到这里。</p>\n</blockquote>\n<p>大多数情况下，缓冲区与跟其对应的文件是同名的（不包括目录名），不过这也 不是绝对的。用 C-x C-b 得到的缓冲区列表总是显示缓冲区名。</p>\n<p>缓冲区未必有对应文件。显示缓冲区列表的缓冲区（叫做 “<em>Buffer List</em>”）就 是这样。这个 TUTORIAL.cn 缓冲区起初没有对应的文件，但是现在有了，因为 在前一节你输入了 C-x C-s ， 将它保存成了一个文件。</p>\n<p>“<em>Messages</em>” 缓冲区也没有对应文件，这个缓冲区里存放的都是在 Emacs 底部 出现的消息。</p>\n<blockquote>\n<p>输入 C-x b <em>Messages</em> <Return> 瞅瞅消息缓冲区里都有什么东西。<br>然后再输入 C-x b TUTORIAL.cn <Return> 回到这里。</p>\n</blockquote>\n<p>如果你对某个文件做了些修改，然后切换到另一个文件，这个动作并不会帮你把 前一个文件存盘。对第一个文件的修改仍然仅存在于 Emacs 中，也就是在它对 应的缓冲区里。并且，对第二个文件的修改也不会影响到第一个文件。这很有用， 但也意味着你需要一个简便的办法来保存第一个文件的缓冲区。先切换回那个缓 冲区，再用 C-x C-s 存盘，太麻烦了。你需要一个更简便的方法，而 Emacs 已 经为你准备好了：</p>\n<p><strong>C-x s   保存多个缓冲区<br>C-x s 会找出所有已被修改但尚未存盘的缓冲区，然后向你逐个询问：是否需要存盘？</strong></p>\n<blockquote>\n<p>插入一行文字，然后输入 C-x s。<br>它应该会问你，是否要储存名为 TUTORIAL.cn 的缓冲区？ 按 “y” 告诉它你想存盘。</p>\n</blockquote>\n<h1 id=\"10-命令集扩展（EXTENDING-THE-COMMAND-SET）\"><a href=\"#10-命令集扩展（EXTENDING-THE-COMMAND-SET）\" class=\"headerlink\" title=\"10 命令集扩展（EXTENDING THE COMMAND SET）\"></a>10 命令集扩展（EXTENDING THE COMMAND SET）</h1><p>Emacs 的命令就像天上的星星，数也数不清。把它们都对应到 CONTROL 和 META 组合键上显然是不可能的。Emacs 用扩展（eXtend）命令来解决这个问题，扩展 命令有两种风格：</p>\n<p><strong>C-x     字符扩展。  C-x 之后输入另一个字符或者组合键。<br>M-x     命令名扩展。M-x 之后输入一个命令名。</strong><br>很多扩展命令都相当有用，虽然与你已经学过的命令比起来，他们可能不那么常 用。我们早已经见过一些扩展命令了，比如用 C-x C-f 寻找文件和用 C-x C-s 保存文件；退出 Emacs 用的 C-x C-c 也是扩展命令。（不用担心退出 Emacs 会 给你带来什么损失，Emacs 会在退出之前提醒你存盘的。）</p>\n<p>如果你使用图形界面，你不需要任何特殊的命令来切换 Emacs 和其他应用程序。 你可以使用鼠标或者窗口管理器的命令。然而，如果你使用只能同时显示一个应 用程序的文本终端，你需要 “挂起” Emacs ，以切换到其他的应用程序。</p>\n<p>C-z 可以暂时离开 Emacs――当然，你还可以再回来。在允许 C-z 的系统中，C-z 会把 Emacs“挂起”，也就是说，它会回到 shell 但不杀死 Emacs 的进程。在常用的 shell 中，通常可以用 “fg” 或者 “%emacs” 命令再次回到 Emacs 中。</p>\n<p>你最好在打算退出登陆的时候再用 C-x C-c。在把 Emacs 当做一个临时的编辑 器的时候（比如被一个邮件处理程序调用），也可以用 C-x C-c 退出。</p>\n<p>C-x 的扩展命令有很多，下面列出的是你已经学过的：</p>\n<p><strong>C-x C-f         寻找文件。<br>C-x C-s         保存文件。<br>C-x C-b         列出缓冲区。<br>C-x C-c         离开 Emacs。<br>C-x 1           关掉其它所有窗格，只保留一个。<br>C-x u           撤销。</strong></p>\n<p>用命令名扩展的命令通常并不常用，或只用在部分模式下。比如 replace-string（字符串替换）这个命令，它会把一个字符串替换成另一个。在 输入 M-x 之后，Emacs 会在屏幕底端向你询问并等待你输入命令名。如果你想 输入 “replace-string”，其实只需要敲“repl s<TAB>” 就行了，Emacs 会帮你自动补齐。输入完之后按 <Return> 提交。</p>\n<p>字符串替换命令需要两个参数――被替换的字符串和用来替换它的字符串。每个参数的输入都以换行符来结束。</p>\n<h1 id=\"11-自动保存（AUTO-SAVE）\"><a href=\"#11-自动保存（AUTO-SAVE）\" class=\"headerlink\" title=\"11 自动保存（AUTO SAVE）\"></a>11 自动保存（AUTO SAVE）</h1><p>如果你已经修改了一个文件，但是还没来得及存盘你的计算机就罢工了，那么你 所做的修改就很可能会丢失。为了避免这样的不幸发生，Emacs 会定期将正在编 辑的文件写入一个 “自动保存” 文件中。自动保存文件的文件名的头尾各有一个 “#”字符，比如你正在编辑的文件叫“hello.c”，那么它的自动保存文件就叫 “#hello.c#”。这个文件会在正常存盘之后被 Emacs 删除。</p>\n<p>所以，假如不幸真的发生了，你大可以从容地打开原来的文件（注意不是自动保 存文件）然后输入 M-x recover file <Return> 来恢复你的自动保存文件。在 提示确认的时候，输入 yes<Return>。</p>\n<h1 id=\"12-回显区（ECHO-AREA）\"><a href=\"#12-回显区（ECHO-AREA）\" class=\"headerlink\" title=\"12 回显区（ECHO AREA）\"></a>12 回显区（ECHO AREA）</h1><p>如果 Emacs 发现你输入多字符命令的节奏很慢，它会在窗格的下方称为 “回显区” 的地方给你提示。回显区位于屏幕的最下面一行。</p>\n<h1 id=\"13-状态栏（MODE-LINE）\"><a href=\"#13-状态栏（MODE-LINE）\" class=\"headerlink\" title=\"13 状态栏（MODE LINE）\"></a>13 状态栏（MODE LINE）</h1><p>位于回显区正上方的一行被称为 “状态栏”。状态栏上会显示一些信息，比如：</p>\n<p>-:**- TUTORIAL.cn 63% L749 (Fundamental)</p>\n<p>状态栏显示了 Emacs 的状态和你正在编辑的文字的一些信息。</p>\n<p>你应该知道文件名的意思吧？就是你找到的那个文件嘛。-NN%– 显示的是光标在 全文中的位置。如果位于文件的开头，那么就显示 –Top– 而不是 –00%–；如 果位于文件的末尾，就显示 –Bot–。如果文件很小，一屏就足以显示全部内容， 那么状态栏会显示 –All–。</p>\n<p>“L” 和其后的数字给出了光标所在行的行号。</p>\n<p>最开头的星号（*）表示你已经对文字做过改动。刚刚打开的文件肯定没有被改动 过，所以状态栏上显示的不是星号而是短线（-）。</p>\n<p>状态栏上小括号里的内容告诉你当前正在使用的编辑模式。缺省的模式是 Fundamental，就是你现在正在使用的这个。它是一种 “主模式”。</p>\n<p>Emacs 的主模式林林总总。有用来编辑程序代码的――比如 Lisp 模式；也有用 来编辑各种自然语言文本的――比如 Text 模式。任何情况下只能应用一个主模 式，其名称会显示在状态栏上，也就是现在显示 “Fundamental” 的地方。</p>\n<p>主模式通常会改变一些命令的行为。比方说，不管编辑什么语言的程序代码，你 都可以用一个相同的命令来添加注释。但是在不同的语言中注释的语法往往是不 同的，这时不同的主模式就会用各自不同的语法规则来添加注释。主模式都是可 以用 M-x 启动的扩展命令，M-x fundamental-mode 就可以切换到 Fundamental 模式。</p>\n<p>编辑自然语言文本――比如现在――应该用 Text 模式。</p>\n<blockquote>\n<p>输入 M-x text-mode <Return>。<br>别担心，什么都没变。不过细心一些可以发现，M-f 和 M-b 现在把单引号（’） 视为词的一部分了。而在先前的 Fundamental 模式中，M-f 和 M-b 都将单引号 视为分隔单词的符号。</p>\n</blockquote>\n<p>主模式通常都会搞一些类似的小动作，因为很多命令其实完成的是 “相同的工 作”，只是在不同环境下会有不同的工作方式而已。【所谓 “求同存异”，在 Emacs 里得到了很好的体现】</p>\n<p>用 C-h m 可以查看当前主模式的文档。</p>\n<blockquote>\n<p>把光标移动到下一行。<br>用 C-l C-l 将本行带到屏幕的最上方。<br>输入 C-h m，看看 Text 模式与 Fundamental 模式有哪些不同。<br>输入 C-x 1 关掉文档窗格。</p>\n</blockquote>\n<p>主模式之所以称之为 “主（major）” 模式，是因为同时还有“辅模式”（minor mode）存在。辅模式并不能替代主模式，而是提供一些辅助的功能。每个辅模式 都可以独立地开启和关闭，跟其它辅模式无关，跟主模式也无关。所以你可以不 使用辅模式，也可以只使用一个或同时使用多个辅模式。</p>\n<p>有一个叫做自动折行（Auto Fill）的辅模式很有用，特别是在编辑自然语言文本 的时候。启用自动折行后，Emacs 会在你打字超出一行边界时自动替你换行。</p>\n<p>用 M-x auto-fill-mode <Return> 启动自动折行模式。再用一次这条命令，自 动折行模式会被关闭。也就是说，如果自动折行模式没有被开启，这个命令会开 启它；如果已经开启了，这个命令会关闭它。所以我们说，这个命令可以用来 “开关（toggle）” 模式。</p>\n<blockquote>\n<p>现在输入 M-x auto-fill-mode <Return>。然后随便敲点什么，直到你看到它<br>分成两行。你必须敲一些空格，因为 Auto Fill 只在空白处进行断行。 【输入空格对英文来说是必须的，而对中文则不必。】</p>\n</blockquote>\n<p>行边界通常被设定为 70 个字符【这里指英文字符】，你可以用 C-x f 命令配合 数字参数来重新设定它。</p>\n<blockquote>\n<p>输入 C-x f 并传递参数 20： C-u 2 0 C-x f。<br>然后输入一些文字，观察 Emacs 的自动折行动作 最后再用 C-x f 将边界设回 70。</p>\n</blockquote>\n<p>如果你在段落的中间做了一些修改，那么自动折行模式不会替你把整个段落重新 折行，你需要用 M-q 手动折行。注意，光标必须位于你需要折行的那一段里。</p>\n<blockquote>\n<p>移动光标到前一段中，然后输入 M-q。</p>\n</blockquote>\n<h1 id=\"14-搜索（SEARCHING）\"><a href=\"#14-搜索（SEARCHING）\" class=\"headerlink\" title=\"14 搜索（SEARCHING）\"></a>14 搜索（SEARCHING）</h1><p>Emacs 可以向前或向后搜索字符串（“字符串” 指的是一组连续的字符）。搜索命 令是一个移动光标的命令：搜索成功后，光标会停留在搜索目标出现的地方。</p>\n<p>Emacs 的搜索命令是 “渐进的（incremental）”。意思是搜索与输入同时进行： 你在键盘上一字一句地输入搜索词的过程中，Emacs 就已经开始替你搜索了。</p>\n<p><strong>C-s 是向前搜索，C-r 是向后搜索。</strong></p>\n<p>在按下 C-s 之后，回显区里会有 “I-search” 字样出现，表明目前 Emacs 正处 于 “渐进搜索” 状态，并等待你输入搜索字串。按 <Return> 可以结束搜索。</p>\n<blockquote>\n<p>输入 C-s 开始一个搜索。注意敲慢一点，一次输入一个字符。<br>慢慢输入 “cursor” 这个词，每敲一个字都停顿一下并观察光标。 现在你应该已曾经找到 “cursor” 这个词了。</p>\n</blockquote>\n<blockquote>\n<p>再按一次 C-s，搜索下一个“cursor”出现的位置。<br>现在按四次 <DEL> ，看看光标是如何移动的。<br>敲 <Return> 结束搜索。</p>\n</blockquote>\n<p>看仔细了么？在一次渐进式搜索中，Emacs 会尝试跳到搜索目标出现的位置。要 跳到下一个命中位置，就再按一次 C-s。如果找不到目标，Emacs 会发出 “哔” 的一声，告诉你搜索失败。在整个过程中，都可以用 C-g 来终止搜索。【你会发 现 C-g 会让光标回到搜索开始的位置，而 <Return> 则让光标留在搜索结果上， 这是很有用的功能。】</p>\n<p>在渐进式搜索中，按 <DEL> 会 “撤回” 到最近一次搜索的命中位置。如果之前没 有一个命中， <DEL> 会抹去搜索字符串中的最后一个字符。比如你已经输入了 “c”，光标就停在 “c” 第一次出现的位置，再输入 “u”，光标停在“cu” 第一次出现 的位置，这时再按 <DEL> ，“u”就从搜索字串中消失了，然后光标会回到 “c” 第 一次出现的位置。</p>\n<p>另外，如果你在搜索的时候输入了 control 或者 meta 组合键的话，搜索可能会 结束。（也有例外，比如 C-s 和 C-r 这些用于搜索的命令。）</p>\n<p>前面说的都是 “向下” 搜索，如果想 “向上” 搜索，可以用 C-r。C-r 与 C-s 相比除了搜索方向相反之外，其余的操作都一样。</p>\n<h1 id=\"15-多窗格（MULTIPLE-WINDOWS）\"><a href=\"#15-多窗格（MULTIPLE-WINDOWS）\" class=\"headerlink\" title=\"15 多窗格（MULTIPLE WINDOWS）\"></a>15 多窗格（MULTIPLE WINDOWS）</h1><p>Emacs 的迷人之处很多，能够在屏幕上同时显示多个窗格就是其中之一。</p>\n<p>连续使用 C-x o 可以遍历所有窗格。“被选中的窗格”，也就是绝大多数的编辑 操作所发生的地方，是在你不打字时闪烁光标的那个窗格。其他的窗格有它们自 己的光标位置； 如果你在图形界面下运行 Emacs ，这些光标是镂空的长方形。</p>\n<p>当你在一个窗格中编辑，但用另一个窗格作为参考的时候，C-M-v 是很有用的命 令。无需离开被选中的窗格，你就可以用 C-M-v 命令滚动另外一个窗格中的文 字。【比如翻译和校对就很适合用这种方式进行。】</p>\n<p>C-M-v 是一个 CONTROL-META 组合键。如果你有 META （或 Alt）键的话，可以 同时按住 CONTROL 和 META 键并输入 v。CONTROL 和 META 键先按哪个都可以， 因为它们只是用来 “修饰（modify）” 你输入的字符的。</p>\n<p>如果你并没有 META 键，你也可以用 ESC 来代替，不过这样的话就要注意按键顺 序了：你必须先输入 ESC ，然后再输入 CONTROL-v。CONTROL-ESC v 是没用的， 因为 ESC 本身是一个字符键，而不是一个修饰键（modifier key）。</p>\n<blockquote>\n<p>（在上方窗格里）输入 C-x 1 关掉下方窗格。<br>（如果你在下方的窗格里输入 C-x 1，那么就会关掉上方的窗格。你可以把这个 命令看成是 “只保留一个窗格”――就是我们正在编辑的这个。）</p>\n</blockquote>\n<p>不同的窗格可以显示不同的缓冲区。如果你在一个窗格里用 C-x C-f 打开了一个 文件，另一个窗格并不会发生什么变化。任何一个窗格里都可以用来打开文件。</p>\n<p>用下面的方法可以在一个新开窗格里打开文件：</p>\n<blockquote>\n<p>输入 C-x 4 C-f，紧跟着输入一个文件名，再用 <Return> 结束。<br>可以看到你指定的文件出现在下方的窗格中，同时光标也跳到了那里。</p>\n</blockquote>\n<blockquote>\n<p>输入 C-x o 回到上方的窗格，然后再用 C-x 1 关掉下方窗格。</p>\n</blockquote>\n<h1 id=\"16-多窗口（MULTIPLE-FRAMES）\"><a href=\"#16-多窗口（MULTIPLE-FRAMES）\" class=\"headerlink\" title=\"16 多窗口（MULTIPLE FRAMES）\"></a>16 多窗口（MULTIPLE FRAMES）</h1><p>Emacs 可以创建多个窗口。窗口由许多窗格以及菜单、滚动条、回显区等组成。 在图形界面下，多个窗口可以同时显示出来。在文本终端中，只能同时显示一个 窗口。</p>\n<blockquote>\n<p>输入 M-x make-frame <Return>。<br>可以看到一个新的窗口出现在了你的屏幕上。</p>\n</blockquote>\n<p>你可以在新的窗口里做最初的窗口里可以做的任何事情。第一个窗口没有什么特 别的。</p>\n<blockquote>\n<p>输入 M-x delete-frame <Return>.<br>这个命令将会关闭选中的窗口。</p>\n</blockquote>\n<p>你也可以通过图形系统来关闭某个窗口（通常是在窗口上面的某个角落里的一个 “X” 按钮）。如果你关闭的是 Emacs 进程的最后一个窗口， Emacs 将会退出。</p>\n<h1 id=\"17-递归编辑（RECURSIVE-EDITING-LEVELS）\"><a href=\"#17-递归编辑（RECURSIVE-EDITING-LEVELS）\" class=\"headerlink\" title=\"17 递归编辑（RECURSIVE EDITING LEVELS）\"></a>17 递归编辑（RECURSIVE EDITING LEVELS）</h1><p>有时候你会进入所谓的 “递归编辑”。递归编辑状态由位于状态栏的方括号所指 示，其中包含了用小括号来指明的模式名称。比如说，你有时可能会看到 [(Fundamental)]，而不是 (Fundamental)。【比如在用 M-% 进行交互式替换的 时候你又用了 C-s 进行搜索，这时替换模式并没有结束，但你又进入了搜索模式， 这就是所谓的递归编辑。】</p>\n<p>离开递归编辑可以用 ESC ESC ESC。这是一个最通用的 “离开” 命令，你甚至可 以使用它来关掉多余的窗格，或者离开小缓冲。</p>\n<blockquote>\n<p>输入 M-x 进入小缓冲；然后输入 ESC ESC ESC 离开。<br>你不能用 C-g 退出递归编辑，因为 C-g 的作用是取消 “本层递归编辑之内” 的 命令和其参数（arguments）。</p>\n</blockquote>\n<h1 id=\"18-获得更多帮助（GETTING-MORE-HELP）\"><a href=\"#18-获得更多帮助（GETTING-MORE-HELP）\" class=\"headerlink\" title=\"18 获得更多帮助（GETTING MORE HELP）\"></a>18 获得更多帮助（GETTING MORE HELP）</h1><p>本快速指南的目的仅仅是帮助你在 Emacs 的海洋里下水，不至于束手无策望洋兴 叹。有关 Emacs 的话题可谓汗牛充栋，这里自然是难尽万一。不过 Emacs 很理 解你求知若渴的心情，因为它提供的强大功能实在是太多了。为此，Emacs 提供 了一些命令来查看 Emacs 的命令文档，这些命令都以 CONTROL-h 开头，这个字 符也因此被称为 “帮助（Help）字符”。</p>\n<p>要使用帮助（Help）功能，请先输入 C-h，然后再输入一个字符以说明你需要什 么帮助。如果你连自己到底需要什么帮助都不知道，那么就输入 C-h ?，Emacs 会告诉你它能提供了哪些帮助。如果你按了 C-h 又想反悔，可以用 C-g 取消。</p>\n<p>（如果你按 C-h 之后没有任何帮助信息显示出来，那么试试 F1 键或者 M-x help <Return> 。）</p>\n<p>最基本的帮助功能是 C-h c。输入 C-h c 之后再输入一个组合键，Emacs 会给出 这个命令的简要说明。</p>\n<blockquote>\n<p>输入 C-h c C-p。<br>显示的消息应该会是这样：</p>\n</blockquote>\n<p>C-p runs the command previous-line<br>这条消息显示了 C-p 命令对应的函数名。命令的功能由函数完成，所以函数名 本身也可以被看成是最简单的文档――至少对于你已经学过的命令来说，它们的函 数名足以解释它们的功能了。</p>\n<p>多字符命令一样可以用 C-h c 来查看。</p>\n<p>想得到更多的信息，请把 C-h c 换成 C-h k 试试看。</p>\n<blockquote>\n<p>输入 C-h k C-p。<br>上面的命令会新打开一个 Emacs 窗格以显示函数的名称及其文档。你读完之后可 以用 C-x 1 关掉这个帮助窗格。当然你并不需要立即这样做，你完全可以先在编 辑窗格里做点别的事情，然后再关掉帮助窗格。</p>\n</blockquote>\n<p>还有一些其它有用的 C-h 命令：</p>\n<p><strong>C-h f        解释一个函数。需要输入函数名。</strong></p>\n<blockquote>\n<p>试试看，输入 C-h f previous-line <Return>。<br>Emacs 会给出它所知道的所有有关 “实现 C-p 命令功能的函数” 的信息。</p>\n</blockquote>\n<p><strong>C-h v 用来显示 Emacs 变量的文档。Emacs 变量可以被用来 “定制 Emacs 的行 为”。同样，你需要输入变量的名称。</strong></p>\n<p><strong>C-h a 相关命令搜索（Command Apropos）。 输入一个关键词然后 Emacs 会列出所有命令名中包含此关键词 的命令。</strong><br>这些命令全都可以用 M-x 来启动。对于某些命令来说， 相关命令搜索还会列出一两个组合键。</p>\n<blockquote>\n<p>输入 C-h a file <Return>。<br>Emacs 会在另一个窗格里显示一个 M-x 命令列表，这个列表包含了所有名称中含 有 “file” 的命令。你可以看到像 “C-x C-f” 这样的组合键显示在“find-file” 这样的命令名的旁边。</p>\n</blockquote>\n<blockquote>\n<p>用 C-M-v 来回滚动 help 窗格，多试几次。<br>输入 C-x 1 来删除 help 窗格。</p>\n</blockquote>\n<p><strong>C-h i 阅读手册（也就是通常讲的 Info）。</strong><br>这个命令会打开一个称为 “<em>info</em>” 的特殊缓冲区，在那里， 你可以阅读安装在系统里的软件包使用手册。要读 Emacs 的使用手册，按 m emacs <Return> 就可以了。如果你之前从没用过 Info 系统，那么请按“?”，Emacs 会带你进入 Info 的使用指南。在看完本快速指南之后，Emacs Info 会成为你的主要参考文档。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>简单整理了下 Emacs 指令，以备查阅。</p>\n<p>Emacs 键盘命令通常包含 CONTROL 键（有时候以 CTRL 或 CTL 来标示）和 META 键（有时候用 EDIT 或 ALT 来标示）。为了避免每次都要写出全名，我们 约定使用下述缩写：</p>\n<p>C-<chr>  表示当输入字符 <chr> 时按住 CONTROL 键。<br>         因此 C-f 就表示：按住 CONTROL 键再输入 f。</p>\n<p>M-<chr>  表示当输入字符 <chr> 时按住 META（或 EDIT 或 ALT）键。<br>         如果你的键盘上没有 META 、EDIT 或 ALT 键，用下述方法也等效：<br>         先按一下 ESC 键然后放开，再输入 <chr>。我们用 <ESC> 来表示<br>         ESC 键。</p>\n<p>重要提示：要退出 Emacs，请用 C-x C-c（两个连续的组合键）。 要退出一个正在运行中的命令，请用 C-g。 </p>\n<h1 id=\"1-小结（SUMMARY）\"><a href=\"#1-小结（SUMMARY）\" class=\"headerlink\" title=\"1 小结（SUMMARY）\"></a>1 小结（SUMMARY）</h1><p>以下命令在翻页浏览时相当有用：</p>\n<p><strong>C-v     向前移动一屏<br>M-v     向后移动一屏<br>C-l     重绘屏幕，并将光标所在行置于屏幕的中央<br>        （注意是 CONTROL-L，不是 CONTROL-1）</strong></p>\n<blockquote>\n<p>找到光标，留意其附近的文字，然后输入 C-l。<br>找找光标在哪里，你会发现其附近的文字与之前相同，位置却变为屏幕的中心。 如果你再次输入 C-l ，附近的文字将移动到屏幕的顶端。再次输入 C-l ， 文字将移动到底端。</p>\n</blockquote>\n<p>如果你的键盘上有 PageUp 和 PageDn，也可以用这两个键来滚屏。不过使用 C-v 和 M-v 的效率要更高一些。</p>\n<h1 id=\"2-基本的光标控制（BASIC-CURSOR-CONTROL）\"><a href=\"#2-基本的光标控制（BASIC-CURSOR-CONTROL）\" class=\"headerlink\" title=\"2 基本的光标控制（BASIC CURSOR CONTROL）\"></a>2 基本的光标控制（BASIC CURSOR CONTROL）</h1><p>整屏的移动很有用，但是如何在文字中精确定位呢？</p>\n<p>有几种方式可以选择。用方向键当然可以，不过更有效率的方法是保持双手位于 主键盘区，然后使用 C-p 、 C-b 、 C-f 和 C-n 这四个命令。它们的功能和方 向键是一样的，如下图所示:</p>\n<pre><code>                         上一行 C-p\n                              :\n                              :\n        向左移 C-b .... 目前光标位置 .... 向右移 C-f\n                              :\n                              :\n                         下一行 C-n\n</code></pre>\n<blockquote>\n<p>用 C-n 或 C-p 将光标移到上图的中央。<br>  按 C-l，整幅图会被显示在屏幕的中央。<br>“P N B F” 四个字母分别代表了四个词，用这四个词记忆这些组合键会更容易： P 代表 previous（上一行），N 代表 next（下一行），B 代表 backward（回 退），而 F 则代表 forward（前进）。这些组合键今后将与你形影不离。</p>\n</blockquote>\n<p>每行文字都以一个 “换行符” 结束，“换行符”把行与行区分开来。（通常情况下， 一个文件的最后一行会有一个换行符，但是 Emacs 不强制要求这一点。）</p>\n<blockquote>\n<p>在一行的行头输入 C-b。<br>光标应该会移动到前一行的行尾，因为光标在回退过程中越过了换行符。</p>\n</blockquote>\n<p>同样 C-f 也可以像 C-b 一样越过换行符。</p>\n<blockquote>\n<p>连按几次 C-b，感受一下光标的移动。<br>然后按几次 C-f 回到本行的行尾。 再按一次 C-f，光标会移动到下一行。</p>\n</blockquote>\n<p>当你移动光标穿越屏幕的上下边界时，在边界外的文字会移动到屏幕内，这称为 “滚动”（scrolling）。滚动使得光标可以被移动到文字中的任何位置，并且还 不会让光标跑到屏幕外边去。</p>\n<blockquote>\n<p>用 C-n 将光标下移，一直越过屏幕边界，同时观察发生了什么变化。<br>如果你嫌一个字符一个字符地挪光标太慢，你还可以一个词一个词地跳。M-f (META-f) 可以将光标往前移动一个词，而 M-b 则是往后移。【这里的 “词” 指 英文单词，对中文来说，则是指移动到下一个标点符号。】</p>\n</blockquote>\n<blockquote>\n<p>试试 M-f 和 M-b。<br>如果光标停在一个词的中间，M-f 会移动到这个词的末尾。如果光标处于词与词 之间的空白处，M-f 会移动到下一个词的末尾。M-b 的功能类似，只是方向相反。</p>\n</blockquote>\n<blockquote>\n<p>按几次 M-f 和 M-b，中间夹杂一些 C-f 和 C-b。<br>你可以观察到 M-f 和 M-b 在不同位置上所表现出来的不同行为。</p>\n</blockquote>\n<p>请注意 C-f 、C-b 和 M-f 、M-b 两对之间的类比关系。通常的惯例是：META 系 列组合键用来操作 “由语言定义的单位（比如词、句子、段落）”，而 CONTROL 系列组合键用来操作 “与语言无关的基本单位（比如字符、行等等）”。</p>\n<p>类似的惯例在 “行” 与“句子”之间也同样适用：C-a 和 C-e 可以将光标移动到 “一行”的头部和尾部；而 M-a 和 M-e 则将光标移动到 “一句” 的头部和尾部。</p>\n<blockquote>\n<p>按两次 C-a，再按两次 C-e。<br>按两次 M-a，再按两次 M-e。</p>\n</blockquote>\n<p>想一想为什么重复的 C-a 命令会没有作用，而重复的 M-a 命令则会让光标不断 地回退到上一个句子。虽然这个类比规律并不严格，但是很自然。</p>\n<p>光标停留的位置也可以称作 “点位”（point）。或者干脆说，光标指示出了屏幕 上“点位” 在文本中的位置。</p>\n<p>这里对简单的光标移动命令做一个总结，其中也包括了整词和整句的移动：</p>\n<p><strong>C-f     向右移动一个字符<br>C-b     向左移动一个字符</strong></p>\n<p><strong>M-f     向右移动一个词【对中文是移动到下一个标点符号】<br>M-b     向左移动一个词【对中文是移动到上一个标点符号】</strong></p>\n<p><strong>C-n     移动到下一行<br>C-p     移动到上一行</strong></p>\n<p><strong>C-a     移动到行首<br>C-e     移动到行尾</strong></p>\n<p><strong>M-a     移动到句首<br>M-e     移动到句尾</strong></p>\n<blockquote>\n<p>把上面所有的命令都练习几次，这些可都是最常用的命令。<br>这里还要介绍两个重要的光标移动命令：M-&lt;（META 小于号）可以将光标移动到 所有文字的最开头；M-&gt; （META 大于号）可以将光标移动到所有文字的最末尾。</p>\n</blockquote>\n<p>注意，在大部分键盘上，小于号（&lt;）需要用上档键（Shift）来输入，所以在这 些键盘上你应该用 Shift 键来输入 M-&lt;，如果不按 Shift 键，你输入的会是 M-comma（META 逗号）。</p>\n<p>大部分的 Emacs 命令接受数字参数，并且对于多数命令而言，这些数字参数的作 用是指定命令的重复次数。为一个命令指定数字参数（也就是重复次数）的方法 是：先输入 C-u，然后输入数字作为参数，最后再输入命令。如果你有 META （或 EDIT 或 ALT）键，那么还有另一种办法：按住 META 键不放，然后输入数字。不 过我们还是建议你用 C-u，因为它在任何终端机上都能用。这种数字参数也称为 “前缀参数”，意思是说这个参数是先于使用它的命令而输入的。</p>\n<p>举例来说， C-u 8 C-f 会向前移动 8 个字符。</p>\n<blockquote>\n<p>为 C-n 或者 C-p 指定一个数字参数，这样你可以只用一个命令就把光标移动<br>到本行的附近。</p>\n</blockquote>\n<p>虽然大部分命令把数字参数解释为其重复次数，但是也有些命令例外，它们将数 字参数另做它用。比如有些命令（我们目前还没学到）仅仅将前缀参数作为一个 标志――只要给出有一个前缀参数，不管其值为何，它都会改变命令的功能。</p>\n<p>而 C-v 和 M-v 则属于另一种类型的例外。当给定一个参数时，它们将滚动你指 定的 “行数”，而不是 “屏数”。举例来说，C-u 8 C-v 将文本向下滚动 8 行。</p>\n<blockquote>\n<p>现在试试看，输入 C-u 8 C-v。<br>这个命令应该已经将文字向上滚动了 8 行。如果你想将它再次地向下滚动，你可 以给定一个参数然后执行 M-v。</p>\n</blockquote>\n<p>如果你正在使用图形界面，比如 X 或者微软的 Windows，那么在 Emacs 窗 口的一边应该有一个长方形的区域叫 “滚动条”。你可以用鼠标操纵滚动条来滚动 文字。</p>\n<p>如果你的鼠标有滚轮的话，你也可以使用滚轮来滚动。</p>\n<h1 id=\"3-如果-EMACS-失去响应（IF-EMACS-STOPS-RESPONDING）\"><a href=\"#3-如果-EMACS-失去响应（IF-EMACS-STOPS-RESPONDING）\" class=\"headerlink\" title=\"3 如果 EMACS 失去响应（IF EMACS STOPS RESPONDING）\"></a>3 如果 EMACS 失去响应（IF EMACS STOPS RESPONDING）</h1><p>如果 Emacs 对你的命令失去响应，你可以用 C-g 来安全地终止这条命令。C-g 也可以终止一条执行过久的命令。</p>\n<p><strong>C-g 还可以取消数字参数和只输入到一半的命令。</strong></p>\n<blockquote>\n<p>输入 C-u 100 设定一个值为 100 的数字参数，然后按 C-g。<br>现在再按 C-f，光标应该只会移动一个字符，因为你已经用 C-g 取消了参数。</p>\n</blockquote>\n<p>如果你不小心按了一下 <ESC>，你也可以用 C-g 来取消它。 【这个说法似乎有问题，因为按照这个按键顺序输入的应该是 C-M-g。 取消 <ESC> 的正确做法是再连按两次 <ESC>。】</p>\n<h1 id=\"4-被禁用的命令（DISABLED-COMMANDS）\"><a href=\"#4-被禁用的命令（DISABLED-COMMANDS）\" class=\"headerlink\" title=\"4 被禁用的命令（DISABLED COMMANDS）\"></a>4 被禁用的命令（DISABLED COMMANDS）</h1><p>有一些 Emacs 命令被 “禁用” 了，以避免初学者在不了解其确切功能的情况下误 用而造成麻烦。</p>\n<p>如果你用到了一个被禁用的命令，Emacs 会显示一个提示消息，告诉你这个命令 到底是干什么的，询问你是否要继续，并在得到你的肯定之后再执行这命令。</p>\n<p>如果你真的想用这条命令，在 Emacs 询问你的时候应该按空格。一般来说，如果 你不想用，就按 “n”。</p>\n<blockquote>\n<p>试试 C-x C-l （这是一个被禁用的命令）<br>然后用 n 来回答询问。</p>\n</blockquote>\n<h1 id=\"5-窗格（WINDOWS）\"><a href=\"#5-窗格（WINDOWS）\" class=\"headerlink\" title=\"5 窗格（WINDOWS）\"></a>5 窗格（WINDOWS）</h1><p>Emacs 可以有多个 “窗格”，每个窗格显示不同的文字。后面会介绍怎么对付多个窗格，现在我们先学会如何关掉多余的窗格。其实也很简单：</p>\n<p><strong>C-x 1 只保留一个窗格（也就是关掉其它所有窗格）。</strong></p>\n<p>也就是先按 CONTROL-x 然后再按 1。C-x 1 会保留光标所在的窗格，并将其扩大到整个屏幕，同时关掉所有其它的窗格。</p>\n<blockquote>\n<p>把光标移到本行然后输入 C-u 0 C-l。<br>输入 C-h k C-f。观察当一个新窗格出现时当前窗格（用来显示C-f 命令的文档）是如何缩小的。</p>\n</blockquote>\n<blockquote>\n<p>输入 C-x 1 关掉文档窗格。<br>有一系列命令是以 CONTROL-x 开始的，这些命令许多都跟 “窗格、文件、缓冲区 【缓冲区（buffer）会在后文详细介绍】” 等等诸如此类的东西有关，其中有些 命令可能包含了 2 个、3 个或者 4 个字符。</p>\n</blockquote>\n<h1 id=\"6-插入与删除（INSERTING-AND-DELETING）\"><a href=\"#6-插入与删除（INSERTING-AND-DELETING）\" class=\"headerlink\" title=\"6 插入与删除（INSERTING AND DELETING）\"></a>6 插入与删除（INSERTING AND DELETING）</h1><p>插入文字很简单，直接敲键盘就可以了。普通的字符，比如 A、7、* 等等，会 随着你的输入而插入。要插入一个换行符，输入 <Return>（这个键在键盘上有 时会被标注成 “Enter”）。</p>\n<p>你可以用 <DEL> 来删除光标左边的字符，这个键通常被标注为 “Backspace”――跟 你在 Emacs 之外的用法应该一样，删除最后一个输入的字符。</p>\n<p>你的键盘上可能有另外一个键，标注着 <Delete>，但那个不是我们所说的 <DEL>。</p>\n<p>如果一行文字很长、超出了窗格的宽度，显示不下的部分会在紧邻的下一行继续 显示。如果你使用的是图形界面，文本区域两边的狭窄区域（左右 “边缘”）会出 现小小的转弯箭头，表明这是某一行的接续显示。如果你使用的是文本终端，接 续显示由屏幕最右边一列的一个反斜线来表示。</p>\n<p>好，现在你应该已经掌握了最基本的的文本插入和修改功能，其实删除还可以 “以词为单位”进行，下面是一个关于 “删除” 操作的小结：</p>\n<p><strong><DEL>        删除光标前的一个字符<br>C-d          删除光标后的一个字符</strong></p>\n<p><strong>M-<DEL>      移除光标前的一个词<br>M-d          移除光标后的一个词</strong></p>\n<p><strong>C-k          移除从光标到“行尾”间的字符<br>M-k          移除从光标到“句尾”间的字符</strong><br>【可能你已经注意到了 “删除（delete）” 和“移除（kill）”的用词区别，后文会有详细说明。】</p>\n<p>注意 “<DEL> 和 C-d” 还有 “M-<DEL> 和 M-d” 是根据前述惯例从 C-f 和 M-f 衍生 出来的（其实 &lt; DEL &gt; 不是控制字符，我们先忽略这一点）。C-k 和 M-k 的关系在 某种程度上与 C-e 和 M-e 一样――如果把 “一行” 和“一句”作一个类比的话。</p>\n<p>你也可以用一种通用的办法来移除缓冲区里的任何一部分：首先把光标移动到你 想要移除的区域的一端，然后按 C-<SPC>（<SPC > 指空格）【注意，C-<SPC> 往 往被中文用户设定成输入法热键，如果这样，C-<SPC> 就被系统拦截而无法传递 给 Emacs 了，在这种情况下可以使用 C-@。】，然后将光标移动到你准备移除的 文字的另一端。这个时候， Emacs 会高亮光标和你按下 C-<SPC> 之间的文本。 最后，按下 C-w 。这样就可以把位于这两点之间的所有文字移除了。</p>\n<blockquote>\n<p>移动光标到上一段开头的“你”字。<br>输入 C-<SPC> 。Emacs 应该会在屏幕的下方显示一个“Mark set”的消息。<br>移动光标到第二行中的“端”字。<br>输入 C-w，从“你”开始到“端”之前的文字被全部移除。</p>\n</blockquote>\n<p>注意,“移除（kill）”和 “删除（delete）” 的不同在于被移除的东西可以被重新 插入（在任何位置），而被删除的就不能使用相同的方法重新插入了（不过可以 通过撤销一个删除命令来做到，后文会提到）。【实际上，移除掉的东西虽然看 起来 “消失” 了，但实际上被 Emacs 记录了下来，因此还可以找回来；而删除掉 的东西虽然也可能还在内存里，但是已经被 Emacs“抛弃”了，所以就找不回来 了。】重新插入被移除的文字称为“召回（yank）”。一般而言，那些可能消除很 多文字的命令会把消除掉的文字记录下来（它们被设定成了“可召回”），而那些 只消除一个字符或者只消除空白的命令就不会记录被消除的内容（自然你也就无 法召回了）。</p>\n<blockquote>\n<p>移动光标到一非空白行的行头，然后输入 C-k 移除那一行上的文字。<br>再次 C-k，你可以看到它移除了跟在那一行后面的换行符。</p>\n</blockquote>\n<p>注意，单独的 C-k 会把一行的内容移除，而第二个 C-k 则会移除换行符，并使 其后所有的行都向上移动。C-k 处理数字参数的方式很特别，它会把参数指定的 那么多行连同其后的换行符一起移除，而不仅仅是重复 C-k 而已。比如 C-u 2 C-k 会把两行以及它们的换行符移除；而如果只是输入 C-k 两次显然不是这个结果。</p>\n<p>重新插入被移除的文字恢复的动作称为 “召回（yanking）”。（就好像把别人从你身边 移走的东西又猛力地拉回来。）你可以在你删除文字的地方召回，也可以在别的 地方召回，还可以多次召回同样的文字以得到它的多个拷贝。很多其它的编辑器 把移除和召回叫做“剪切” 和“粘贴” （详情可见 Emacs 使用手册里的术语表）。</p>\n<p>召回的命令是 C-y。它会在光标所在处插入你最后移除的文字。</p>\n<p>C-y 可以召回最近一次移除的内容，那如何召回前几次移除的内容呢？它们当然 没有丢，你可以用 M-y 来召回它们。在用 C-y 召回最近移除的文字之后，紧接 着再按 M-y 就可以召回再前一次被移除的内容，再按一次 M-y 又可以召回再上 一次的…… 连续使用 M-y 直到找到你想要召回的东西，然后什么也不用做，继续 编辑就行了。</p>\n<p>如果连续按 M-y 很多次，你可能会回到起始点，也就是最近移除的文字。 【看得出这实际上是一个环。】</p>\n<h1 id=\"7-撤销（UNDO）\"><a href=\"#7-撤销（UNDO）\" class=\"headerlink\" title=\"7 撤销（UNDO）\"></a>7 撤销（UNDO）</h1><p>如果你修改了一段文字，又觉得改得不好，可以用 undo 命令进行撤销：C-/。</p>\n<p>通常 C-/ 会消除一个命令所造成的所有改变；如果你在一行中连续多次地使用 C-/，你会把以前的命令也依次撤销。</p>\n<p>但是有两个例外： 1） 没有改变文字的命令不算（包括光标移动命令和滚动命令） 2） 从键盘输入的字符以组为单位――每组最多 20 个字符――来进行处理。 （这是为了减少你在撤销 “插入文字” 动作时需要输入 C-/ 的次数）</p>\n<blockquote>\n<p>用 C-k 将这一行移除，然后输入 C-/ ，它会再次出现。<br>C-_ 也是撤销命令；它的作用跟 C-/ 一样，但是它比较容易多次输入。在 某些终端上，输入 C-/ 实际上向 Emacs 发送的是 C-_ 。 另外， C-x u 和 C-/ 完全一样，但是按起来有些麻烦。</p>\n</blockquote>\n<p>数字参数对于 C-/ 、 C-_ 和 C-x u 的意义是执行撤销的重复次数。</p>\n<h1 id=\"8-文件（FILE）\"><a href=\"#8-文件（FILE）\" class=\"headerlink\" title=\"8 文件（FILE）\"></a>8 文件（FILE）</h1><p>想保存工作成果就要记得存盘，否则一旦退出 Emacs 你编辑的文字就会丢失。要 存盘，就要在编辑前 “寻找” 到一个存盘文件。（这个过程通常也被称为“访问” 文件。）</p>\n<p>寻找到一个文件意味着你可以在 Emacs 里查看这个文件的内容。从许多角度看， 这就等于你在直接编辑这个文件，只是你所做的修改只有在 “存盘” 的时候才会 被写入文件。也正因为如此，你可以丢弃一个写到一半的文件而不必把这个残缺 文件也保存到计算机上。在存盘的时候，Emacs 会把存盘前的文件重命名保存， 以防你改完之后又想反悔。</p>\n<p>在屏幕的下方，你应该能够看到头部有短线 “-” 的一行，行首通常是一些诸如 “ -:— TUTORIAL.cn” 的文字，这些文字代表了你当前正在访问的文件。比如你现 在正在访问的文件是对 Emacs 快速指南的一份临时拷贝，叫做“TUTORIAL.cn”。 每当 Emacs 寻找到一个文件，文件名就会出现在这个位置。</p>\n<p>寻找文件的命令有一个特点，那就是你必须给出文件名。我们称这个命令 “读入 了一个参数”（在这里，这个参数显然就是文件名）。在你输入这条命令之后：</p>\n<p><strong>C-x C-f   寻找一个文件</strong><br>Emacs 会提示你输入文件名。你输入的文件名会出现在屏幕最底端的一行，这一 行被称为小缓冲（minibuffer），在小缓冲里你可以使用通常的 Emacs 编辑命令 来编辑文件名。</p>\n<p>在小缓冲里输入文件名（其实输入其它东西也一样）时可以用 C-g 取消。</p>\n<blockquote>\n<p>输入 C-x C-f，然后输入 C-g<br>这会关掉小缓冲，同时也会取消使用小缓冲的 C-x C-f 命令。 当然了，你也没有找任何文件。</p>\n</blockquote>\n<p>用 <Return> 结束文件名的输入。之后，小缓冲会消失，C-x C-f 将会去寻找你 指定的文件。小缓冲在 C-x C-f 命令结束之后也会消失。</p>\n<p>文件被显示在了屏幕上，你可以开始编辑了。存盘用这条命令：</p>\n<p><strong>C-x C-s   储存这个文件</strong><br>这条命令把 Emacs 中的文字存储到文件中。第一次存盘的时候 Emacs 会将原文 件重命名以备份。重命名的规则通常是在原文件名之后添加一个 “~” 字符。 【对许多人来说，这是一个烦人的特性，关掉文件备份可以用如下命令： M-x customize-variable <Return> make-backup-files <Return>】</p>\n<p>存盘结束后，Emacs 会显示写入文件的文件名。你最好养成经常存盘的习惯，这 可以减少系统崩溃和死机给你带来的损失（也可参见下面的 “自动保存” 一节）。</p>\n<blockquote>\n<p>输入 C-x C-s TUTORIAL.cn <Return> 。<br>这将会把该指南保存为一个名为 TUTORIAL.cn 的文件，并且在屏幕的下方显 示一条消息：“Wrote …TUTORIAL.cn”。</p>\n</blockquote>\n<p>你不但可以寻找一个已有的文件来查看或编辑，还可以寻找一个不存在的文件。 实际上这正是 Emacs 创建新文件的方法：找到不存在的新文件。事实上，只有 在存盘的时候，Emacs 才会真正创建这个文件。而在这之后的一切就跟编辑一个 已有文件没有区别了。</p>\n<h1 id=\"9-缓冲区（BUFFER）\"><a href=\"#9-缓冲区（BUFFER）\" class=\"headerlink\" title=\"9 缓冲区（BUFFER）\"></a>9 缓冲区（BUFFER）</h1><p>你可以用 C-x C-f 找到并打开第二个文件，但第一个文件仍然在 Emacs 中。要 切回第一个文件，一种办法是再用一次 C-x C-f。这样，你就可以在 Emacs 中同 时打开多个文件。</p>\n<p>Emacs 把每个编辑中的文件都放在一个称为 “缓冲区（buffer）” 的地方。每寻 找到一个文件，Emacs 就在其内部开辟一个缓冲区。用下面的命令可以列出当前 所有的缓冲区：</p>\n<p><strong>C-x C-b 列出缓冲区</strong></p>\n<blockquote>\n<p>现在就试一下 C-x C-b<br>观察一下缓冲区是如何被命名的，它很可能跟与其对应的文件同名。实际上，一 个 Emacs 窗格里的任何文字都是某个缓冲区的一部分。</p>\n</blockquote>\n<blockquote>\n<p>输入 C-x 1 离开缓冲区列表<br>不管存在多少缓冲区，任何时候都只能有一个 “当前” 缓冲区，也就是你正在编 辑的这个。如果你想编辑其它的缓冲区，就必须 “切换” 过去。上面讲过，用 C-x C-f 是一种办法。不过还有一个更简单的办法，那就是用 C-x b。用这条命 令，你必须输入缓冲区的名称。</p>\n</blockquote>\n<blockquote>\n<p>通过输入 C-x C-f foo <Return> 创建一个名为“foo”的文件。<br>然后输入 C-x b TUTORIAL.cn <Return> 回到这里。</p>\n</blockquote>\n<p>大多数情况下，缓冲区与跟其对应的文件是同名的（不包括目录名），不过这也 不是绝对的。用 C-x C-b 得到的缓冲区列表总是显示缓冲区名。</p>\n<p>缓冲区未必有对应文件。显示缓冲区列表的缓冲区（叫做 “<em>Buffer List</em>”）就 是这样。这个 TUTORIAL.cn 缓冲区起初没有对应的文件，但是现在有了，因为 在前一节你输入了 C-x C-s ， 将它保存成了一个文件。</p>\n<p>“<em>Messages</em>” 缓冲区也没有对应文件，这个缓冲区里存放的都是在 Emacs 底部 出现的消息。</p>\n<blockquote>\n<p>输入 C-x b <em>Messages</em> <Return> 瞅瞅消息缓冲区里都有什么东西。<br>然后再输入 C-x b TUTORIAL.cn <Return> 回到这里。</p>\n</blockquote>\n<p>如果你对某个文件做了些修改，然后切换到另一个文件，这个动作并不会帮你把 前一个文件存盘。对第一个文件的修改仍然仅存在于 Emacs 中，也就是在它对 应的缓冲区里。并且，对第二个文件的修改也不会影响到第一个文件。这很有用， 但也意味着你需要一个简便的办法来保存第一个文件的缓冲区。先切换回那个缓 冲区，再用 C-x C-s 存盘，太麻烦了。你需要一个更简便的方法，而 Emacs 已 经为你准备好了：</p>\n<p><strong>C-x s   保存多个缓冲区<br>C-x s 会找出所有已被修改但尚未存盘的缓冲区，然后向你逐个询问：是否需要存盘？</strong></p>\n<blockquote>\n<p>插入一行文字，然后输入 C-x s。<br>它应该会问你，是否要储存名为 TUTORIAL.cn 的缓冲区？ 按 “y” 告诉它你想存盘。</p>\n</blockquote>\n<h1 id=\"10-命令集扩展（EXTENDING-THE-COMMAND-SET）\"><a href=\"#10-命令集扩展（EXTENDING-THE-COMMAND-SET）\" class=\"headerlink\" title=\"10 命令集扩展（EXTENDING THE COMMAND SET）\"></a>10 命令集扩展（EXTENDING THE COMMAND SET）</h1><p>Emacs 的命令就像天上的星星，数也数不清。把它们都对应到 CONTROL 和 META 组合键上显然是不可能的。Emacs 用扩展（eXtend）命令来解决这个问题，扩展 命令有两种风格：</p>\n<p><strong>C-x     字符扩展。  C-x 之后输入另一个字符或者组合键。<br>M-x     命令名扩展。M-x 之后输入一个命令名。</strong><br>很多扩展命令都相当有用，虽然与你已经学过的命令比起来，他们可能不那么常 用。我们早已经见过一些扩展命令了，比如用 C-x C-f 寻找文件和用 C-x C-s 保存文件；退出 Emacs 用的 C-x C-c 也是扩展命令。（不用担心退出 Emacs 会 给你带来什么损失，Emacs 会在退出之前提醒你存盘的。）</p>\n<p>如果你使用图形界面，你不需要任何特殊的命令来切换 Emacs 和其他应用程序。 你可以使用鼠标或者窗口管理器的命令。然而，如果你使用只能同时显示一个应 用程序的文本终端，你需要 “挂起” Emacs ，以切换到其他的应用程序。</p>\n<p>C-z 可以暂时离开 Emacs――当然，你还可以再回来。在允许 C-z 的系统中，C-z 会把 Emacs“挂起”，也就是说，它会回到 shell 但不杀死 Emacs 的进程。在常用的 shell 中，通常可以用 “fg” 或者 “%emacs” 命令再次回到 Emacs 中。</p>\n<p>你最好在打算退出登陆的时候再用 C-x C-c。在把 Emacs 当做一个临时的编辑 器的时候（比如被一个邮件处理程序调用），也可以用 C-x C-c 退出。</p>\n<p>C-x 的扩展命令有很多，下面列出的是你已经学过的：</p>\n<p><strong>C-x C-f         寻找文件。<br>C-x C-s         保存文件。<br>C-x C-b         列出缓冲区。<br>C-x C-c         离开 Emacs。<br>C-x 1           关掉其它所有窗格，只保留一个。<br>C-x u           撤销。</strong></p>\n<p>用命令名扩展的命令通常并不常用，或只用在部分模式下。比如 replace-string（字符串替换）这个命令，它会把一个字符串替换成另一个。在 输入 M-x 之后，Emacs 会在屏幕底端向你询问并等待你输入命令名。如果你想 输入 “replace-string”，其实只需要敲“repl s<TAB>” 就行了，Emacs 会帮你自动补齐。输入完之后按 <Return> 提交。</p>\n<p>字符串替换命令需要两个参数――被替换的字符串和用来替换它的字符串。每个参数的输入都以换行符来结束。</p>\n<h1 id=\"11-自动保存（AUTO-SAVE）\"><a href=\"#11-自动保存（AUTO-SAVE）\" class=\"headerlink\" title=\"11 自动保存（AUTO SAVE）\"></a>11 自动保存（AUTO SAVE）</h1><p>如果你已经修改了一个文件，但是还没来得及存盘你的计算机就罢工了，那么你 所做的修改就很可能会丢失。为了避免这样的不幸发生，Emacs 会定期将正在编 辑的文件写入一个 “自动保存” 文件中。自动保存文件的文件名的头尾各有一个 “#”字符，比如你正在编辑的文件叫“hello.c”，那么它的自动保存文件就叫 “#hello.c#”。这个文件会在正常存盘之后被 Emacs 删除。</p>\n<p>所以，假如不幸真的发生了，你大可以从容地打开原来的文件（注意不是自动保 存文件）然后输入 M-x recover file <Return> 来恢复你的自动保存文件。在 提示确认的时候，输入 yes<Return>。</p>\n<h1 id=\"12-回显区（ECHO-AREA）\"><a href=\"#12-回显区（ECHO-AREA）\" class=\"headerlink\" title=\"12 回显区（ECHO AREA）\"></a>12 回显区（ECHO AREA）</h1><p>如果 Emacs 发现你输入多字符命令的节奏很慢，它会在窗格的下方称为 “回显区” 的地方给你提示。回显区位于屏幕的最下面一行。</p>\n<h1 id=\"13-状态栏（MODE-LINE）\"><a href=\"#13-状态栏（MODE-LINE）\" class=\"headerlink\" title=\"13 状态栏（MODE LINE）\"></a>13 状态栏（MODE LINE）</h1><p>位于回显区正上方的一行被称为 “状态栏”。状态栏上会显示一些信息，比如：</p>\n<p>-:**- TUTORIAL.cn 63% L749 (Fundamental)</p>\n<p>状态栏显示了 Emacs 的状态和你正在编辑的文字的一些信息。</p>\n<p>你应该知道文件名的意思吧？就是你找到的那个文件嘛。-NN%– 显示的是光标在 全文中的位置。如果位于文件的开头，那么就显示 –Top– 而不是 –00%–；如 果位于文件的末尾，就显示 –Bot–。如果文件很小，一屏就足以显示全部内容， 那么状态栏会显示 –All–。</p>\n<p>“L” 和其后的数字给出了光标所在行的行号。</p>\n<p>最开头的星号（*）表示你已经对文字做过改动。刚刚打开的文件肯定没有被改动 过，所以状态栏上显示的不是星号而是短线（-）。</p>\n<p>状态栏上小括号里的内容告诉你当前正在使用的编辑模式。缺省的模式是 Fundamental，就是你现在正在使用的这个。它是一种 “主模式”。</p>\n<p>Emacs 的主模式林林总总。有用来编辑程序代码的――比如 Lisp 模式；也有用 来编辑各种自然语言文本的――比如 Text 模式。任何情况下只能应用一个主模 式，其名称会显示在状态栏上，也就是现在显示 “Fundamental” 的地方。</p>\n<p>主模式通常会改变一些命令的行为。比方说，不管编辑什么语言的程序代码，你 都可以用一个相同的命令来添加注释。但是在不同的语言中注释的语法往往是不 同的，这时不同的主模式就会用各自不同的语法规则来添加注释。主模式都是可 以用 M-x 启动的扩展命令，M-x fundamental-mode 就可以切换到 Fundamental 模式。</p>\n<p>编辑自然语言文本――比如现在――应该用 Text 模式。</p>\n<blockquote>\n<p>输入 M-x text-mode <Return>。<br>别担心，什么都没变。不过细心一些可以发现，M-f 和 M-b 现在把单引号（’） 视为词的一部分了。而在先前的 Fundamental 模式中，M-f 和 M-b 都将单引号 视为分隔单词的符号。</p>\n</blockquote>\n<p>主模式通常都会搞一些类似的小动作，因为很多命令其实完成的是 “相同的工 作”，只是在不同环境下会有不同的工作方式而已。【所谓 “求同存异”，在 Emacs 里得到了很好的体现】</p>\n<p>用 C-h m 可以查看当前主模式的文档。</p>\n<blockquote>\n<p>把光标移动到下一行。<br>用 C-l C-l 将本行带到屏幕的最上方。<br>输入 C-h m，看看 Text 模式与 Fundamental 模式有哪些不同。<br>输入 C-x 1 关掉文档窗格。</p>\n</blockquote>\n<p>主模式之所以称之为 “主（major）” 模式，是因为同时还有“辅模式”（minor mode）存在。辅模式并不能替代主模式，而是提供一些辅助的功能。每个辅模式 都可以独立地开启和关闭，跟其它辅模式无关，跟主模式也无关。所以你可以不 使用辅模式，也可以只使用一个或同时使用多个辅模式。</p>\n<p>有一个叫做自动折行（Auto Fill）的辅模式很有用，特别是在编辑自然语言文本 的时候。启用自动折行后，Emacs 会在你打字超出一行边界时自动替你换行。</p>\n<p>用 M-x auto-fill-mode <Return> 启动自动折行模式。再用一次这条命令，自 动折行模式会被关闭。也就是说，如果自动折行模式没有被开启，这个命令会开 启它；如果已经开启了，这个命令会关闭它。所以我们说，这个命令可以用来 “开关（toggle）” 模式。</p>\n<blockquote>\n<p>现在输入 M-x auto-fill-mode <Return>。然后随便敲点什么，直到你看到它<br>分成两行。你必须敲一些空格，因为 Auto Fill 只在空白处进行断行。 【输入空格对英文来说是必须的，而对中文则不必。】</p>\n</blockquote>\n<p>行边界通常被设定为 70 个字符【这里指英文字符】，你可以用 C-x f 命令配合 数字参数来重新设定它。</p>\n<blockquote>\n<p>输入 C-x f 并传递参数 20： C-u 2 0 C-x f。<br>然后输入一些文字，观察 Emacs 的自动折行动作 最后再用 C-x f 将边界设回 70。</p>\n</blockquote>\n<p>如果你在段落的中间做了一些修改，那么自动折行模式不会替你把整个段落重新 折行，你需要用 M-q 手动折行。注意，光标必须位于你需要折行的那一段里。</p>\n<blockquote>\n<p>移动光标到前一段中，然后输入 M-q。</p>\n</blockquote>\n<h1 id=\"14-搜索（SEARCHING）\"><a href=\"#14-搜索（SEARCHING）\" class=\"headerlink\" title=\"14 搜索（SEARCHING）\"></a>14 搜索（SEARCHING）</h1><p>Emacs 可以向前或向后搜索字符串（“字符串” 指的是一组连续的字符）。搜索命 令是一个移动光标的命令：搜索成功后，光标会停留在搜索目标出现的地方。</p>\n<p>Emacs 的搜索命令是 “渐进的（incremental）”。意思是搜索与输入同时进行： 你在键盘上一字一句地输入搜索词的过程中，Emacs 就已经开始替你搜索了。</p>\n<p><strong>C-s 是向前搜索，C-r 是向后搜索。</strong></p>\n<p>在按下 C-s 之后，回显区里会有 “I-search” 字样出现，表明目前 Emacs 正处 于 “渐进搜索” 状态，并等待你输入搜索字串。按 <Return> 可以结束搜索。</p>\n<blockquote>\n<p>输入 C-s 开始一个搜索。注意敲慢一点，一次输入一个字符。<br>慢慢输入 “cursor” 这个词，每敲一个字都停顿一下并观察光标。 现在你应该已曾经找到 “cursor” 这个词了。</p>\n</blockquote>\n<blockquote>\n<p>再按一次 C-s，搜索下一个“cursor”出现的位置。<br>现在按四次 <DEL> ，看看光标是如何移动的。<br>敲 <Return> 结束搜索。</p>\n</blockquote>\n<p>看仔细了么？在一次渐进式搜索中，Emacs 会尝试跳到搜索目标出现的位置。要 跳到下一个命中位置，就再按一次 C-s。如果找不到目标，Emacs 会发出 “哔” 的一声，告诉你搜索失败。在整个过程中，都可以用 C-g 来终止搜索。【你会发 现 C-g 会让光标回到搜索开始的位置，而 <Return> 则让光标留在搜索结果上， 这是很有用的功能。】</p>\n<p>在渐进式搜索中，按 <DEL> 会 “撤回” 到最近一次搜索的命中位置。如果之前没 有一个命中， <DEL> 会抹去搜索字符串中的最后一个字符。比如你已经输入了 “c”，光标就停在 “c” 第一次出现的位置，再输入 “u”，光标停在“cu” 第一次出现 的位置，这时再按 <DEL> ，“u”就从搜索字串中消失了，然后光标会回到 “c” 第 一次出现的位置。</p>\n<p>另外，如果你在搜索的时候输入了 control 或者 meta 组合键的话，搜索可能会 结束。（也有例外，比如 C-s 和 C-r 这些用于搜索的命令。）</p>\n<p>前面说的都是 “向下” 搜索，如果想 “向上” 搜索，可以用 C-r。C-r 与 C-s 相比除了搜索方向相反之外，其余的操作都一样。</p>\n<h1 id=\"15-多窗格（MULTIPLE-WINDOWS）\"><a href=\"#15-多窗格（MULTIPLE-WINDOWS）\" class=\"headerlink\" title=\"15 多窗格（MULTIPLE WINDOWS）\"></a>15 多窗格（MULTIPLE WINDOWS）</h1><p>Emacs 的迷人之处很多，能够在屏幕上同时显示多个窗格就是其中之一。</p>\n<p>连续使用 C-x o 可以遍历所有窗格。“被选中的窗格”，也就是绝大多数的编辑 操作所发生的地方，是在你不打字时闪烁光标的那个窗格。其他的窗格有它们自 己的光标位置； 如果你在图形界面下运行 Emacs ，这些光标是镂空的长方形。</p>\n<p>当你在一个窗格中编辑，但用另一个窗格作为参考的时候，C-M-v 是很有用的命 令。无需离开被选中的窗格，你就可以用 C-M-v 命令滚动另外一个窗格中的文 字。【比如翻译和校对就很适合用这种方式进行。】</p>\n<p>C-M-v 是一个 CONTROL-META 组合键。如果你有 META （或 Alt）键的话，可以 同时按住 CONTROL 和 META 键并输入 v。CONTROL 和 META 键先按哪个都可以， 因为它们只是用来 “修饰（modify）” 你输入的字符的。</p>\n<p>如果你并没有 META 键，你也可以用 ESC 来代替，不过这样的话就要注意按键顺 序了：你必须先输入 ESC ，然后再输入 CONTROL-v。CONTROL-ESC v 是没用的， 因为 ESC 本身是一个字符键，而不是一个修饰键（modifier key）。</p>\n<blockquote>\n<p>（在上方窗格里）输入 C-x 1 关掉下方窗格。<br>（如果你在下方的窗格里输入 C-x 1，那么就会关掉上方的窗格。你可以把这个 命令看成是 “只保留一个窗格”――就是我们正在编辑的这个。）</p>\n</blockquote>\n<p>不同的窗格可以显示不同的缓冲区。如果你在一个窗格里用 C-x C-f 打开了一个 文件，另一个窗格并不会发生什么变化。任何一个窗格里都可以用来打开文件。</p>\n<p>用下面的方法可以在一个新开窗格里打开文件：</p>\n<blockquote>\n<p>输入 C-x 4 C-f，紧跟着输入一个文件名，再用 <Return> 结束。<br>可以看到你指定的文件出现在下方的窗格中，同时光标也跳到了那里。</p>\n</blockquote>\n<blockquote>\n<p>输入 C-x o 回到上方的窗格，然后再用 C-x 1 关掉下方窗格。</p>\n</blockquote>\n<h1 id=\"16-多窗口（MULTIPLE-FRAMES）\"><a href=\"#16-多窗口（MULTIPLE-FRAMES）\" class=\"headerlink\" title=\"16 多窗口（MULTIPLE FRAMES）\"></a>16 多窗口（MULTIPLE FRAMES）</h1><p>Emacs 可以创建多个窗口。窗口由许多窗格以及菜单、滚动条、回显区等组成。 在图形界面下，多个窗口可以同时显示出来。在文本终端中，只能同时显示一个 窗口。</p>\n<blockquote>\n<p>输入 M-x make-frame <Return>。<br>可以看到一个新的窗口出现在了你的屏幕上。</p>\n</blockquote>\n<p>你可以在新的窗口里做最初的窗口里可以做的任何事情。第一个窗口没有什么特 别的。</p>\n<blockquote>\n<p>输入 M-x delete-frame <Return>.<br>这个命令将会关闭选中的窗口。</p>\n</blockquote>\n<p>你也可以通过图形系统来关闭某个窗口（通常是在窗口上面的某个角落里的一个 “X” 按钮）。如果你关闭的是 Emacs 进程的最后一个窗口， Emacs 将会退出。</p>\n<h1 id=\"17-递归编辑（RECURSIVE-EDITING-LEVELS）\"><a href=\"#17-递归编辑（RECURSIVE-EDITING-LEVELS）\" class=\"headerlink\" title=\"17 递归编辑（RECURSIVE EDITING LEVELS）\"></a>17 递归编辑（RECURSIVE EDITING LEVELS）</h1><p>有时候你会进入所谓的 “递归编辑”。递归编辑状态由位于状态栏的方括号所指 示，其中包含了用小括号来指明的模式名称。比如说，你有时可能会看到 [(Fundamental)]，而不是 (Fundamental)。【比如在用 M-% 进行交互式替换的 时候你又用了 C-s 进行搜索，这时替换模式并没有结束，但你又进入了搜索模式， 这就是所谓的递归编辑。】</p>\n<p>离开递归编辑可以用 ESC ESC ESC。这是一个最通用的 “离开” 命令，你甚至可 以使用它来关掉多余的窗格，或者离开小缓冲。</p>\n<blockquote>\n<p>输入 M-x 进入小缓冲；然后输入 ESC ESC ESC 离开。<br>你不能用 C-g 退出递归编辑，因为 C-g 的作用是取消 “本层递归编辑之内” 的 命令和其参数（arguments）。</p>\n</blockquote>\n<h1 id=\"18-获得更多帮助（GETTING-MORE-HELP）\"><a href=\"#18-获得更多帮助（GETTING-MORE-HELP）\" class=\"headerlink\" title=\"18 获得更多帮助（GETTING MORE HELP）\"></a>18 获得更多帮助（GETTING MORE HELP）</h1><p>本快速指南的目的仅仅是帮助你在 Emacs 的海洋里下水，不至于束手无策望洋兴 叹。有关 Emacs 的话题可谓汗牛充栋，这里自然是难尽万一。不过 Emacs 很理 解你求知若渴的心情，因为它提供的强大功能实在是太多了。为此，Emacs 提供 了一些命令来查看 Emacs 的命令文档，这些命令都以 CONTROL-h 开头，这个字 符也因此被称为 “帮助（Help）字符”。</p>\n<p>要使用帮助（Help）功能，请先输入 C-h，然后再输入一个字符以说明你需要什 么帮助。如果你连自己到底需要什么帮助都不知道，那么就输入 C-h ?，Emacs 会告诉你它能提供了哪些帮助。如果你按了 C-h 又想反悔，可以用 C-g 取消。</p>\n<p>（如果你按 C-h 之后没有任何帮助信息显示出来，那么试试 F1 键或者 M-x help <Return> 。）</p>\n<p>最基本的帮助功能是 C-h c。输入 C-h c 之后再输入一个组合键，Emacs 会给出 这个命令的简要说明。</p>\n<blockquote>\n<p>输入 C-h c C-p。<br>显示的消息应该会是这样：</p>\n</blockquote>\n<p>C-p runs the command previous-line<br>这条消息显示了 C-p 命令对应的函数名。命令的功能由函数完成，所以函数名 本身也可以被看成是最简单的文档――至少对于你已经学过的命令来说，它们的函 数名足以解释它们的功能了。</p>\n<p>多字符命令一样可以用 C-h c 来查看。</p>\n<p>想得到更多的信息，请把 C-h c 换成 C-h k 试试看。</p>\n<blockquote>\n<p>输入 C-h k C-p。<br>上面的命令会新打开一个 Emacs 窗格以显示函数的名称及其文档。你读完之后可 以用 C-x 1 关掉这个帮助窗格。当然你并不需要立即这样做，你完全可以先在编 辑窗格里做点别的事情，然后再关掉帮助窗格。</p>\n</blockquote>\n<p>还有一些其它有用的 C-h 命令：</p>\n<p><strong>C-h f        解释一个函数。需要输入函数名。</strong></p>\n<blockquote>\n<p>试试看，输入 C-h f previous-line <Return>。<br>Emacs 会给出它所知道的所有有关 “实现 C-p 命令功能的函数” 的信息。</p>\n</blockquote>\n<p><strong>C-h v 用来显示 Emacs 变量的文档。Emacs 变量可以被用来 “定制 Emacs 的行 为”。同样，你需要输入变量的名称。</strong></p>\n<p><strong>C-h a 相关命令搜索（Command Apropos）。 输入一个关键词然后 Emacs 会列出所有命令名中包含此关键词 的命令。</strong><br>这些命令全都可以用 M-x 来启动。对于某些命令来说， 相关命令搜索还会列出一两个组合键。</p>\n<blockquote>\n<p>输入 C-h a file <Return>。<br>Emacs 会在另一个窗格里显示一个 M-x 命令列表，这个列表包含了所有名称中含 有 “file” 的命令。你可以看到像 “C-x C-f” 这样的组合键显示在“find-file” 这样的命令名的旁边。</p>\n</blockquote>\n<blockquote>\n<p>用 C-M-v 来回滚动 help 窗格，多试几次。<br>输入 C-x 1 来删除 help 窗格。</p>\n</blockquote>\n<p><strong>C-h i 阅读手册（也就是通常讲的 Info）。</strong><br>这个命令会打开一个称为 “<em>info</em>” 的特殊缓冲区，在那里， 你可以阅读安装在系统里的软件包使用手册。要读 Emacs 的使用手册，按 m emacs <Return> 就可以了。如果你之前从没用过 Info 系统，那么请按“?”，Emacs 会带你进入 Info 的使用指南。在看完本快速指南之后，Emacs Info 会成为你的主要参考文档。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"Emacs 快速简明指南","path":"1446338271/","eyeCatchImage":null,"excerpt":"<center>简单整理了下 Emacs 指令，以备查阅。</center>","date":{"_isAMomentObject":true,"_i":"2017-11-30T07:30:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-11-30T07:30:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"收集","tags":["Emacs"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Java 项目部署实践","description":"<center>简要记录如何在服务器上搭建相关环境，配置相关服务等操作。</center>","abbrlink":1026407118,"date":"2022-01-16T06:37:26.000Z","_content":"\n系统基于 CentOS7。\n\n# 配置环境\n\n## 安装 JDK\n\n查看 yum 库中的 JDK 安装包 ：`yum -y list java*`\n\n安装需要的 JDK 版本的所有程序：`yum -y install java-1.8.0-openjdk*`\n\n参考链接：[在CentOS7.4中安装jdk的几种方法及配置环境变量_勿忘初心的博客-CSDN博客_centos配置java环境变量](https://blog.csdn.net/qq_32786873/article/details/78749384)\n\n## 安装 Maven\n\n安装命令：`yum install -y apache-maven`\n\n修改镜像：`vi /usr/share/apache-maven/conf/settings.xml`\n\n```xml\n<mirror>\n  <id>alimaven</id>\n  <name>aliyun maven</name>\n  <url><http://maven.aliyun.com/nexus/content/groups/public/></url>\n  <mirrorOf>central</mirrorOf>\n</mirror>\n```\n\n参考链接：[CentOS上用yum安装Maven](https://www.jianshu.com/p/dfccd5de6032)\n\n## 安装 Docker\n\n安装命令：`yum -y install docker-ce`\n\n启动命令：`systemctl start docker`\n\n参考链接：[centos7安装Docker详细步骤（无坑版教程）](https://cloud.tencent.com/developer/article/1701451)\n\n修改加速地址：\n\n```bash\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"<https://xxx.mirror.aliyuncs.com>\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n参考链接：[官方镜像加速](https://help.aliyun.com/document_detail/60750.html#title-s0s-jjs-26k)\n\n# 项目部署\n\n## Jar 包方式\n\n使用 IDEA 内置 deployment，上传 jar 包到服务器。\n\n## Docker 方式\n\n在 /usr/lib/systemd/system/docker.service，配置远程访问。\n\n主要是在[Service]这个部分的 ExecStart 中，加上下面两个参数：\n\n```yaml\n-H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock\n```\n\n然后重启：\n\n```yaml\nsystemctl daemon-reload\nsystemctl restart docker\n```\n\n在 IDEA 中，连接 Docker：`tcp://ip:2375`。\n\n参考链接：\n\n[Docker开启Remote API 访问 2375端口](https://cloud.tencent.com/developer/article/1683689)\n\n[用idea部署springboot项目到docker_今日相乐，皆当喜欢的博客-CSDN博客_idea部署项目到docker](https://blog.csdn.net/weixin_42687829/article/details/104249583)\n\n# 运行命令\n\n后台运行：`nohup java -jar xxx.jar >temp.txt &`\n\n查看运行的任务：`jobs`\n\n如果想将某个作业调回前台控制，只需要 `fg + 编号` 即可。\n\n查看某端口占用的线程的pid：`netstat -nlp |grep :9181`\n\n查看当前运行的jar包程序进程号：`ps -ef|grep xxx.jar` 或者 `ps -aux | grep java`\n\n关闭进程：`kill -s 9 24204`\n\n参考链接：\n\n[Linux中jar包启动和jar包后台运行的实现方式](https://cloud.tencent.com/developer/article/1722069)\n\n[Java：idea打包jar包&部署到服务器过程全记录](https://lullabychen.github.io/2019/10/09/Java-IDEA打jar包-部署到服务器过程全记录/)\n\n# 项目架构\n\n## 搭建项目\n\n1. 在代码仓库新建项目，clone 到本地。\n2. 新建 Maven 工程，编辑 pom.xml 文件。（或使用 [start.spring.io](http://start.spring.io)、IDEA 内置 Initializr）groupId 定义当前 Maven项目隶属的实际项目，artifactId 建议使用实际项目作为前缀。\n3. 新建 Modules。\n\n\n\n参考链接：[Spring Data JDBC入门使用Demo - 掘金](https://juejin.cn/post/6906453629381804046)\n","source":"_posts/Java项目部署实践.md","raw":"---\ntitle: Java 项目部署实践\ntags:\n  - Java\n  - 实战\ncategories: 开发\ndescription: <center>简要记录如何在服务器上搭建相关环境，配置相关服务等操作。</center>\nabbrlink: 1026407118\ndate: 2022-01-16 14:37:26\n---\n\n系统基于 CentOS7。\n\n# 配置环境\n\n## 安装 JDK\n\n查看 yum 库中的 JDK 安装包 ：`yum -y list java*`\n\n安装需要的 JDK 版本的所有程序：`yum -y install java-1.8.0-openjdk*`\n\n参考链接：[在CentOS7.4中安装jdk的几种方法及配置环境变量_勿忘初心的博客-CSDN博客_centos配置java环境变量](https://blog.csdn.net/qq_32786873/article/details/78749384)\n\n## 安装 Maven\n\n安装命令：`yum install -y apache-maven`\n\n修改镜像：`vi /usr/share/apache-maven/conf/settings.xml`\n\n```xml\n<mirror>\n  <id>alimaven</id>\n  <name>aliyun maven</name>\n  <url><http://maven.aliyun.com/nexus/content/groups/public/></url>\n  <mirrorOf>central</mirrorOf>\n</mirror>\n```\n\n参考链接：[CentOS上用yum安装Maven](https://www.jianshu.com/p/dfccd5de6032)\n\n## 安装 Docker\n\n安装命令：`yum -y install docker-ce`\n\n启动命令：`systemctl start docker`\n\n参考链接：[centos7安装Docker详细步骤（无坑版教程）](https://cloud.tencent.com/developer/article/1701451)\n\n修改加速地址：\n\n```bash\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"<https://xxx.mirror.aliyuncs.com>\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n参考链接：[官方镜像加速](https://help.aliyun.com/document_detail/60750.html#title-s0s-jjs-26k)\n\n# 项目部署\n\n## Jar 包方式\n\n使用 IDEA 内置 deployment，上传 jar 包到服务器。\n\n## Docker 方式\n\n在 /usr/lib/systemd/system/docker.service，配置远程访问。\n\n主要是在[Service]这个部分的 ExecStart 中，加上下面两个参数：\n\n```yaml\n-H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock\n```\n\n然后重启：\n\n```yaml\nsystemctl daemon-reload\nsystemctl restart docker\n```\n\n在 IDEA 中，连接 Docker：`tcp://ip:2375`。\n\n参考链接：\n\n[Docker开启Remote API 访问 2375端口](https://cloud.tencent.com/developer/article/1683689)\n\n[用idea部署springboot项目到docker_今日相乐，皆当喜欢的博客-CSDN博客_idea部署项目到docker](https://blog.csdn.net/weixin_42687829/article/details/104249583)\n\n# 运行命令\n\n后台运行：`nohup java -jar xxx.jar >temp.txt &`\n\n查看运行的任务：`jobs`\n\n如果想将某个作业调回前台控制，只需要 `fg + 编号` 即可。\n\n查看某端口占用的线程的pid：`netstat -nlp |grep :9181`\n\n查看当前运行的jar包程序进程号：`ps -ef|grep xxx.jar` 或者 `ps -aux | grep java`\n\n关闭进程：`kill -s 9 24204`\n\n参考链接：\n\n[Linux中jar包启动和jar包后台运行的实现方式](https://cloud.tencent.com/developer/article/1722069)\n\n[Java：idea打包jar包&部署到服务器过程全记录](https://lullabychen.github.io/2019/10/09/Java-IDEA打jar包-部署到服务器过程全记录/)\n\n# 项目架构\n\n## 搭建项目\n\n1. 在代码仓库新建项目，clone 到本地。\n2. 新建 Maven 工程，编辑 pom.xml 文件。（或使用 [start.spring.io](http://start.spring.io)、IDEA 内置 Initializr）groupId 定义当前 Maven项目隶属的实际项目，artifactId 建议使用实际项目作为前缀。\n3. 新建 Modules。\n\n\n\n参考链接：[Spring Data JDBC入门使用Demo - 掘金](https://juejin.cn/post/6906453629381804046)\n","slug":"Java项目部署实践","published":1,"updated":"2022-09-13T14:18:07.048Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooh000vnq54940a6l9u","content":"<p>系统基于 CentOS7。</p>\n<h1 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h1><h2 id=\"安装-JDK\"><a href=\"#安装-JDK\" class=\"headerlink\" title=\"安装 JDK\"></a>安装 JDK</h2><p>查看 yum 库中的 JDK 安装包 ：<code>yum -y list java*</code></p>\n<p>安装需要的 JDK 版本的所有程序：<code>yum -y install java-1.8.0-openjdk*</code></p>\n<p>参考链接：<a href=\"https://blog.csdn.net/qq_32786873/article/details/78749384\">在CentOS7.4中安装jdk的几种方法及配置环境变量_勿忘初心的博客-CSDN博客_centos配置java环境变量</a></p>\n<h2 id=\"安装-Maven\"><a href=\"#安装-Maven\" class=\"headerlink\" title=\"安装 Maven\"></a>安装 Maven</h2><p>安装命令：<code>yum install -y apache-maven</code></p>\n<p>修改镜像：<code>vi /usr/share/apache-maven/conf/settings.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>alimaven<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>aliyun maven<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>&lt;http://maven.aliyun.com/nexus/content/groups/public/&gt;<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>参考链接：<a href=\"https://www.jianshu.com/p/dfccd5de6032\">CentOS上用yum安装Maven</a></p>\n<h2 id=\"安装-Docker\"><a href=\"#安装-Docker\" class=\"headerlink\" title=\"安装 Docker\"></a>安装 Docker</h2><p>安装命令：<code>yum -y install docker-ce</code></p>\n<p>启动命令：<code>systemctl start docker</code></p>\n<p>参考链接：<a href=\"https://cloud.tencent.com/developer/article/1701451\">centos7安装Docker详细步骤（无坑版教程）</a></p>\n<p>修改加速地址：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class=\"string\">&#x27;EOF&#x27;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;&lt;https://xxx.mirror.aliyuncs.com&gt;&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<p>参考链接：<a href=\"https://help.aliyun.com/document_detail/60750.html#title-s0s-jjs-26k\">官方镜像加速</a></p>\n<h1 id=\"项目部署\"><a href=\"#项目部署\" class=\"headerlink\" title=\"项目部署\"></a>项目部署</h1><h2 id=\"Jar-包方式\"><a href=\"#Jar-包方式\" class=\"headerlink\" title=\"Jar 包方式\"></a>Jar 包方式</h2><p>使用 IDEA 内置 deployment，上传 jar 包到服务器。</p>\n<h2 id=\"Docker-方式\"><a href=\"#Docker-方式\" class=\"headerlink\" title=\"Docker 方式\"></a>Docker 方式</h2><p>在 /usr/lib/systemd/system/docker.service，配置远程访问。</p>\n<p>主要是在[Service]这个部分的 ExecStart 中，加上下面两个参数：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">-H</span> <span class=\"string\">tcp://0.0.0.0:2375</span> <span class=\"string\">-H</span> <span class=\"string\">unix://var/run/docker.sock</span></span><br></pre></td></tr></table></figure>\n\n<p>然后重启：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">daemon-reload</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">restart</span> <span class=\"string\">docker</span></span><br></pre></td></tr></table></figure>\n\n<p>在 IDEA 中，连接 Docker：<code>tcp://ip:2375</code>。</p>\n<p>参考链接：</p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1683689\">Docker开启Remote API 访问 2375端口</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_42687829/article/details/104249583\">用idea部署springboot项目到docker_今日相乐，皆当喜欢的博客-CSDN博客_idea部署项目到docker</a></p>\n<h1 id=\"运行命令\"><a href=\"#运行命令\" class=\"headerlink\" title=\"运行命令\"></a>运行命令</h1><p>后台运行：<code>nohup java -jar xxx.jar &gt;temp.txt &amp;</code></p>\n<p>查看运行的任务：<code>jobs</code></p>\n<p>如果想将某个作业调回前台控制，只需要 <code>fg + 编号</code> 即可。</p>\n<p>查看某端口占用的线程的pid：<code>netstat -nlp |grep :9181</code></p>\n<p>查看当前运行的jar包程序进程号：<code>ps -ef|grep xxx.jar</code> 或者 <code>ps -aux | grep java</code></p>\n<p>关闭进程：<code>kill -s 9 24204</code></p>\n<p>参考链接：</p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1722069\">Linux中jar包启动和jar包后台运行的实现方式</a></p>\n<p><a href=\"https://lullabychen.github.io/2019/10/09/Java-IDEA%E6%89%93jar%E5%8C%85-%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%87%E7%A8%8B%E5%85%A8%E8%AE%B0%E5%BD%95/\">Java：idea打包jar包&amp;部署到服务器过程全记录</a></p>\n<h1 id=\"项目架构\"><a href=\"#项目架构\" class=\"headerlink\" title=\"项目架构\"></a>项目架构</h1><h2 id=\"搭建项目\"><a href=\"#搭建项目\" class=\"headerlink\" title=\"搭建项目\"></a>搭建项目</h2><ol>\n<li>在代码仓库新建项目，clone 到本地。</li>\n<li>新建 Maven 工程，编辑 pom.xml 文件。（或使用 <a href=\"http://start.spring.io/\">start.spring.io</a>、IDEA 内置 Initializr）groupId 定义当前 Maven项目隶属的实际项目，artifactId 建议使用实际项目作为前缀。</li>\n<li>新建 Modules。</li>\n</ol>\n<p>参考链接：<a href=\"https://juejin.cn/post/6906453629381804046\">Spring Data JDBC入门使用Demo - 掘金</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>系统基于 CentOS7。</p>\n<h1 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h1><h2 id=\"安装-JDK\"><a href=\"#安装-JDK\" class=\"headerlink\" title=\"安装 JDK\"></a>安装 JDK</h2><p>查看 yum 库中的 JDK 安装包 ：<code>yum -y list java*</code></p>\n<p>安装需要的 JDK 版本的所有程序：<code>yum -y install java-1.8.0-openjdk*</code></p>\n<p>参考链接：<a href=\"https://blog.csdn.net/qq_32786873/article/details/78749384\">在CentOS7.4中安装jdk的几种方法及配置环境变量_勿忘初心的博客-CSDN博客_centos配置java环境变量</a></p>\n<h2 id=\"安装-Maven\"><a href=\"#安装-Maven\" class=\"headerlink\" title=\"安装 Maven\"></a>安装 Maven</h2><p>安装命令：<code>yum install -y apache-maven</code></p>\n<p>修改镜像：<code>vi /usr/share/apache-maven/conf/settings.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>alimaven<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>aliyun maven<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>&lt;http://maven.aliyun.com/nexus/content/groups/public/&gt;<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>参考链接：<a href=\"https://www.jianshu.com/p/dfccd5de6032\">CentOS上用yum安装Maven</a></p>\n<h2 id=\"安装-Docker\"><a href=\"#安装-Docker\" class=\"headerlink\" title=\"安装 Docker\"></a>安装 Docker</h2><p>安装命令：<code>yum -y install docker-ce</code></p>\n<p>启动命令：<code>systemctl start docker</code></p>\n<p>参考链接：<a href=\"https://cloud.tencent.com/developer/article/1701451\">centos7安装Docker详细步骤（无坑版教程）</a></p>\n<p>修改加速地址：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class=\"string\">&#x27;EOF&#x27;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;&lt;https://xxx.mirror.aliyuncs.com&gt;&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<p>参考链接：<a href=\"https://help.aliyun.com/document_detail/60750.html#title-s0s-jjs-26k\">官方镜像加速</a></p>\n<h1 id=\"项目部署\"><a href=\"#项目部署\" class=\"headerlink\" title=\"项目部署\"></a>项目部署</h1><h2 id=\"Jar-包方式\"><a href=\"#Jar-包方式\" class=\"headerlink\" title=\"Jar 包方式\"></a>Jar 包方式</h2><p>使用 IDEA 内置 deployment，上传 jar 包到服务器。</p>\n<h2 id=\"Docker-方式\"><a href=\"#Docker-方式\" class=\"headerlink\" title=\"Docker 方式\"></a>Docker 方式</h2><p>在 /usr/lib/systemd/system/docker.service，配置远程访问。</p>\n<p>主要是在[Service]这个部分的 ExecStart 中，加上下面两个参数：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">-H</span> <span class=\"string\">tcp://0.0.0.0:2375</span> <span class=\"string\">-H</span> <span class=\"string\">unix://var/run/docker.sock</span></span><br></pre></td></tr></table></figure>\n\n<p>然后重启：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">daemon-reload</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">restart</span> <span class=\"string\">docker</span></span><br></pre></td></tr></table></figure>\n\n<p>在 IDEA 中，连接 Docker：<code>tcp://ip:2375</code>。</p>\n<p>参考链接：</p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1683689\">Docker开启Remote API 访问 2375端口</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_42687829/article/details/104249583\">用idea部署springboot项目到docker_今日相乐，皆当喜欢的博客-CSDN博客_idea部署项目到docker</a></p>\n<h1 id=\"运行命令\"><a href=\"#运行命令\" class=\"headerlink\" title=\"运行命令\"></a>运行命令</h1><p>后台运行：<code>nohup java -jar xxx.jar &gt;temp.txt &amp;</code></p>\n<p>查看运行的任务：<code>jobs</code></p>\n<p>如果想将某个作业调回前台控制，只需要 <code>fg + 编号</code> 即可。</p>\n<p>查看某端口占用的线程的pid：<code>netstat -nlp |grep :9181</code></p>\n<p>查看当前运行的jar包程序进程号：<code>ps -ef|grep xxx.jar</code> 或者 <code>ps -aux | grep java</code></p>\n<p>关闭进程：<code>kill -s 9 24204</code></p>\n<p>参考链接：</p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1722069\">Linux中jar包启动和jar包后台运行的实现方式</a></p>\n<p><a href=\"https://lullabychen.github.io/2019/10/09/Java-IDEA%E6%89%93jar%E5%8C%85-%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%87%E7%A8%8B%E5%85%A8%E8%AE%B0%E5%BD%95/\">Java：idea打包jar包&amp;部署到服务器过程全记录</a></p>\n<h1 id=\"项目架构\"><a href=\"#项目架构\" class=\"headerlink\" title=\"项目架构\"></a>项目架构</h1><h2 id=\"搭建项目\"><a href=\"#搭建项目\" class=\"headerlink\" title=\"搭建项目\"></a>搭建项目</h2><ol>\n<li>在代码仓库新建项目，clone 到本地。</li>\n<li>新建 Maven 工程，编辑 pom.xml 文件。（或使用 <a href=\"http://start.spring.io/\">start.spring.io</a>、IDEA 内置 Initializr）groupId 定义当前 Maven项目隶属的实际项目，artifactId 建议使用实际项目作为前缀。</li>\n<li>新建 Modules。</li>\n</ol>\n<p>参考链接：<a href=\"https://juejin.cn/post/6906453629381804046\">Spring Data JDBC入门使用Demo - 掘金</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:18:07 GMT+0800 (China Standard Time)","title":"Java 项目部署实践","path":"1026407118/","eyeCatchImage":null,"excerpt":"<center>简要记录如何在服务器上搭建相关环境，配置相关服务等操作。</center>","date":{"_isAMomentObject":true,"_i":"2022-01-16T06:37:26.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-01-16T06:37:26.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["实战","Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Spring 动态绑定","description":"<center>通过 Spring 动态绑定实现多实例注入。</center>","abbrlink":1655783544,"date":"2022-01-07T11:55:59.000Z","_content":"\n# 需求场景\n\n在系统运行时，根据不同的场景需要多个类实例。比如一个 Redis 类，需要传入不同的 Category（可以理解为 Key 前缀），从而实现多个 Redis 子类。\n\n# 步骤一、自定义注解\n\n```java\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.FIELD)\npublic @interface CacheService {\n    String category() default \"\";\n}\n```\n\n可以设置为 `String value() default \"\";` ，使用时可以隐藏字段名。\n\n# 步骤二、扫描属性上的注解\n\n```java\nField[] fields = object.getClass().getDeclaredFields();\nCacheService annotation = field.getAnnotation(CacheService.class);\n```\n\n# 步骤三、向容器注入 Bean\n\n```java\n// 获取 context\nConfigurableApplicationContext context = (ConfigurableApplicationContext) applicationContext;\n// 获取 BeanFactory\nDefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) context.getBeanFactory();\n// 创建 bean 信息\nBeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(RedisService.class);\n\n// 设置字段\nbeanDefinitionBuilder.addPropertyValue(\"category\", category);\nbeanFactory.registerBeanDefinition(field.getName(), beanDefinitionBuilder.getBeanDefinition());\n\n// 获取动态注册的 bean\nRedisService bean = (RedisService) applicationContext.getBean(field.getName());\nfield.setAccessible(true);\nfield.set(object, bean);\n```\n\n# 步骤四、使用\n\n```java\n@CacheService(category = Constants.ORDER_DRIVER)\nprivate RedisService orderDriverCache;\n```\n\n# 示意图\n\n![](../images/DynamicBinding.png)\n\n# 全部示例代码\n\n```java\n// RedisService.java\npublic class RedisService {\n    @Resource(name = \"redisNioClient\")\n    private SquirrelClient redisNioClient;\n\n    @Resource(name = \"redisClient\")\n    private RedisStoreClient redisClient;\n\n    @Setter\n    private String category;\n}\n\n// CacheService.java\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.FIELD)\npublic @interface CacheService {\n    String category() default \"\";\n}\n\n// CacheServiceAnnotation.java\n@Component\n@Slf4j\npublic class CacheServiceAnnotation implements ApplicationListener<ContextRefreshedEvent> {\n\n    @Override\n    public void onApplicationEvent(ContextRefreshedEvent event) {\n        final ApplicationContext applicationContext = event.getApplicationContext();\n\n        Arrays.stream(applicationContext.getBeanDefinitionNames())\n                .map(applicationContext::getBean)\n                .forEach(object -> {\n                    final Field[] fields = object.getClass().getDeclaredFields();\n                    Arrays.stream(fields)\n                            .filter(field -> field.isAnnotationPresent(CacheService.class))\n                            .forEach(field -> {\n                                final RedisService bean = getRedisService(applicationContext, field);\n                                try {\n                                    field.setAccessible(true);\n                                    field.set(object, bean);\n                                    log.info(\"set field success, object: {}, bean: {}\", object.getClass().getSimpleName(), field.getName());\n                                } catch (IllegalAccessException e) {\n                                    log.error(\"set field fail, object: {}, bean: {}\", object.getClass().getSimpleName(), field.getName(), e);\n                                }\n                            });\n                });\n    }\n\n    private RedisService getRedisService(ApplicationContext applicationContext, Field field) {\n        if (applicationContext.containsBeanDefinition(field.getName())) {\n            return (RedisService) applicationContext.getBean(field.getName());\n        }\n\n        final CacheService annotation = field.getAnnotation(CacheService.class);\n        final String category = annotation.category();\n\n        ConfigurableApplicationContext context = (ConfigurableApplicationContext) applicationContext;\n        DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) context.getBeanFactory();\n        BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(RedisService.class);\n\n        // 设置字段\n        beanDefinitionBuilder.addPropertyValue(\"category\", category);\n        beanFactory.registerBeanDefinition(field.getName(), beanDefinitionBuilder.getBeanDefinition());\n\n        // 获取动态注册的 bean\n        RedisService bean = (RedisService) applicationContext.getBean(field.getName());\n        log.info(\"register Bean success, bean: {}\", field.getName());\n        return bean;\n    }\n}\n```\n\n\n参考资料：\n[Java获取类、方法、属性上的注解_根号三-CSDN博客_java 获取属性上的注解](https://blog.csdn.net/u011983531/article/details/70941123)  \n[使用自定义注解动态绑定多实现类实例](https://www.cnblogs.com/east7/p/14390816.html)    \n[SpringBoot动态注入及操作Bean](https://segmentfault.com/a/1190000024522038)\n","source":"_posts/Spring动态绑定.md","raw":"---\ntitle: Spring 动态绑定\ncategories: 开发\ntags:\n  - Spring\n  - 动态绑定\ndescription: <center>通过 Spring 动态绑定实现多实例注入。</center>\nabbrlink: 1655783544\ndate: 2022-01-07 19:55:59\n---\n\n# 需求场景\n\n在系统运行时，根据不同的场景需要多个类实例。比如一个 Redis 类，需要传入不同的 Category（可以理解为 Key 前缀），从而实现多个 Redis 子类。\n\n# 步骤一、自定义注解\n\n```java\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.FIELD)\npublic @interface CacheService {\n    String category() default \"\";\n}\n```\n\n可以设置为 `String value() default \"\";` ，使用时可以隐藏字段名。\n\n# 步骤二、扫描属性上的注解\n\n```java\nField[] fields = object.getClass().getDeclaredFields();\nCacheService annotation = field.getAnnotation(CacheService.class);\n```\n\n# 步骤三、向容器注入 Bean\n\n```java\n// 获取 context\nConfigurableApplicationContext context = (ConfigurableApplicationContext) applicationContext;\n// 获取 BeanFactory\nDefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) context.getBeanFactory();\n// 创建 bean 信息\nBeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(RedisService.class);\n\n// 设置字段\nbeanDefinitionBuilder.addPropertyValue(\"category\", category);\nbeanFactory.registerBeanDefinition(field.getName(), beanDefinitionBuilder.getBeanDefinition());\n\n// 获取动态注册的 bean\nRedisService bean = (RedisService) applicationContext.getBean(field.getName());\nfield.setAccessible(true);\nfield.set(object, bean);\n```\n\n# 步骤四、使用\n\n```java\n@CacheService(category = Constants.ORDER_DRIVER)\nprivate RedisService orderDriverCache;\n```\n\n# 示意图\n\n![](../images/DynamicBinding.png)\n\n# 全部示例代码\n\n```java\n// RedisService.java\npublic class RedisService {\n    @Resource(name = \"redisNioClient\")\n    private SquirrelClient redisNioClient;\n\n    @Resource(name = \"redisClient\")\n    private RedisStoreClient redisClient;\n\n    @Setter\n    private String category;\n}\n\n// CacheService.java\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.FIELD)\npublic @interface CacheService {\n    String category() default \"\";\n}\n\n// CacheServiceAnnotation.java\n@Component\n@Slf4j\npublic class CacheServiceAnnotation implements ApplicationListener<ContextRefreshedEvent> {\n\n    @Override\n    public void onApplicationEvent(ContextRefreshedEvent event) {\n        final ApplicationContext applicationContext = event.getApplicationContext();\n\n        Arrays.stream(applicationContext.getBeanDefinitionNames())\n                .map(applicationContext::getBean)\n                .forEach(object -> {\n                    final Field[] fields = object.getClass().getDeclaredFields();\n                    Arrays.stream(fields)\n                            .filter(field -> field.isAnnotationPresent(CacheService.class))\n                            .forEach(field -> {\n                                final RedisService bean = getRedisService(applicationContext, field);\n                                try {\n                                    field.setAccessible(true);\n                                    field.set(object, bean);\n                                    log.info(\"set field success, object: {}, bean: {}\", object.getClass().getSimpleName(), field.getName());\n                                } catch (IllegalAccessException e) {\n                                    log.error(\"set field fail, object: {}, bean: {}\", object.getClass().getSimpleName(), field.getName(), e);\n                                }\n                            });\n                });\n    }\n\n    private RedisService getRedisService(ApplicationContext applicationContext, Field field) {\n        if (applicationContext.containsBeanDefinition(field.getName())) {\n            return (RedisService) applicationContext.getBean(field.getName());\n        }\n\n        final CacheService annotation = field.getAnnotation(CacheService.class);\n        final String category = annotation.category();\n\n        ConfigurableApplicationContext context = (ConfigurableApplicationContext) applicationContext;\n        DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) context.getBeanFactory();\n        BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(RedisService.class);\n\n        // 设置字段\n        beanDefinitionBuilder.addPropertyValue(\"category\", category);\n        beanFactory.registerBeanDefinition(field.getName(), beanDefinitionBuilder.getBeanDefinition());\n\n        // 获取动态注册的 bean\n        RedisService bean = (RedisService) applicationContext.getBean(field.getName());\n        log.info(\"register Bean success, bean: {}\", field.getName());\n        return bean;\n    }\n}\n```\n\n\n参考资料：\n[Java获取类、方法、属性上的注解_根号三-CSDN博客_java 获取属性上的注解](https://blog.csdn.net/u011983531/article/details/70941123)  \n[使用自定义注解动态绑定多实现类实例](https://www.cnblogs.com/east7/p/14390816.html)    \n[SpringBoot动态注入及操作Bean](https://segmentfault.com/a/1190000024522038)\n","slug":"Spring动态绑定","published":1,"updated":"2022-09-13T14:17:58.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooh000ynq548a1bfgm6","content":"<h1 id=\"需求场景\"><a href=\"#需求场景\" class=\"headerlink\" title=\"需求场景\"></a>需求场景</h1><p>在系统运行时，根据不同的场景需要多个类实例。比如一个 Redis 类，需要传入不同的 Category（可以理解为 Key 前缀），从而实现多个 Redis 子类。</p>\n<h1 id=\"步骤一、自定义注解\"><a href=\"#步骤一、自定义注解\" class=\"headerlink\" title=\"步骤一、自定义注解\"></a>步骤一、自定义注解</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Target(ElementType.FIELD)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> CacheService &#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">category</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以设置为 <code>String value() default &quot;&quot;;</code> ，使用时可以隐藏字段名。</p>\n<h1 id=\"步骤二、扫描属性上的注解\"><a href=\"#步骤二、扫描属性上的注解\" class=\"headerlink\" title=\"步骤二、扫描属性上的注解\"></a>步骤二、扫描属性上的注解</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Field[] fields = object.getClass().getDeclaredFields();</span><br><span class=\"line\">CacheService annotation = field.getAnnotation(CacheService.class);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"步骤三、向容器注入-Bean\"><a href=\"#步骤三、向容器注入-Bean\" class=\"headerlink\" title=\"步骤三、向容器注入 Bean\"></a>步骤三、向容器注入 Bean</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取 context</span></span><br><span class=\"line\">ConfigurableApplicationContext context = (ConfigurableApplicationContext) applicationContext;</span><br><span class=\"line\"><span class=\"comment\">// 获取 BeanFactory</span></span><br><span class=\"line\">DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) context.getBeanFactory();</span><br><span class=\"line\"><span class=\"comment\">// 创建 bean 信息</span></span><br><span class=\"line\">BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(RedisService.class);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置字段</span></span><br><span class=\"line\">beanDefinitionBuilder.addPropertyValue(<span class=\"string\">&quot;category&quot;</span>, category);</span><br><span class=\"line\">beanFactory.registerBeanDefinition(field.getName(), beanDefinitionBuilder.getBeanDefinition());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取动态注册的 bean</span></span><br><span class=\"line\">RedisService bean = (RedisService) applicationContext.getBean(field.getName());</span><br><span class=\"line\">field.setAccessible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">field.set(object, bean);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"步骤四、使用\"><a href=\"#步骤四、使用\" class=\"headerlink\" title=\"步骤四、使用\"></a>步骤四、使用</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CacheService(category = Constants.ORDER_DRIVER)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> RedisService orderDriverCache;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"示意图\"><a href=\"#示意图\" class=\"headerlink\" title=\"示意图\"></a>示意图</h1><p><img src=\"../images/DynamicBinding.png\"></p>\n<h1 id=\"全部示例代码\"><a href=\"#全部示例代码\" class=\"headerlink\" title=\"全部示例代码\"></a>全部示例代码</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// RedisService.java</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Resource(name = &quot;redisNioClient&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> SquirrelClient redisNioClient;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource(name = &quot;redisClient&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisStoreClient redisClient;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Setter</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String category;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// CacheService.java</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Target(ElementType.FIELD)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> CacheService &#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">category</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// CacheServiceAnnotation.java</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CacheServiceAnnotation</span> <span class=\"keyword\">implements</span> <span class=\"title\">ApplicationListener</span>&lt;<span class=\"title\">ContextRefreshedEvent</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onApplicationEvent</span><span class=\"params\">(ContextRefreshedEvent event)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> ApplicationContext applicationContext = event.getApplicationContext();</span><br><span class=\"line\"></span><br><span class=\"line\">        Arrays.stream(applicationContext.getBeanDefinitionNames())</span><br><span class=\"line\">                .map(applicationContext::getBean)</span><br><span class=\"line\">                .forEach(object -&gt; &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">final</span> Field[] fields = object.getClass().getDeclaredFields();</span><br><span class=\"line\">                    Arrays.stream(fields)</span><br><span class=\"line\">                            .filter(field -&gt; field.isAnnotationPresent(CacheService.class))</span><br><span class=\"line\">                            .forEach(field -&gt; &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">final</span> RedisService bean = getRedisService(applicationContext, field);</span><br><span class=\"line\">                                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                                    field.setAccessible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">                                    field.set(object, bean);</span><br><span class=\"line\">                                    log.info(<span class=\"string\">&quot;set field success, object: &#123;&#125;, bean: &#123;&#125;&quot;</span>, object.getClass().getSimpleName(), field.getName());</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">catch</span> (IllegalAccessException e) &#123;</span><br><span class=\"line\">                                    log.error(<span class=\"string\">&quot;set field fail, object: &#123;&#125;, bean: &#123;&#125;&quot;</span>, object.getClass().getSimpleName(), field.getName(), e);</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;);</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> RedisService <span class=\"title\">getRedisService</span><span class=\"params\">(ApplicationContext applicationContext, Field field)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (applicationContext.containsBeanDefinition(field.getName())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (RedisService) applicationContext.getBean(field.getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> CacheService annotation = field.getAnnotation(CacheService.class);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> String category = annotation.category();</span><br><span class=\"line\"></span><br><span class=\"line\">        ConfigurableApplicationContext context = (ConfigurableApplicationContext) applicationContext;</span><br><span class=\"line\">        DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) context.getBeanFactory();</span><br><span class=\"line\">        BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(RedisService.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 设置字段</span></span><br><span class=\"line\">        beanDefinitionBuilder.addPropertyValue(<span class=\"string\">&quot;category&quot;</span>, category);</span><br><span class=\"line\">        beanFactory.registerBeanDefinition(field.getName(), beanDefinitionBuilder.getBeanDefinition());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 获取动态注册的 bean</span></span><br><span class=\"line\">        RedisService bean = (RedisService) applicationContext.getBean(field.getName());</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;register Bean success, bean: &#123;&#125;&quot;</span>, field.getName());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bean;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>参考资料：<br><a href=\"https://blog.csdn.net/u011983531/article/details/70941123\">Java获取类、方法、属性上的注解_根号三-CSDN博客_java 获取属性上的注解</a><br><a href=\"https://www.cnblogs.com/east7/p/14390816.html\">使用自定义注解动态绑定多实现类实例</a><br><a href=\"https://segmentfault.com/a/1190000024522038\">SpringBoot动态注入及操作Bean</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需求场景\"><a href=\"#需求场景\" class=\"headerlink\" title=\"需求场景\"></a>需求场景</h1><p>在系统运行时，根据不同的场景需要多个类实例。比如一个 Redis 类，需要传入不同的 Category（可以理解为 Key 前缀），从而实现多个 Redis 子类。</p>\n<h1 id=\"步骤一、自定义注解\"><a href=\"#步骤一、自定义注解\" class=\"headerlink\" title=\"步骤一、自定义注解\"></a>步骤一、自定义注解</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Target(ElementType.FIELD)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> CacheService &#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">category</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以设置为 <code>String value() default &quot;&quot;;</code> ，使用时可以隐藏字段名。</p>\n<h1 id=\"步骤二、扫描属性上的注解\"><a href=\"#步骤二、扫描属性上的注解\" class=\"headerlink\" title=\"步骤二、扫描属性上的注解\"></a>步骤二、扫描属性上的注解</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Field[] fields = object.getClass().getDeclaredFields();</span><br><span class=\"line\">CacheService annotation = field.getAnnotation(CacheService.class);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"步骤三、向容器注入-Bean\"><a href=\"#步骤三、向容器注入-Bean\" class=\"headerlink\" title=\"步骤三、向容器注入 Bean\"></a>步骤三、向容器注入 Bean</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取 context</span></span><br><span class=\"line\">ConfigurableApplicationContext context = (ConfigurableApplicationContext) applicationContext;</span><br><span class=\"line\"><span class=\"comment\">// 获取 BeanFactory</span></span><br><span class=\"line\">DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) context.getBeanFactory();</span><br><span class=\"line\"><span class=\"comment\">// 创建 bean 信息</span></span><br><span class=\"line\">BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(RedisService.class);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置字段</span></span><br><span class=\"line\">beanDefinitionBuilder.addPropertyValue(<span class=\"string\">&quot;category&quot;</span>, category);</span><br><span class=\"line\">beanFactory.registerBeanDefinition(field.getName(), beanDefinitionBuilder.getBeanDefinition());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取动态注册的 bean</span></span><br><span class=\"line\">RedisService bean = (RedisService) applicationContext.getBean(field.getName());</span><br><span class=\"line\">field.setAccessible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">field.set(object, bean);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"步骤四、使用\"><a href=\"#步骤四、使用\" class=\"headerlink\" title=\"步骤四、使用\"></a>步骤四、使用</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CacheService(category = Constants.ORDER_DRIVER)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> RedisService orderDriverCache;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"示意图\"><a href=\"#示意图\" class=\"headerlink\" title=\"示意图\"></a>示意图</h1><p><img src=\"../images/DynamicBinding.png\"></p>\n<h1 id=\"全部示例代码\"><a href=\"#全部示例代码\" class=\"headerlink\" title=\"全部示例代码\"></a>全部示例代码</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// RedisService.java</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Resource(name = &quot;redisNioClient&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> SquirrelClient redisNioClient;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource(name = &quot;redisClient&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisStoreClient redisClient;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Setter</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String category;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// CacheService.java</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Target(ElementType.FIELD)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> CacheService &#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">category</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// CacheServiceAnnotation.java</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CacheServiceAnnotation</span> <span class=\"keyword\">implements</span> <span class=\"title\">ApplicationListener</span>&lt;<span class=\"title\">ContextRefreshedEvent</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onApplicationEvent</span><span class=\"params\">(ContextRefreshedEvent event)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> ApplicationContext applicationContext = event.getApplicationContext();</span><br><span class=\"line\"></span><br><span class=\"line\">        Arrays.stream(applicationContext.getBeanDefinitionNames())</span><br><span class=\"line\">                .map(applicationContext::getBean)</span><br><span class=\"line\">                .forEach(object -&gt; &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">final</span> Field[] fields = object.getClass().getDeclaredFields();</span><br><span class=\"line\">                    Arrays.stream(fields)</span><br><span class=\"line\">                            .filter(field -&gt; field.isAnnotationPresent(CacheService.class))</span><br><span class=\"line\">                            .forEach(field -&gt; &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">final</span> RedisService bean = getRedisService(applicationContext, field);</span><br><span class=\"line\">                                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                                    field.setAccessible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">                                    field.set(object, bean);</span><br><span class=\"line\">                                    log.info(<span class=\"string\">&quot;set field success, object: &#123;&#125;, bean: &#123;&#125;&quot;</span>, object.getClass().getSimpleName(), field.getName());</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">catch</span> (IllegalAccessException e) &#123;</span><br><span class=\"line\">                                    log.error(<span class=\"string\">&quot;set field fail, object: &#123;&#125;, bean: &#123;&#125;&quot;</span>, object.getClass().getSimpleName(), field.getName(), e);</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;);</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> RedisService <span class=\"title\">getRedisService</span><span class=\"params\">(ApplicationContext applicationContext, Field field)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (applicationContext.containsBeanDefinition(field.getName())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (RedisService) applicationContext.getBean(field.getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> CacheService annotation = field.getAnnotation(CacheService.class);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> String category = annotation.category();</span><br><span class=\"line\"></span><br><span class=\"line\">        ConfigurableApplicationContext context = (ConfigurableApplicationContext) applicationContext;</span><br><span class=\"line\">        DefaultListableBeanFactory beanFactory = (DefaultListableBeanFactory) context.getBeanFactory();</span><br><span class=\"line\">        BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(RedisService.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 设置字段</span></span><br><span class=\"line\">        beanDefinitionBuilder.addPropertyValue(<span class=\"string\">&quot;category&quot;</span>, category);</span><br><span class=\"line\">        beanFactory.registerBeanDefinition(field.getName(), beanDefinitionBuilder.getBeanDefinition());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 获取动态注册的 bean</span></span><br><span class=\"line\">        RedisService bean = (RedisService) applicationContext.getBean(field.getName());</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;register Bean success, bean: &#123;&#125;&quot;</span>, field.getName());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bean;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>参考资料：<br><a href=\"https://blog.csdn.net/u011983531/article/details/70941123\">Java获取类、方法、属性上的注解_根号三-CSDN博客_java 获取属性上的注解</a><br><a href=\"https://www.cnblogs.com/east7/p/14390816.html\">使用自定义注解动态绑定多实现类实例</a><br><a href=\"https://segmentfault.com/a/1190000024522038\">SpringBoot动态注入及操作Bean</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"../images/DynamicBinding.png","popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:17:58 GMT+0800 (China Standard Time)","title":"Spring 动态绑定","path":"1655783544/","eyeCatchImage":"../images/DynamicBinding.png","excerpt":"<center>通过 Spring 动态绑定实现多实例注入。</center>","date":{"_isAMomentObject":true,"_i":"2022-01-07T11:55:59.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-01-07T11:55:59.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["Spring","动态绑定"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"临时邮箱","description":"<center>有时候注册某些论坛必须提供邮箱，但你又不想使用你常用的邮箱，因为你不想收到不必要的邮件。</center>","abbrlink":172582584,"date":"2016-01-12T10:49:00.000Z","_content":"# 临时邮箱有什么用？\n\n有时候注册某些论坛必须提供邮箱，但你又不想使用你常用的邮箱，因为你不想收到不必要的邮件。又有些时候你只是想试用一次某些服务，不想使用常用邮箱注册。临时邮箱应运而生，在注册这些不重要的服务时使用临时邮箱作为替身是个很好的选择。临时邮箱具有匿名性，能有效减少垃圾邮件；同时具有时效性，邮箱在短时间内会自毁。\n\n# 二十五个临时邮箱网站\n\n1.GuerrillaMail-提供15分钟的临时邮箱，你能接收和回复邮件。[http://www.guerrillamail.com/](http://www.guerrillamail.com/)\n\n2.SpamBox-提供可自定义的邮箱时限，并能将邮件转发到你设定的邮箱。[http://spambox.us/](http://spambox.us/)\n\n3.[http://10minutemail.com/10MinuteMail/index.html](http://10minutemail.com/10MinuteMail/index.html) 10 Minute Mail-顾名思义，提供10分钟的临时邮箱，有中文版！\n\n4.NowMyMail-是个很好用的暂时信箱，只要按一个键就会得到一个时效一小时的暂时信箱。[http://www.nowmymail.com](http://www.nowmymail.com)\n\n5.PookMail- 免费的暂时信箱，目前支持多普通话言，只要在右方输入一个帐号，点选进入后就能使用该E-Mail收取信件。[http://pookmail.blogspot.com/](http://pookmail.blogspot.com/)\n\n6.Hidzz -提供一个5天期限的临时邮箱，你可以在期限内登录临时邮箱查收邮件，登录邮箱的ID是你的真实邮箱。[http://hidzz.com/](http://hidzz.com/)\n\n7.MailCatch-和其它临时邮箱相比有一个比较突出的特点，像Gmail那样，提供邮件的RSS输出。[http://mailcatch.com/en/disposable-email](http://mailcatch.com/en/disposable-email)\n\n8.Incognito Mail-提供1小时的临时邮箱，用户名可以自定义。[http://www.incognitomail.com/](http://www.incognitomail.com/)\n\n9.MintEmail-和MailZIla一样，一打开就生成邮箱，免除多余的点击，而且邮箱地址会自动复制到粘贴板，方便使用。[http://www.mintemail.com/](http://www.mintemail.com/)\n\n10.Dodgeit-又一个提供邮件RSS输出的临时邮箱服务。[http://dodgeit.com/](http://dodgeit.com/)\n\n11.SpamGourmet-需要注册方可使用，有中文版。[http://www.spamgourmet.com/](http://www.spamgourmet.com/)\n\n12.E4ward-也是一个需要注册的临时邮箱服务，能将邮件转发到指定的邮箱。[http://www.e4ward.com/](http://www.e4ward.com/)\n\n13.SayNotoSpams -提供15分钟时限的临时邮箱。[http://www.saynotospams.com/](http://www.saynotospams.com/)\n\n14.GishPuppy-需要注册方可使用，邮件自动转发到指定邮箱，当你不需要这个邮箱时，可手动销毁。[http://www.gishpuppy.com/](http://www.gishpuppy.com/)\n\n15.Mailinator-界面很漂亮，而且有多个邮箱后缀可选。[http://www.mailinator.com/](http://www.mailinator.com/)\n\n16.Jetable-一个提供繁体中文版的临时邮箱服务。[http://www.jetable.org/zh/index](http://www.jetable.org/zh/index)\n\n17.MailEater-无需注册，但有弹出窗口广告。[http://www.maileater.com/](http://www.maileater.com/)\n\n18.Block Filter-页面打开自动生成邮箱并复制到剪贴板，并实时地自动检查新邮件。[http://www.blockfilter.com/](http://www.blockfilter.com/)\n\n19.KasMail-需要注册，邮箱时限可以自由定义，可以长达一个月或永久不销毁。[http://www.kasmail.com/](http://www.kasmail.com/)\n\n20.ShieldMail-无需注册，但广告较多，加载较慢。[http://www.shieldemail.com/](http://www.shieldemail.com/)\n\n21.十分钟临时邮箱 [http://mail.bccto.me/ ]( http://mail.bccto.me/)十分钟临时邮箱\n\n22.五天的免费临时邮箱，多种语言界面，多种邮箱后缀可选。 [http://www.yopmail.com/zh/ ](http://www.yopmail.com/zh/ )\n\n22.二十四小时免费临时邮箱：[http://24mail.chacuo.net/zhtw](http://24mail.chacuo.net/zhtw)\n\n23.MailDrop：[http://maildrop.cc/](http://maildrop.cc/) 24小时的免费邮箱。可以容纳十封邮件，只能接收纯100kb以下的文本或html邮件。\n\n24.MailDude:[http://www.maildu.de/](http://www.maildu.de/)只需要在网站上输入自己的真实邮箱地址，即可生成一个临时邮箱地址，让你使用Name@maildu.de来收信，并且只能收取邮件，而不同发送邮件。支持中文显示。MailDude 会为你收取邮件并保存一小时，让你有足够的时间可以点选邮件内的确认链结，帮助你完成帐号验证。特别是你想测试一些网络服务，又不希望泄漏自己的真实信箱时。不过切记不要使用MailDude 来接收密码、或具有私人资讯的邮件，因为每个MailDude 信箱都是公开的、且每个人都能够存取该讯息。\n\n25.Forward Cat：[http://www.forward.cat/](http://www.forward.cat/) 一个提供临时邮箱服务的平台，通过该工具可以让用户注册网络上的各种服务，而不需使用真实的邮箱，避免被恶意骚扰，同时还可以解决很多未知吧临时邮箱拒之门外的弊端，有了邮件转存发送服务即可解决。\n\n*所有资源来自于网络。*\n","source":"_posts/临时邮箱.md","raw":"---\ntitle: 临时邮箱\ntags:\n  - 邮箱\ncategories: 收集\ndescription: <center>有时候注册某些论坛必须提供邮箱，但你又不想使用你常用的邮箱，因为你不想收到不必要的邮件。</center>\nabbrlink: 172582584\ndate: 2016-01-12 18:49:00\n---\n# 临时邮箱有什么用？\n\n有时候注册某些论坛必须提供邮箱，但你又不想使用你常用的邮箱，因为你不想收到不必要的邮件。又有些时候你只是想试用一次某些服务，不想使用常用邮箱注册。临时邮箱应运而生，在注册这些不重要的服务时使用临时邮箱作为替身是个很好的选择。临时邮箱具有匿名性，能有效减少垃圾邮件；同时具有时效性，邮箱在短时间内会自毁。\n\n# 二十五个临时邮箱网站\n\n1.GuerrillaMail-提供15分钟的临时邮箱，你能接收和回复邮件。[http://www.guerrillamail.com/](http://www.guerrillamail.com/)\n\n2.SpamBox-提供可自定义的邮箱时限，并能将邮件转发到你设定的邮箱。[http://spambox.us/](http://spambox.us/)\n\n3.[http://10minutemail.com/10MinuteMail/index.html](http://10minutemail.com/10MinuteMail/index.html) 10 Minute Mail-顾名思义，提供10分钟的临时邮箱，有中文版！\n\n4.NowMyMail-是个很好用的暂时信箱，只要按一个键就会得到一个时效一小时的暂时信箱。[http://www.nowmymail.com](http://www.nowmymail.com)\n\n5.PookMail- 免费的暂时信箱，目前支持多普通话言，只要在右方输入一个帐号，点选进入后就能使用该E-Mail收取信件。[http://pookmail.blogspot.com/](http://pookmail.blogspot.com/)\n\n6.Hidzz -提供一个5天期限的临时邮箱，你可以在期限内登录临时邮箱查收邮件，登录邮箱的ID是你的真实邮箱。[http://hidzz.com/](http://hidzz.com/)\n\n7.MailCatch-和其它临时邮箱相比有一个比较突出的特点，像Gmail那样，提供邮件的RSS输出。[http://mailcatch.com/en/disposable-email](http://mailcatch.com/en/disposable-email)\n\n8.Incognito Mail-提供1小时的临时邮箱，用户名可以自定义。[http://www.incognitomail.com/](http://www.incognitomail.com/)\n\n9.MintEmail-和MailZIla一样，一打开就生成邮箱，免除多余的点击，而且邮箱地址会自动复制到粘贴板，方便使用。[http://www.mintemail.com/](http://www.mintemail.com/)\n\n10.Dodgeit-又一个提供邮件RSS输出的临时邮箱服务。[http://dodgeit.com/](http://dodgeit.com/)\n\n11.SpamGourmet-需要注册方可使用，有中文版。[http://www.spamgourmet.com/](http://www.spamgourmet.com/)\n\n12.E4ward-也是一个需要注册的临时邮箱服务，能将邮件转发到指定的邮箱。[http://www.e4ward.com/](http://www.e4ward.com/)\n\n13.SayNotoSpams -提供15分钟时限的临时邮箱。[http://www.saynotospams.com/](http://www.saynotospams.com/)\n\n14.GishPuppy-需要注册方可使用，邮件自动转发到指定邮箱，当你不需要这个邮箱时，可手动销毁。[http://www.gishpuppy.com/](http://www.gishpuppy.com/)\n\n15.Mailinator-界面很漂亮，而且有多个邮箱后缀可选。[http://www.mailinator.com/](http://www.mailinator.com/)\n\n16.Jetable-一个提供繁体中文版的临时邮箱服务。[http://www.jetable.org/zh/index](http://www.jetable.org/zh/index)\n\n17.MailEater-无需注册，但有弹出窗口广告。[http://www.maileater.com/](http://www.maileater.com/)\n\n18.Block Filter-页面打开自动生成邮箱并复制到剪贴板，并实时地自动检查新邮件。[http://www.blockfilter.com/](http://www.blockfilter.com/)\n\n19.KasMail-需要注册，邮箱时限可以自由定义，可以长达一个月或永久不销毁。[http://www.kasmail.com/](http://www.kasmail.com/)\n\n20.ShieldMail-无需注册，但广告较多，加载较慢。[http://www.shieldemail.com/](http://www.shieldemail.com/)\n\n21.十分钟临时邮箱 [http://mail.bccto.me/ ]( http://mail.bccto.me/)十分钟临时邮箱\n\n22.五天的免费临时邮箱，多种语言界面，多种邮箱后缀可选。 [http://www.yopmail.com/zh/ ](http://www.yopmail.com/zh/ )\n\n22.二十四小时免费临时邮箱：[http://24mail.chacuo.net/zhtw](http://24mail.chacuo.net/zhtw)\n\n23.MailDrop：[http://maildrop.cc/](http://maildrop.cc/) 24小时的免费邮箱。可以容纳十封邮件，只能接收纯100kb以下的文本或html邮件。\n\n24.MailDude:[http://www.maildu.de/](http://www.maildu.de/)只需要在网站上输入自己的真实邮箱地址，即可生成一个临时邮箱地址，让你使用Name@maildu.de来收信，并且只能收取邮件，而不同发送邮件。支持中文显示。MailDude 会为你收取邮件并保存一小时，让你有足够的时间可以点选邮件内的确认链结，帮助你完成帐号验证。特别是你想测试一些网络服务，又不希望泄漏自己的真实信箱时。不过切记不要使用MailDude 来接收密码、或具有私人资讯的邮件，因为每个MailDude 信箱都是公开的、且每个人都能够存取该讯息。\n\n25.Forward Cat：[http://www.forward.cat/](http://www.forward.cat/) 一个提供临时邮箱服务的平台，通过该工具可以让用户注册网络上的各种服务，而不需使用真实的邮箱，避免被恶意骚扰，同时还可以解决很多未知吧临时邮箱拒之门外的弊端，有了邮件转存发送服务即可解决。\n\n*所有资源来自于网络。*\n","slug":"临时邮箱","published":1,"updated":"2022-09-13T14:24:02.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooi0010nq54dewo9sbx","content":"<h1 id=\"临时邮箱有什么用？\"><a href=\"#临时邮箱有什么用？\" class=\"headerlink\" title=\"临时邮箱有什么用？\"></a>临时邮箱有什么用？</h1><p>有时候注册某些论坛必须提供邮箱，但你又不想使用你常用的邮箱，因为你不想收到不必要的邮件。又有些时候你只是想试用一次某些服务，不想使用常用邮箱注册。临时邮箱应运而生，在注册这些不重要的服务时使用临时邮箱作为替身是个很好的选择。临时邮箱具有匿名性，能有效减少垃圾邮件；同时具有时效性，邮箱在短时间内会自毁。</p>\n<h1 id=\"二十五个临时邮箱网站\"><a href=\"#二十五个临时邮箱网站\" class=\"headerlink\" title=\"二十五个临时邮箱网站\"></a>二十五个临时邮箱网站</h1><p>1.GuerrillaMail-提供15分钟的临时邮箱，你能接收和回复邮件。<a href=\"http://www.guerrillamail.com/\">http://www.guerrillamail.com/</a></p>\n<p>2.SpamBox-提供可自定义的邮箱时限，并能将邮件转发到你设定的邮箱。<a href=\"http://spambox.us/\">http://spambox.us/</a></p>\n<p>3.<a href=\"http://10minutemail.com/10MinuteMail/index.html\">http://10minutemail.com/10MinuteMail/index.html</a> 10 Minute Mail-顾名思义，提供10分钟的临时邮箱，有中文版！</p>\n<p>4.NowMyMail-是个很好用的暂时信箱，只要按一个键就会得到一个时效一小时的暂时信箱。<a href=\"http://www.nowmymail.com/\">http://www.nowmymail.com</a></p>\n<p>5.PookMail- 免费的暂时信箱，目前支持多普通话言，只要在右方输入一个帐号，点选进入后就能使用该E-Mail收取信件。<a href=\"http://pookmail.blogspot.com/\">http://pookmail.blogspot.com/</a></p>\n<p>6.Hidzz -提供一个5天期限的临时邮箱，你可以在期限内登录临时邮箱查收邮件，登录邮箱的ID是你的真实邮箱。<a href=\"http://hidzz.com/\">http://hidzz.com/</a></p>\n<p>7.MailCatch-和其它临时邮箱相比有一个比较突出的特点，像Gmail那样，提供邮件的RSS输出。<a href=\"http://mailcatch.com/en/disposable-email\">http://mailcatch.com/en/disposable-email</a></p>\n<p>8.Incognito Mail-提供1小时的临时邮箱，用户名可以自定义。<a href=\"http://www.incognitomail.com/\">http://www.incognitomail.com/</a></p>\n<p>9.MintEmail-和MailZIla一样，一打开就生成邮箱，免除多余的点击，而且邮箱地址会自动复制到粘贴板，方便使用。<a href=\"http://www.mintemail.com/\">http://www.mintemail.com/</a></p>\n<p>10.Dodgeit-又一个提供邮件RSS输出的临时邮箱服务。<a href=\"http://dodgeit.com/\">http://dodgeit.com/</a></p>\n<p>11.SpamGourmet-需要注册方可使用，有中文版。<a href=\"http://www.spamgourmet.com/\">http://www.spamgourmet.com/</a></p>\n<p>12.E4ward-也是一个需要注册的临时邮箱服务，能将邮件转发到指定的邮箱。<a href=\"http://www.e4ward.com/\">http://www.e4ward.com/</a></p>\n<p>13.SayNotoSpams -提供15分钟时限的临时邮箱。<a href=\"http://www.saynotospams.com/\">http://www.saynotospams.com/</a></p>\n<p>14.GishPuppy-需要注册方可使用，邮件自动转发到指定邮箱，当你不需要这个邮箱时，可手动销毁。<a href=\"http://www.gishpuppy.com/\">http://www.gishpuppy.com/</a></p>\n<p>15.Mailinator-界面很漂亮，而且有多个邮箱后缀可选。<a href=\"http://www.mailinator.com/\">http://www.mailinator.com/</a></p>\n<p>16.Jetable-一个提供繁体中文版的临时邮箱服务。<a href=\"http://www.jetable.org/zh/index\">http://www.jetable.org/zh/index</a></p>\n<p>17.MailEater-无需注册，但有弹出窗口广告。<a href=\"http://www.maileater.com/\">http://www.maileater.com/</a></p>\n<p>18.Block Filter-页面打开自动生成邮箱并复制到剪贴板，并实时地自动检查新邮件。<a href=\"http://www.blockfilter.com/\">http://www.blockfilter.com/</a></p>\n<p>19.KasMail-需要注册，邮箱时限可以自由定义，可以长达一个月或永久不销毁。<a href=\"http://www.kasmail.com/\">http://www.kasmail.com/</a></p>\n<p>20.ShieldMail-无需注册，但广告较多，加载较慢。<a href=\"http://www.shieldemail.com/\">http://www.shieldemail.com/</a></p>\n<p>21.十分钟临时邮箱 <a href=\"http://mail.bccto.me/\">http://mail.bccto.me/ </a>十分钟临时邮箱</p>\n<p>22.五天的免费临时邮箱，多种语言界面，多种邮箱后缀可选。 <a href=\"http://www.yopmail.com/zh/\">http://www.yopmail.com/zh/ </a></p>\n<p>22.二十四小时免费临时邮箱：<a href=\"http://24mail.chacuo.net/zhtw\">http://24mail.chacuo.net/zhtw</a></p>\n<p>23.MailDrop：<a href=\"http://maildrop.cc/\">http://maildrop.cc/</a> 24小时的免费邮箱。可以容纳十封邮件，只能接收纯100kb以下的文本或html邮件。</p>\n<p>24.MailDude:<a href=\"http://www.maildu.de/\">http://www.maildu.de/</a>只需要在网站上输入自己的真实邮箱地址，即可生成一个临时邮箱地址，让你使用<a href=\"mailto:&#78;&#97;&#x6d;&#101;&#x40;&#x6d;&#x61;&#105;&#x6c;&#100;&#117;&#46;&#100;&#x65;\">&#78;&#97;&#x6d;&#101;&#x40;&#x6d;&#x61;&#105;&#x6c;&#100;&#117;&#46;&#100;&#x65;</a>来收信，并且只能收取邮件，而不同发送邮件。支持中文显示。MailDude 会为你收取邮件并保存一小时，让你有足够的时间可以点选邮件内的确认链结，帮助你完成帐号验证。特别是你想测试一些网络服务，又不希望泄漏自己的真实信箱时。不过切记不要使用MailDude 来接收密码、或具有私人资讯的邮件，因为每个MailDude 信箱都是公开的、且每个人都能够存取该讯息。</p>\n<p>25.Forward Cat：<a href=\"http://www.forward.cat/\">http://www.forward.cat/</a> 一个提供临时邮箱服务的平台，通过该工具可以让用户注册网络上的各种服务，而不需使用真实的邮箱，避免被恶意骚扰，同时还可以解决很多未知吧临时邮箱拒之门外的弊端，有了邮件转存发送服务即可解决。</p>\n<p><em>所有资源来自于网络。</em></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"临时邮箱有什么用？\"><a href=\"#临时邮箱有什么用？\" class=\"headerlink\" title=\"临时邮箱有什么用？\"></a>临时邮箱有什么用？</h1><p>有时候注册某些论坛必须提供邮箱，但你又不想使用你常用的邮箱，因为你不想收到不必要的邮件。又有些时候你只是想试用一次某些服务，不想使用常用邮箱注册。临时邮箱应运而生，在注册这些不重要的服务时使用临时邮箱作为替身是个很好的选择。临时邮箱具有匿名性，能有效减少垃圾邮件；同时具有时效性，邮箱在短时间内会自毁。</p>\n<h1 id=\"二十五个临时邮箱网站\"><a href=\"#二十五个临时邮箱网站\" class=\"headerlink\" title=\"二十五个临时邮箱网站\"></a>二十五个临时邮箱网站</h1><p>1.GuerrillaMail-提供15分钟的临时邮箱，你能接收和回复邮件。<a href=\"http://www.guerrillamail.com/\">http://www.guerrillamail.com/</a></p>\n<p>2.SpamBox-提供可自定义的邮箱时限，并能将邮件转发到你设定的邮箱。<a href=\"http://spambox.us/\">http://spambox.us/</a></p>\n<p>3.<a href=\"http://10minutemail.com/10MinuteMail/index.html\">http://10minutemail.com/10MinuteMail/index.html</a> 10 Minute Mail-顾名思义，提供10分钟的临时邮箱，有中文版！</p>\n<p>4.NowMyMail-是个很好用的暂时信箱，只要按一个键就会得到一个时效一小时的暂时信箱。<a href=\"http://www.nowmymail.com/\">http://www.nowmymail.com</a></p>\n<p>5.PookMail- 免费的暂时信箱，目前支持多普通话言，只要在右方输入一个帐号，点选进入后就能使用该E-Mail收取信件。<a href=\"http://pookmail.blogspot.com/\">http://pookmail.blogspot.com/</a></p>\n<p>6.Hidzz -提供一个5天期限的临时邮箱，你可以在期限内登录临时邮箱查收邮件，登录邮箱的ID是你的真实邮箱。<a href=\"http://hidzz.com/\">http://hidzz.com/</a></p>\n<p>7.MailCatch-和其它临时邮箱相比有一个比较突出的特点，像Gmail那样，提供邮件的RSS输出。<a href=\"http://mailcatch.com/en/disposable-email\">http://mailcatch.com/en/disposable-email</a></p>\n<p>8.Incognito Mail-提供1小时的临时邮箱，用户名可以自定义。<a href=\"http://www.incognitomail.com/\">http://www.incognitomail.com/</a></p>\n<p>9.MintEmail-和MailZIla一样，一打开就生成邮箱，免除多余的点击，而且邮箱地址会自动复制到粘贴板，方便使用。<a href=\"http://www.mintemail.com/\">http://www.mintemail.com/</a></p>\n<p>10.Dodgeit-又一个提供邮件RSS输出的临时邮箱服务。<a href=\"http://dodgeit.com/\">http://dodgeit.com/</a></p>\n<p>11.SpamGourmet-需要注册方可使用，有中文版。<a href=\"http://www.spamgourmet.com/\">http://www.spamgourmet.com/</a></p>\n<p>12.E4ward-也是一个需要注册的临时邮箱服务，能将邮件转发到指定的邮箱。<a href=\"http://www.e4ward.com/\">http://www.e4ward.com/</a></p>\n<p>13.SayNotoSpams -提供15分钟时限的临时邮箱。<a href=\"http://www.saynotospams.com/\">http://www.saynotospams.com/</a></p>\n<p>14.GishPuppy-需要注册方可使用，邮件自动转发到指定邮箱，当你不需要这个邮箱时，可手动销毁。<a href=\"http://www.gishpuppy.com/\">http://www.gishpuppy.com/</a></p>\n<p>15.Mailinator-界面很漂亮，而且有多个邮箱后缀可选。<a href=\"http://www.mailinator.com/\">http://www.mailinator.com/</a></p>\n<p>16.Jetable-一个提供繁体中文版的临时邮箱服务。<a href=\"http://www.jetable.org/zh/index\">http://www.jetable.org/zh/index</a></p>\n<p>17.MailEater-无需注册，但有弹出窗口广告。<a href=\"http://www.maileater.com/\">http://www.maileater.com/</a></p>\n<p>18.Block Filter-页面打开自动生成邮箱并复制到剪贴板，并实时地自动检查新邮件。<a href=\"http://www.blockfilter.com/\">http://www.blockfilter.com/</a></p>\n<p>19.KasMail-需要注册，邮箱时限可以自由定义，可以长达一个月或永久不销毁。<a href=\"http://www.kasmail.com/\">http://www.kasmail.com/</a></p>\n<p>20.ShieldMail-无需注册，但广告较多，加载较慢。<a href=\"http://www.shieldemail.com/\">http://www.shieldemail.com/</a></p>\n<p>21.十分钟临时邮箱 <a href=\"http://mail.bccto.me/\">http://mail.bccto.me/ </a>十分钟临时邮箱</p>\n<p>22.五天的免费临时邮箱，多种语言界面，多种邮箱后缀可选。 <a href=\"http://www.yopmail.com/zh/\">http://www.yopmail.com/zh/ </a></p>\n<p>22.二十四小时免费临时邮箱：<a href=\"http://24mail.chacuo.net/zhtw\">http://24mail.chacuo.net/zhtw</a></p>\n<p>23.MailDrop：<a href=\"http://maildrop.cc/\">http://maildrop.cc/</a> 24小时的免费邮箱。可以容纳十封邮件，只能接收纯100kb以下的文本或html邮件。</p>\n<p>24.MailDude:<a href=\"http://www.maildu.de/\">http://www.maildu.de/</a>只需要在网站上输入自己的真实邮箱地址，即可生成一个临时邮箱地址，让你使用<a href=\"mailto:&#78;&#97;&#x6d;&#101;&#x40;&#x6d;&#x61;&#105;&#x6c;&#100;&#117;&#46;&#100;&#x65;\">&#78;&#97;&#x6d;&#101;&#x40;&#x6d;&#x61;&#105;&#x6c;&#100;&#117;&#46;&#100;&#x65;</a>来收信，并且只能收取邮件，而不同发送邮件。支持中文显示。MailDude 会为你收取邮件并保存一小时，让你有足够的时间可以点选邮件内的确认链结，帮助你完成帐号验证。特别是你想测试一些网络服务，又不希望泄漏自己的真实信箱时。不过切记不要使用MailDude 来接收密码、或具有私人资讯的邮件，因为每个MailDude 信箱都是公开的、且每个人都能够存取该讯息。</p>\n<p>25.Forward Cat：<a href=\"http://www.forward.cat/\">http://www.forward.cat/</a> 一个提供临时邮箱服务的平台，通过该工具可以让用户注册网络上的各种服务，而不需使用真实的邮箱，避免被恶意骚扰，同时还可以解决很多未知吧临时邮箱拒之门外的弊端，有了邮件转存发送服务即可解决。</p>\n<p><em>所有资源来自于网络。</em></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"临时邮箱","path":"172582584/","eyeCatchImage":null,"excerpt":"<center>有时候注册某些论坛必须提供邮箱，但你又不想使用你常用的邮箱，因为你不想收到不必要的邮件。</center>","date":{"_isAMomentObject":true,"_i":"2016-01-12T10:49:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2016-01-12T10:49:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"收集","tags":["邮箱"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"何以解忧","description":"<center>好久没有在一天内读完一本书了。</center>","abbrlink":2567344891,"date":"2017-02-12T10:49:00.000Z","_content":"好久没有在一天内读完一本书了。\n\n高中的某一天，偶然从同学手上看到《解忧杂货店》，听说获得了某某大奖。\n\n刚刚又查到，明年会有同名电影上映。莫名的期待。\n\n很喜欢其中写的一句话\n> 相信我，即使现在再怎么痛苦，明天一定会比今天更美好。——浪矢杂货店。\n\n全世界七十亿人，每一个人心底都会积淀着小小心事，安安静静，历经这岁月的洗礼。\n\n我也曾几何时想，和人分享那些心里不曾被光照的故事，也许很幼稚，也许很可笑，也许我再也不会提起。\n\n可是故事，会像那首《重生》一样吗，一样被后人在某个温暖的午后轻轻地说起，然后会心一笑吗。\n\n平平淡淡，却不失精彩。\n\n何以解忧？","source":"_posts/何以解忧.md","raw":"---\ntitle: 何以解忧\ntags:\n  - 解忧杂货店\ncategories: 阅读\ndescription: <center>好久没有在一天内读完一本书了。</center>\nabbrlink: 2567344891\ndate: 2017-02-12 18:49:00\n---\n好久没有在一天内读完一本书了。\n\n高中的某一天，偶然从同学手上看到《解忧杂货店》，听说获得了某某大奖。\n\n刚刚又查到，明年会有同名电影上映。莫名的期待。\n\n很喜欢其中写的一句话\n> 相信我，即使现在再怎么痛苦，明天一定会比今天更美好。——浪矢杂货店。\n\n全世界七十亿人，每一个人心底都会积淀着小小心事，安安静静，历经这岁月的洗礼。\n\n我也曾几何时想，和人分享那些心里不曾被光照的故事，也许很幼稚，也许很可笑，也许我再也不会提起。\n\n可是故事，会像那首《重生》一样吗，一样被后人在某个温暖的午后轻轻地说起，然后会心一笑吗。\n\n平平淡淡，却不失精彩。\n\n何以解忧？","slug":"何以解忧","published":1,"updated":"2022-09-13T14:24:02.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooi0013nq547thd4eor","content":"<p>好久没有在一天内读完一本书了。</p>\n<p>高中的某一天，偶然从同学手上看到《解忧杂货店》，听说获得了某某大奖。</p>\n<p>刚刚又查到，明年会有同名电影上映。莫名的期待。</p>\n<p>很喜欢其中写的一句话</p>\n<blockquote>\n<p>相信我，即使现在再怎么痛苦，明天一定会比今天更美好。——浪矢杂货店。</p>\n</blockquote>\n<p>全世界七十亿人，每一个人心底都会积淀着小小心事，安安静静，历经这岁月的洗礼。</p>\n<p>我也曾几何时想，和人分享那些心里不曾被光照的故事，也许很幼稚，也许很可笑，也许我再也不会提起。</p>\n<p>可是故事，会像那首《重生》一样吗，一样被后人在某个温暖的午后轻轻地说起，然后会心一笑吗。</p>\n<p>平平淡淡，却不失精彩。</p>\n<p>何以解忧？</p>\n","site":{"data":{}},"excerpt":"","more":"<p>好久没有在一天内读完一本书了。</p>\n<p>高中的某一天，偶然从同学手上看到《解忧杂货店》，听说获得了某某大奖。</p>\n<p>刚刚又查到，明年会有同名电影上映。莫名的期待。</p>\n<p>很喜欢其中写的一句话</p>\n<blockquote>\n<p>相信我，即使现在再怎么痛苦，明天一定会比今天更美好。——浪矢杂货店。</p>\n</blockquote>\n<p>全世界七十亿人，每一个人心底都会积淀着小小心事，安安静静，历经这岁月的洗礼。</p>\n<p>我也曾几何时想，和人分享那些心里不曾被光照的故事，也许很幼稚，也许很可笑，也许我再也不会提起。</p>\n<p>可是故事，会像那首《重生》一样吗，一样被后人在某个温暖的午后轻轻地说起，然后会心一笑吗。</p>\n<p>平平淡淡，却不失精彩。</p>\n<p>何以解忧？</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"何以解忧","path":"2567344891/","eyeCatchImage":null,"excerpt":"<center>好久没有在一天内读完一本书了。</center>","date":{"_isAMomentObject":true,"_i":"2017-02-12T10:49:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-02-12T10:49:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"阅读","tags":["解忧杂货店"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"JavaBrowser 开发","description":"<center>开发了一个简单的网页浏览器，可以实现网页访问、保存，以及操作的前进、后退功能。</center>","abbrlink":2069714304,"date":"2016-11-30T07:30:00.000Z","_content":"\n开发了一个简单的网页浏览器，可以实现网页访问、保存，以及操作的前进、后退功能。\n\n# 功能描述\n- 访问：输入URL，可以在线访问对应网页。\n- 另存为：可以保存正在访问的页面。\n- 前进：访问当前页面的上一个页面。\n- 后退：访问当前页面的下一个页面。\n- 查看源文件：查看访问页面的HTML源文件，并且可以保存。\n<br />\n\n# 理论基础\n- 事件种类（低级事件和语义事件）、事件监听器接口、事件适配器（Adapter）\n- Swing相关组件（JFram、JMenu、JButton、JTextField及JOptionPane）\n- 输入输出流\n<br />\n\n# 总体设计\n主要程序由WebBrowser.java和ViewSourceFrame.java两个文件组成。\n1. WebBrowser.java\n\t此文件包含名为WebBrowser的public类，其主要功能为生成网页浏览器的主体框架，实现框架上各个组件的事件监听。WebBrowser.java主要包括四个模块：图形用户界面的构建、组件监听接口的实现、文件保存功能的实现、查看源代码框架的生成。\n2. ViewSourceFrame.java\n\t此文件包含名为ViewSourceFrame的类，其主要功能是实现了源文件查看的主题框架，并实现了源文件的保存功能。ViewSourceFrame.java主要包括两个模块：图形用户界面的构建和组件监听接口的实现。\n<br />\n\n# 代码实现\n[https://github.com/s1xt33nth/JavaBrowser](https://github.com/s1xt33nth/JavaBrowser \"https://github.com/s1xt33nth/JavaBrowser\")\n\n# 参考资料\n[Java 发送邮件 | 菜鸟教程](http://www.runoob.com/java/java-sending-email.html \"Java 发送邮件 | 菜鸟教程\")\n[【Apache POI】Java 读取Excel文件](https://blog.csdn.net/lmb55/article/details/64537293 \"【Apache POI】Java 读取Excel文件\")\n[java读取Excel的方法，解析xls、xlsx两种格式](https://blog.csdn.net/superdog007/article/details/48338337 \"java读取Excel的方法，解析xls、xlsx两种格式\")\n[Java Web(十三) 使用javamail进行发送邮件，(使用QQ，163，新浪邮箱服务器)](http://www.cnblogs.com/whgk/p/6506027.html \"Java Web(十三) 使用javamail进行发送邮件，(使用QQ，163，新浪邮箱服务器)\")\n[POI对Excel自定义日期格式的读取 - ITeye - ITeye博客](http://yl-fighting.iteye.com/blog/1726285726285 \"POI对Excel自定义日期格式的读取 - ITeye - ITeye博客\")\n","source":"_posts/JavaBrowser 开发.md","raw":"---\ntitle: JavaBrowser 开发\ntags:\n  - Java\ncategories: 开发\ndescription: <center>开发了一个简单的网页浏览器，可以实现网页访问、保存，以及操作的前进、后退功能。</center>\nabbrlink: 2069714304\ndate: 2016-11-30 15:30:00\n---\n\n开发了一个简单的网页浏览器，可以实现网页访问、保存，以及操作的前进、后退功能。\n\n# 功能描述\n- 访问：输入URL，可以在线访问对应网页。\n- 另存为：可以保存正在访问的页面。\n- 前进：访问当前页面的上一个页面。\n- 后退：访问当前页面的下一个页面。\n- 查看源文件：查看访问页面的HTML源文件，并且可以保存。\n<br />\n\n# 理论基础\n- 事件种类（低级事件和语义事件）、事件监听器接口、事件适配器（Adapter）\n- Swing相关组件（JFram、JMenu、JButton、JTextField及JOptionPane）\n- 输入输出流\n<br />\n\n# 总体设计\n主要程序由WebBrowser.java和ViewSourceFrame.java两个文件组成。\n1. WebBrowser.java\n\t此文件包含名为WebBrowser的public类，其主要功能为生成网页浏览器的主体框架，实现框架上各个组件的事件监听。WebBrowser.java主要包括四个模块：图形用户界面的构建、组件监听接口的实现、文件保存功能的实现、查看源代码框架的生成。\n2. ViewSourceFrame.java\n\t此文件包含名为ViewSourceFrame的类，其主要功能是实现了源文件查看的主题框架，并实现了源文件的保存功能。ViewSourceFrame.java主要包括两个模块：图形用户界面的构建和组件监听接口的实现。\n<br />\n\n# 代码实现\n[https://github.com/s1xt33nth/JavaBrowser](https://github.com/s1xt33nth/JavaBrowser \"https://github.com/s1xt33nth/JavaBrowser\")\n\n# 参考资料\n[Java 发送邮件 | 菜鸟教程](http://www.runoob.com/java/java-sending-email.html \"Java 发送邮件 | 菜鸟教程\")\n[【Apache POI】Java 读取Excel文件](https://blog.csdn.net/lmb55/article/details/64537293 \"【Apache POI】Java 读取Excel文件\")\n[java读取Excel的方法，解析xls、xlsx两种格式](https://blog.csdn.net/superdog007/article/details/48338337 \"java读取Excel的方法，解析xls、xlsx两种格式\")\n[Java Web(十三) 使用javamail进行发送邮件，(使用QQ，163，新浪邮箱服务器)](http://www.cnblogs.com/whgk/p/6506027.html \"Java Web(十三) 使用javamail进行发送邮件，(使用QQ，163，新浪邮箱服务器)\")\n[POI对Excel自定义日期格式的读取 - ITeye - ITeye博客](http://yl-fighting.iteye.com/blog/1726285726285 \"POI对Excel自定义日期格式的读取 - ITeye - ITeye博客\")\n","slug":"JavaBrowser 开发","published":1,"updated":"2022-09-13T14:24:02.922Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooi0015nq548ay32l0j","content":"<p>开发了一个简单的网页浏览器，可以实现网页访问、保存，以及操作的前进、后退功能。</p>\n<h1 id=\"功能描述\"><a href=\"#功能描述\" class=\"headerlink\" title=\"功能描述\"></a>功能描述</h1><ul>\n<li>访问：输入URL，可以在线访问对应网页。</li>\n<li>另存为：可以保存正在访问的页面。</li>\n<li>前进：访问当前页面的上一个页面。</li>\n<li>后退：访问当前页面的下一个页面。</li>\n<li>查看源文件：查看访问页面的HTML源文件，并且可以保存。<br /></li>\n</ul>\n<h1 id=\"理论基础\"><a href=\"#理论基础\" class=\"headerlink\" title=\"理论基础\"></a>理论基础</h1><ul>\n<li>事件种类（低级事件和语义事件）、事件监听器接口、事件适配器（Adapter）</li>\n<li>Swing相关组件（JFram、JMenu、JButton、JTextField及JOptionPane）</li>\n<li>输入输出流<br /></li>\n</ul>\n<h1 id=\"总体设计\"><a href=\"#总体设计\" class=\"headerlink\" title=\"总体设计\"></a>总体设计</h1><p>主要程序由WebBrowser.java和ViewSourceFrame.java两个文件组成。</p>\n<ol>\n<li>WebBrowser.java<br> 此文件包含名为WebBrowser的public类，其主要功能为生成网页浏览器的主体框架，实现框架上各个组件的事件监听。WebBrowser.java主要包括四个模块：图形用户界面的构建、组件监听接口的实现、文件保存功能的实现、查看源代码框架的生成。</li>\n<li>ViewSourceFrame.java<br> 此文件包含名为ViewSourceFrame的类，其主要功能是实现了源文件查看的主题框架，并实现了源文件的保存功能。ViewSourceFrame.java主要包括两个模块：图形用户界面的构建和组件监听接口的实现。<br /></li>\n</ol>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p><a href=\"https://github.com/s1xt33nth/JavaBrowser\" title=\"https://github.com/s1xt33nth/JavaBrowser\">https://github.com/s1xt33nth/JavaBrowser</a></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"http://www.runoob.com/java/java-sending-email.html\" title=\"Java 发送邮件 | 菜鸟教程\">Java 发送邮件 | 菜鸟教程</a><br><a href=\"https://blog.csdn.net/lmb55/article/details/64537293\" title=\"【Apache POI】Java 读取Excel文件\">【Apache POI】Java 读取Excel文件</a><br><a href=\"https://blog.csdn.net/superdog007/article/details/48338337\" title=\"java读取Excel的方法，解析xls、xlsx两种格式\">java读取Excel的方法，解析xls、xlsx两种格式</a><br><a href=\"http://www.cnblogs.com/whgk/p/6506027.html\" title=\"Java Web(十三) 使用javamail进行发送邮件，(使用QQ，163，新浪邮箱服务器)\">Java Web(十三) 使用javamail进行发送邮件，(使用QQ，163，新浪邮箱服务器)</a><br><a href=\"http://yl-fighting.iteye.com/blog/1726285726285\" title=\"POI对Excel自定义日期格式的读取 - ITeye - ITeye博客\">POI对Excel自定义日期格式的读取 - ITeye - ITeye博客</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>开发了一个简单的网页浏览器，可以实现网页访问、保存，以及操作的前进、后退功能。</p>\n<h1 id=\"功能描述\"><a href=\"#功能描述\" class=\"headerlink\" title=\"功能描述\"></a>功能描述</h1><ul>\n<li>访问：输入URL，可以在线访问对应网页。</li>\n<li>另存为：可以保存正在访问的页面。</li>\n<li>前进：访问当前页面的上一个页面。</li>\n<li>后退：访问当前页面的下一个页面。</li>\n<li>查看源文件：查看访问页面的HTML源文件，并且可以保存。<br /></li>\n</ul>\n<h1 id=\"理论基础\"><a href=\"#理论基础\" class=\"headerlink\" title=\"理论基础\"></a>理论基础</h1><ul>\n<li>事件种类（低级事件和语义事件）、事件监听器接口、事件适配器（Adapter）</li>\n<li>Swing相关组件（JFram、JMenu、JButton、JTextField及JOptionPane）</li>\n<li>输入输出流<br /></li>\n</ul>\n<h1 id=\"总体设计\"><a href=\"#总体设计\" class=\"headerlink\" title=\"总体设计\"></a>总体设计</h1><p>主要程序由WebBrowser.java和ViewSourceFrame.java两个文件组成。</p>\n<ol>\n<li>WebBrowser.java<br> 此文件包含名为WebBrowser的public类，其主要功能为生成网页浏览器的主体框架，实现框架上各个组件的事件监听。WebBrowser.java主要包括四个模块：图形用户界面的构建、组件监听接口的实现、文件保存功能的实现、查看源代码框架的生成。</li>\n<li>ViewSourceFrame.java<br> 此文件包含名为ViewSourceFrame的类，其主要功能是实现了源文件查看的主题框架，并实现了源文件的保存功能。ViewSourceFrame.java主要包括两个模块：图形用户界面的构建和组件监听接口的实现。<br /></li>\n</ol>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p><a href=\"https://github.com/s1xt33nth/JavaBrowser\" title=\"https://github.com/s1xt33nth/JavaBrowser\">https://github.com/s1xt33nth/JavaBrowser</a></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"http://www.runoob.com/java/java-sending-email.html\" title=\"Java 发送邮件 | 菜鸟教程\">Java 发送邮件 | 菜鸟教程</a><br><a href=\"https://blog.csdn.net/lmb55/article/details/64537293\" title=\"【Apache POI】Java 读取Excel文件\">【Apache POI】Java 读取Excel文件</a><br><a href=\"https://blog.csdn.net/superdog007/article/details/48338337\" title=\"java读取Excel的方法，解析xls、xlsx两种格式\">java读取Excel的方法，解析xls、xlsx两种格式</a><br><a href=\"http://www.cnblogs.com/whgk/p/6506027.html\" title=\"Java Web(十三) 使用javamail进行发送邮件，(使用QQ，163，新浪邮箱服务器)\">Java Web(十三) 使用javamail进行发送邮件，(使用QQ，163，新浪邮箱服务器)</a><br><a href=\"http://yl-fighting.iteye.com/blog/1726285726285\" title=\"POI对Excel自定义日期格式的读取 - ITeye - ITeye博客\">POI对Excel自定义日期格式的读取 - ITeye - ITeye博客</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"JavaBrowser 开发","path":"2069714304/","eyeCatchImage":null,"excerpt":"<center>开发了一个简单的网页浏览器，可以实现网页访问、保存，以及操作的前进、后退功能。</center>","date":{"_isAMomentObject":true,"_i":"2016-11-30T07:30:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2016-11-30T07:30:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"企业人员信息管理系统开发","description":"<center>基于 Swing 的可视化界面企业人员信息管理系统。</center>","abbrlink":4225233647,"date":"2017-02-12T10:49:00.000Z","_content":"# 企业人员信息管理系统\n\nSwing-based visual interface enterprise personnel information management system.\n\n基于 Swing 的可视化界面企业人员信息管理系统。\n\n## 一、需求分析：\n\n某小型公司，主要有三类人员：经理、兼职技术人员和兼职推销员。这三类人员共同拥有的相关属性：姓名、编号；相关方法：获取当月薪水的getPay()方法、显示个人信息的toString()方法。\n\n人员编号基数为1000，每创建一个人员实例对象，其编号属性的值顺序加1。月薪计算方法：经理拿固定月薪8000元；兼职技术人员按每小时100元领取月薪；兼职推销人员的月薪按当月的销售额的4%提成。\n\n要求：采用面向对象的编程思想，结合题意自己确定需要定义的类及各类的属性、构造方法和其他方法，并编写程序实现功能：\n\n1. 查询职工个人信息，可通过姓名、编号查询；\n2. 查询部门所有职工的详细信息；\n3. 修改职工信息；\n4. 删除职工信息；\n5. 添加职工信息；\n6. 查询所有职工信息，并将其存储到外设职工信息文件EmployeeData.txt中或者SQLServer数据库中，数据库中的表根据系统需求自己定义。\n\n## 二、概要设计：\n\n实现整个系统需要五个类文件。Employee类是所有人员的父类，Manager类、Saler类和Technician类继承于这个父类，并有自己的构造方法和其他方法，如图1所示。CompanyList类实现一个ArrayList集合，用来存放公司人员信息。其有增删改查等相关的方法，如图2所示。OperationPanel类是继承于JFrame类、实现ActionListener类的界面类，包含actionPerformed方法和main方法。\n\nEmployee类及其子类：\n\n![Employee类及其子类](../images/Employee类及其子类.png)\n\n系统功能模块图：\n\n![系统功能模块图](../images/系统功能模块图.png)\n\n### 三、详细设计：\n\n1. Employee类：\n\nString类型的变量name存放员工姓名，long类型的变量id存放员工编号，int类型的静态变量ID具有1000的初值，表示员工的编号基数。构造方法中将形参name放入域变量name，并让ID自增一次。\n\n2. Manager类：\n\n经理的工资因为是个常量，所以用double类型的变量salary来赋初值。构造方法调用父类的构造方法，并将自增后的ID放入id中。方法getPay()返回经理的工资数目，方法toString()返回其个人姓名、编号和工资。\n\n3. Saler类：\n\n销售人员类和经理类相似，只是重新定义一个double类型的salesNum变量，用来表示销售人员的销售额。在方法getPay()中，计算出工资并返回。\n\n4. Technician类：\n\n技术人员类和销售人员类相似，重新定义一个double类型的workHours变量，表示技术人员的工作小时数。在方法getPay()中，计算出工资并返回。\n\n5. CompanyList类：\n\n该类初始化一个ArrayList集合，用来存放公司所有人员信息。有以下几种方法：方法add()添加人员信息，方法remove()删除人员信息，方法modify()修改员工的姓名和编号，方法queryAll()用来查询所有人员的信息，方法query()查询单个员工的个人信息，方法save()可以将公司员工所有人员信息存放之外部EmployeeData.txt文件中。\n\n6. OperationPanel类：\n\n该类继承JFrame类，实现ActionListener接口。其中包含JLabel、JtextField、JButton、JeditorPane等Swing控件。在其构造方法中，使用采用了GridBagLayout布局的主面板，采用BoxLayout布局的子面板来放置各个功能模块的控件，并对每个按钮控件添加监听器。重写方法actionPerformed()，使其响应各个按钮对应的方法。在方法main()中初始化界面。\n\n布局原型图：\n\n![布局原型图](../images/布局原型图.png)\n\n## 四、主要源程序代码：\n\n1. Employee类：\n\n![Employee](../images/Employee类.png)\n\n2. Manager类：\n\n![Manager](../images/Manager类.png)\n\n3. Saler类：\n\n![Saler](../images/Saler类.png)\n\n4. Technician类：\n\n![Technician](../images/Technician类.png)\n\n5. CompanyList类：（部分程序）\n\n![CompanyLis](../images/CompanyList类.png)\n\n6. OperationPanel类：（部分程序）\n\n![OperationPanel](../images/OperationPanel类.png)\n\n## 五、程序运行结果\n\n![程序运行结果](../images/程序运行结果.png)\n\n## 六、源程序\n\n[CompanyManagement 项目](https://github.com/sakiila/CompanyManagement)\n\n## 七、运行\n\n方式一：在右侧 Releases 中下载最新的 CompanyManagement.jar 文件，在本地环境的控制台使用 `java -jar CompanyManagement.jar` 命令运行即可。\n\n方式二（推荐）：Fork 本项目代码，Clone 到本地环境，使用 Eclipse 或 IntelliJ 打开本项目工程，运行 OperationPanel 类的 main 方法即可。\n","source":"_posts/企业人员信息管理系统开发.md","raw":"---\ntitle: 企业人员信息管理系统开发\ntags:\n  - Java\ncategories: 开发\ndescription: <center>基于 Swing 的可视化界面企业人员信息管理系统。</center>\nabbrlink: 4225233647\ndate: 2017-02-12 18:49:00\n---\n# 企业人员信息管理系统\n\nSwing-based visual interface enterprise personnel information management system.\n\n基于 Swing 的可视化界面企业人员信息管理系统。\n\n## 一、需求分析：\n\n某小型公司，主要有三类人员：经理、兼职技术人员和兼职推销员。这三类人员共同拥有的相关属性：姓名、编号；相关方法：获取当月薪水的getPay()方法、显示个人信息的toString()方法。\n\n人员编号基数为1000，每创建一个人员实例对象，其编号属性的值顺序加1。月薪计算方法：经理拿固定月薪8000元；兼职技术人员按每小时100元领取月薪；兼职推销人员的月薪按当月的销售额的4%提成。\n\n要求：采用面向对象的编程思想，结合题意自己确定需要定义的类及各类的属性、构造方法和其他方法，并编写程序实现功能：\n\n1. 查询职工个人信息，可通过姓名、编号查询；\n2. 查询部门所有职工的详细信息；\n3. 修改职工信息；\n4. 删除职工信息；\n5. 添加职工信息；\n6. 查询所有职工信息，并将其存储到外设职工信息文件EmployeeData.txt中或者SQLServer数据库中，数据库中的表根据系统需求自己定义。\n\n## 二、概要设计：\n\n实现整个系统需要五个类文件。Employee类是所有人员的父类，Manager类、Saler类和Technician类继承于这个父类，并有自己的构造方法和其他方法，如图1所示。CompanyList类实现一个ArrayList集合，用来存放公司人员信息。其有增删改查等相关的方法，如图2所示。OperationPanel类是继承于JFrame类、实现ActionListener类的界面类，包含actionPerformed方法和main方法。\n\nEmployee类及其子类：\n\n![Employee类及其子类](../images/Employee类及其子类.png)\n\n系统功能模块图：\n\n![系统功能模块图](../images/系统功能模块图.png)\n\n### 三、详细设计：\n\n1. Employee类：\n\nString类型的变量name存放员工姓名，long类型的变量id存放员工编号，int类型的静态变量ID具有1000的初值，表示员工的编号基数。构造方法中将形参name放入域变量name，并让ID自增一次。\n\n2. Manager类：\n\n经理的工资因为是个常量，所以用double类型的变量salary来赋初值。构造方法调用父类的构造方法，并将自增后的ID放入id中。方法getPay()返回经理的工资数目，方法toString()返回其个人姓名、编号和工资。\n\n3. Saler类：\n\n销售人员类和经理类相似，只是重新定义一个double类型的salesNum变量，用来表示销售人员的销售额。在方法getPay()中，计算出工资并返回。\n\n4. Technician类：\n\n技术人员类和销售人员类相似，重新定义一个double类型的workHours变量，表示技术人员的工作小时数。在方法getPay()中，计算出工资并返回。\n\n5. CompanyList类：\n\n该类初始化一个ArrayList集合，用来存放公司所有人员信息。有以下几种方法：方法add()添加人员信息，方法remove()删除人员信息，方法modify()修改员工的姓名和编号，方法queryAll()用来查询所有人员的信息，方法query()查询单个员工的个人信息，方法save()可以将公司员工所有人员信息存放之外部EmployeeData.txt文件中。\n\n6. OperationPanel类：\n\n该类继承JFrame类，实现ActionListener接口。其中包含JLabel、JtextField、JButton、JeditorPane等Swing控件。在其构造方法中，使用采用了GridBagLayout布局的主面板，采用BoxLayout布局的子面板来放置各个功能模块的控件，并对每个按钮控件添加监听器。重写方法actionPerformed()，使其响应各个按钮对应的方法。在方法main()中初始化界面。\n\n布局原型图：\n\n![布局原型图](../images/布局原型图.png)\n\n## 四、主要源程序代码：\n\n1. Employee类：\n\n![Employee](../images/Employee类.png)\n\n2. Manager类：\n\n![Manager](../images/Manager类.png)\n\n3. Saler类：\n\n![Saler](../images/Saler类.png)\n\n4. Technician类：\n\n![Technician](../images/Technician类.png)\n\n5. CompanyList类：（部分程序）\n\n![CompanyLis](../images/CompanyList类.png)\n\n6. OperationPanel类：（部分程序）\n\n![OperationPanel](../images/OperationPanel类.png)\n\n## 五、程序运行结果\n\n![程序运行结果](../images/程序运行结果.png)\n\n## 六、源程序\n\n[CompanyManagement 项目](https://github.com/sakiila/CompanyManagement)\n\n## 七、运行\n\n方式一：在右侧 Releases 中下载最新的 CompanyManagement.jar 文件，在本地环境的控制台使用 `java -jar CompanyManagement.jar` 命令运行即可。\n\n方式二（推荐）：Fork 本项目代码，Clone 到本地环境，使用 Eclipse 或 IntelliJ 打开本项目工程，运行 OperationPanel 类的 main 方法即可。\n","slug":"企业人员信息管理系统开发","published":1,"updated":"2022-09-13T14:24:02.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooi0018nq54gjntd3vw","content":"<h1 id=\"企业人员信息管理系统\"><a href=\"#企业人员信息管理系统\" class=\"headerlink\" title=\"企业人员信息管理系统\"></a>企业人员信息管理系统</h1><p>Swing-based visual interface enterprise personnel information management system.</p>\n<p>基于 Swing 的可视化界面企业人员信息管理系统。</p>\n<h2 id=\"一、需求分析：\"><a href=\"#一、需求分析：\" class=\"headerlink\" title=\"一、需求分析：\"></a>一、需求分析：</h2><p>某小型公司，主要有三类人员：经理、兼职技术人员和兼职推销员。这三类人员共同拥有的相关属性：姓名、编号；相关方法：获取当月薪水的getPay()方法、显示个人信息的toString()方法。</p>\n<p>人员编号基数为1000，每创建一个人员实例对象，其编号属性的值顺序加1。月薪计算方法：经理拿固定月薪8000元；兼职技术人员按每小时100元领取月薪；兼职推销人员的月薪按当月的销售额的4%提成。</p>\n<p>要求：采用面向对象的编程思想，结合题意自己确定需要定义的类及各类的属性、构造方法和其他方法，并编写程序实现功能：</p>\n<ol>\n<li>查询职工个人信息，可通过姓名、编号查询；</li>\n<li>查询部门所有职工的详细信息；</li>\n<li>修改职工信息；</li>\n<li>删除职工信息；</li>\n<li>添加职工信息；</li>\n<li>查询所有职工信息，并将其存储到外设职工信息文件EmployeeData.txt中或者SQLServer数据库中，数据库中的表根据系统需求自己定义。</li>\n</ol>\n<h2 id=\"二、概要设计：\"><a href=\"#二、概要设计：\" class=\"headerlink\" title=\"二、概要设计：\"></a>二、概要设计：</h2><p>实现整个系统需要五个类文件。Employee类是所有人员的父类，Manager类、Saler类和Technician类继承于这个父类，并有自己的构造方法和其他方法，如图1所示。CompanyList类实现一个ArrayList集合，用来存放公司人员信息。其有增删改查等相关的方法，如图2所示。OperationPanel类是继承于JFrame类、实现ActionListener类的界面类，包含actionPerformed方法和main方法。</p>\n<p>Employee类及其子类：</p>\n<p><img src=\"../images/Employee%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB.png\" alt=\"Employee类及其子类\"></p>\n<p>系统功能模块图：</p>\n<p><img src=\"../images/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97%E5%9B%BE.png\" alt=\"系统功能模块图\"></p>\n<h3 id=\"三、详细设计：\"><a href=\"#三、详细设计：\" class=\"headerlink\" title=\"三、详细设计：\"></a>三、详细设计：</h3><ol>\n<li>Employee类：</li>\n</ol>\n<p>String类型的变量name存放员工姓名，long类型的变量id存放员工编号，int类型的静态变量ID具有1000的初值，表示员工的编号基数。构造方法中将形参name放入域变量name，并让ID自增一次。</p>\n<ol start=\"2\">\n<li>Manager类：</li>\n</ol>\n<p>经理的工资因为是个常量，所以用double类型的变量salary来赋初值。构造方法调用父类的构造方法，并将自增后的ID放入id中。方法getPay()返回经理的工资数目，方法toString()返回其个人姓名、编号和工资。</p>\n<ol start=\"3\">\n<li>Saler类：</li>\n</ol>\n<p>销售人员类和经理类相似，只是重新定义一个double类型的salesNum变量，用来表示销售人员的销售额。在方法getPay()中，计算出工资并返回。</p>\n<ol start=\"4\">\n<li>Technician类：</li>\n</ol>\n<p>技术人员类和销售人员类相似，重新定义一个double类型的workHours变量，表示技术人员的工作小时数。在方法getPay()中，计算出工资并返回。</p>\n<ol start=\"5\">\n<li>CompanyList类：</li>\n</ol>\n<p>该类初始化一个ArrayList集合，用来存放公司所有人员信息。有以下几种方法：方法add()添加人员信息，方法remove()删除人员信息，方法modify()修改员工的姓名和编号，方法queryAll()用来查询所有人员的信息，方法query()查询单个员工的个人信息，方法save()可以将公司员工所有人员信息存放之外部EmployeeData.txt文件中。</p>\n<ol start=\"6\">\n<li>OperationPanel类：</li>\n</ol>\n<p>该类继承JFrame类，实现ActionListener接口。其中包含JLabel、JtextField、JButton、JeditorPane等Swing控件。在其构造方法中，使用采用了GridBagLayout布局的主面板，采用BoxLayout布局的子面板来放置各个功能模块的控件，并对每个按钮控件添加监听器。重写方法actionPerformed()，使其响应各个按钮对应的方法。在方法main()中初始化界面。</p>\n<p>布局原型图：</p>\n<p><img src=\"../images/%E5%B8%83%E5%B1%80%E5%8E%9F%E5%9E%8B%E5%9B%BE.png\" alt=\"布局原型图\"></p>\n<h2 id=\"四、主要源程序代码：\"><a href=\"#四、主要源程序代码：\" class=\"headerlink\" title=\"四、主要源程序代码：\"></a>四、主要源程序代码：</h2><ol>\n<li>Employee类：</li>\n</ol>\n<p><img src=\"../images/Employee%E7%B1%BB.png\" alt=\"Employee\"></p>\n<ol start=\"2\">\n<li>Manager类：</li>\n</ol>\n<p><img src=\"../images/Manager%E7%B1%BB.png\" alt=\"Manager\"></p>\n<ol start=\"3\">\n<li>Saler类：</li>\n</ol>\n<p><img src=\"../images/Saler%E7%B1%BB.png\" alt=\"Saler\"></p>\n<ol start=\"4\">\n<li>Technician类：</li>\n</ol>\n<p><img src=\"../images/Technician%E7%B1%BB.png\" alt=\"Technician\"></p>\n<ol start=\"5\">\n<li>CompanyList类：（部分程序）</li>\n</ol>\n<p><img src=\"../images/CompanyList%E7%B1%BB.png\" alt=\"CompanyLis\"></p>\n<ol start=\"6\">\n<li>OperationPanel类：（部分程序）</li>\n</ol>\n<p><img src=\"../images/OperationPanel%E7%B1%BB.png\" alt=\"OperationPanel\"></p>\n<h2 id=\"五、程序运行结果\"><a href=\"#五、程序运行结果\" class=\"headerlink\" title=\"五、程序运行结果\"></a>五、程序运行结果</h2><p><img src=\"../images/%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png\" alt=\"程序运行结果\"></p>\n<h2 id=\"六、源程序\"><a href=\"#六、源程序\" class=\"headerlink\" title=\"六、源程序\"></a>六、源程序</h2><p><a href=\"https://github.com/sakiila/CompanyManagement\">CompanyManagement 项目</a></p>\n<h2 id=\"七、运行\"><a href=\"#七、运行\" class=\"headerlink\" title=\"七、运行\"></a>七、运行</h2><p>方式一：在右侧 Releases 中下载最新的 CompanyManagement.jar 文件，在本地环境的控制台使用 <code>java -jar CompanyManagement.jar</code> 命令运行即可。</p>\n<p>方式二（推荐）：Fork 本项目代码，Clone 到本地环境，使用 Eclipse 或 IntelliJ 打开本项目工程，运行 OperationPanel 类的 main 方法即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"企业人员信息管理系统\"><a href=\"#企业人员信息管理系统\" class=\"headerlink\" title=\"企业人员信息管理系统\"></a>企业人员信息管理系统</h1><p>Swing-based visual interface enterprise personnel information management system.</p>\n<p>基于 Swing 的可视化界面企业人员信息管理系统。</p>\n<h2 id=\"一、需求分析：\"><a href=\"#一、需求分析：\" class=\"headerlink\" title=\"一、需求分析：\"></a>一、需求分析：</h2><p>某小型公司，主要有三类人员：经理、兼职技术人员和兼职推销员。这三类人员共同拥有的相关属性：姓名、编号；相关方法：获取当月薪水的getPay()方法、显示个人信息的toString()方法。</p>\n<p>人员编号基数为1000，每创建一个人员实例对象，其编号属性的值顺序加1。月薪计算方法：经理拿固定月薪8000元；兼职技术人员按每小时100元领取月薪；兼职推销人员的月薪按当月的销售额的4%提成。</p>\n<p>要求：采用面向对象的编程思想，结合题意自己确定需要定义的类及各类的属性、构造方法和其他方法，并编写程序实现功能：</p>\n<ol>\n<li>查询职工个人信息，可通过姓名、编号查询；</li>\n<li>查询部门所有职工的详细信息；</li>\n<li>修改职工信息；</li>\n<li>删除职工信息；</li>\n<li>添加职工信息；</li>\n<li>查询所有职工信息，并将其存储到外设职工信息文件EmployeeData.txt中或者SQLServer数据库中，数据库中的表根据系统需求自己定义。</li>\n</ol>\n<h2 id=\"二、概要设计：\"><a href=\"#二、概要设计：\" class=\"headerlink\" title=\"二、概要设计：\"></a>二、概要设计：</h2><p>实现整个系统需要五个类文件。Employee类是所有人员的父类，Manager类、Saler类和Technician类继承于这个父类，并有自己的构造方法和其他方法，如图1所示。CompanyList类实现一个ArrayList集合，用来存放公司人员信息。其有增删改查等相关的方法，如图2所示。OperationPanel类是继承于JFrame类、实现ActionListener类的界面类，包含actionPerformed方法和main方法。</p>\n<p>Employee类及其子类：</p>\n<p><img src=\"../images/Employee%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB.png\" alt=\"Employee类及其子类\"></p>\n<p>系统功能模块图：</p>\n<p><img src=\"../images/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97%E5%9B%BE.png\" alt=\"系统功能模块图\"></p>\n<h3 id=\"三、详细设计：\"><a href=\"#三、详细设计：\" class=\"headerlink\" title=\"三、详细设计：\"></a>三、详细设计：</h3><ol>\n<li>Employee类：</li>\n</ol>\n<p>String类型的变量name存放员工姓名，long类型的变量id存放员工编号，int类型的静态变量ID具有1000的初值，表示员工的编号基数。构造方法中将形参name放入域变量name，并让ID自增一次。</p>\n<ol start=\"2\">\n<li>Manager类：</li>\n</ol>\n<p>经理的工资因为是个常量，所以用double类型的变量salary来赋初值。构造方法调用父类的构造方法，并将自增后的ID放入id中。方法getPay()返回经理的工资数目，方法toString()返回其个人姓名、编号和工资。</p>\n<ol start=\"3\">\n<li>Saler类：</li>\n</ol>\n<p>销售人员类和经理类相似，只是重新定义一个double类型的salesNum变量，用来表示销售人员的销售额。在方法getPay()中，计算出工资并返回。</p>\n<ol start=\"4\">\n<li>Technician类：</li>\n</ol>\n<p>技术人员类和销售人员类相似，重新定义一个double类型的workHours变量，表示技术人员的工作小时数。在方法getPay()中，计算出工资并返回。</p>\n<ol start=\"5\">\n<li>CompanyList类：</li>\n</ol>\n<p>该类初始化一个ArrayList集合，用来存放公司所有人员信息。有以下几种方法：方法add()添加人员信息，方法remove()删除人员信息，方法modify()修改员工的姓名和编号，方法queryAll()用来查询所有人员的信息，方法query()查询单个员工的个人信息，方法save()可以将公司员工所有人员信息存放之外部EmployeeData.txt文件中。</p>\n<ol start=\"6\">\n<li>OperationPanel类：</li>\n</ol>\n<p>该类继承JFrame类，实现ActionListener接口。其中包含JLabel、JtextField、JButton、JeditorPane等Swing控件。在其构造方法中，使用采用了GridBagLayout布局的主面板，采用BoxLayout布局的子面板来放置各个功能模块的控件，并对每个按钮控件添加监听器。重写方法actionPerformed()，使其响应各个按钮对应的方法。在方法main()中初始化界面。</p>\n<p>布局原型图：</p>\n<p><img src=\"../images/%E5%B8%83%E5%B1%80%E5%8E%9F%E5%9E%8B%E5%9B%BE.png\" alt=\"布局原型图\"></p>\n<h2 id=\"四、主要源程序代码：\"><a href=\"#四、主要源程序代码：\" class=\"headerlink\" title=\"四、主要源程序代码：\"></a>四、主要源程序代码：</h2><ol>\n<li>Employee类：</li>\n</ol>\n<p><img src=\"../images/Employee%E7%B1%BB.png\" alt=\"Employee\"></p>\n<ol start=\"2\">\n<li>Manager类：</li>\n</ol>\n<p><img src=\"../images/Manager%E7%B1%BB.png\" alt=\"Manager\"></p>\n<ol start=\"3\">\n<li>Saler类：</li>\n</ol>\n<p><img src=\"../images/Saler%E7%B1%BB.png\" alt=\"Saler\"></p>\n<ol start=\"4\">\n<li>Technician类：</li>\n</ol>\n<p><img src=\"../images/Technician%E7%B1%BB.png\" alt=\"Technician\"></p>\n<ol start=\"5\">\n<li>CompanyList类：（部分程序）</li>\n</ol>\n<p><img src=\"../images/CompanyList%E7%B1%BB.png\" alt=\"CompanyLis\"></p>\n<ol start=\"6\">\n<li>OperationPanel类：（部分程序）</li>\n</ol>\n<p><img src=\"../images/OperationPanel%E7%B1%BB.png\" alt=\"OperationPanel\"></p>\n<h2 id=\"五、程序运行结果\"><a href=\"#五、程序运行结果\" class=\"headerlink\" title=\"五、程序运行结果\"></a>五、程序运行结果</h2><p><img src=\"../images/%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png\" alt=\"程序运行结果\"></p>\n<h2 id=\"六、源程序\"><a href=\"#六、源程序\" class=\"headerlink\" title=\"六、源程序\"></a>六、源程序</h2><p><a href=\"https://github.com/sakiila/CompanyManagement\">CompanyManagement 项目</a></p>\n<h2 id=\"七、运行\"><a href=\"#七、运行\" class=\"headerlink\" title=\"七、运行\"></a>七、运行</h2><p>方式一：在右侧 Releases 中下载最新的 CompanyManagement.jar 文件，在本地环境的控制台使用 <code>java -jar CompanyManagement.jar</code> 命令运行即可。</p>\n<p>方式二（推荐）：Fork 本项目代码，Clone 到本地环境，使用 Eclipse 或 IntelliJ 打开本项目工程，运行 OperationPanel 类的 main 方法即可。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"../images/Employee%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB.png","popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"企业人员信息管理系统开发","path":"4225233647/","eyeCatchImage":"../images/Employee%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB.png","excerpt":"<center>基于 Swing 的可视化界面企业人员信息管理系统。</center>","date":{"_isAMomentObject":true,"_i":"2017-02-12T10:49:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-02-12T10:49:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"博客脚印","description":"<center>搭建博客断断续续有六年时间了，收集了过往的网站截图，仅作留念。</center>","abbrlink":1487202510,"date":"2022-01-18T02:59:13.000Z","_content":"\n# boo516.com\n\n最初的域名是 boo516.com，搭建在 Godaddy 服务中。截图时间是 2016 年 11 月 5 日。\n\n![boo516_com](../images/boo516_com.jpg)\n\n\n# hibaobo.com\n\n后来换了纯英文域名，也将网站服务搭建在各种不同的服务器上。\n\n比如搬瓦工、腾讯云、知了云等等。也使用了 WordPress 这些博客系统。\n\n不过因为学业和工作，暂停了挺长时间，也没留下太多网站的记录。\n\n![hibaobo_com](../images/hibaobo_com.png)\n\n\n# baobo.me\n\n有一天觉得原来的域名太长了，在 NameCheap 上购买了 .me 的域名，非常喜欢。\n\n网站的服务也从知了云，到老薛主机，最后到 Github Pages。\n\n来来回回折腾着，决定了现在的最终形式。\n\n后续会多花些时间在博客上，写写教程，聊聊想法。\n\n2022年，也要加油呀。\n","source":"_posts/博客脚印.md","raw":"---\ntitle: 博客脚印\ntags:\n  - 记录\ncategories: 收集\ndescription: <center>搭建博客断断续续有六年时间了，收集了过往的网站截图，仅作留念。</center>\nabbrlink: 1487202510\ndate: 2022-01-18 10:59:13\n---\n\n# boo516.com\n\n最初的域名是 boo516.com，搭建在 Godaddy 服务中。截图时间是 2016 年 11 月 5 日。\n\n![boo516_com](../images/boo516_com.jpg)\n\n\n# hibaobo.com\n\n后来换了纯英文域名，也将网站服务搭建在各种不同的服务器上。\n\n比如搬瓦工、腾讯云、知了云等等。也使用了 WordPress 这些博客系统。\n\n不过因为学业和工作，暂停了挺长时间，也没留下太多网站的记录。\n\n![hibaobo_com](../images/hibaobo_com.png)\n\n\n# baobo.me\n\n有一天觉得原来的域名太长了，在 NameCheap 上购买了 .me 的域名，非常喜欢。\n\n网站的服务也从知了云，到老薛主机，最后到 Github Pages。\n\n来来回回折腾着，决定了现在的最终形式。\n\n后续会多花些时间在博客上，写写教程，聊聊想法。\n\n2022年，也要加油呀。\n","slug":"博客脚印","published":1,"updated":"2022-09-08T09:47:35.885Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooj001bnq54cqpn12o4","content":"<h1 id=\"boo516-com\"><a href=\"#boo516-com\" class=\"headerlink\" title=\"boo516.com\"></a>boo516.com</h1><p>最初的域名是 boo516.com，搭建在 Godaddy 服务中。截图时间是 2016 年 11 月 5 日。</p>\n<p><img src=\"../images/boo516_com.jpg\" alt=\"boo516_com\"></p>\n<h1 id=\"hibaobo-com\"><a href=\"#hibaobo-com\" class=\"headerlink\" title=\"hibaobo.com\"></a>hibaobo.com</h1><p>后来换了纯英文域名，也将网站服务搭建在各种不同的服务器上。</p>\n<p>比如搬瓦工、腾讯云、知了云等等。也使用了 WordPress 这些博客系统。</p>\n<p>不过因为学业和工作，暂停了挺长时间，也没留下太多网站的记录。</p>\n<p><img src=\"../images/hibaobo_com.png\" alt=\"hibaobo_com\"></p>\n<h1 id=\"baobo-me\"><a href=\"#baobo-me\" class=\"headerlink\" title=\"baobo.me\"></a>baobo.me</h1><p>有一天觉得原来的域名太长了，在 NameCheap 上购买了 .me 的域名，非常喜欢。</p>\n<p>网站的服务也从知了云，到老薛主机，最后到 Github Pages。</p>\n<p>来来回回折腾着，决定了现在的最终形式。</p>\n<p>后续会多花些时间在博客上，写写教程，聊聊想法。</p>\n<p>2022年，也要加油呀。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"boo516-com\"><a href=\"#boo516-com\" class=\"headerlink\" title=\"boo516.com\"></a>boo516.com</h1><p>最初的域名是 boo516.com，搭建在 Godaddy 服务中。截图时间是 2016 年 11 月 5 日。</p>\n<p><img src=\"../images/boo516_com.jpg\" alt=\"boo516_com\"></p>\n<h1 id=\"hibaobo-com\"><a href=\"#hibaobo-com\" class=\"headerlink\" title=\"hibaobo.com\"></a>hibaobo.com</h1><p>后来换了纯英文域名，也将网站服务搭建在各种不同的服务器上。</p>\n<p>比如搬瓦工、腾讯云、知了云等等。也使用了 WordPress 这些博客系统。</p>\n<p>不过因为学业和工作，暂停了挺长时间，也没留下太多网站的记录。</p>\n<p><img src=\"../images/hibaobo_com.png\" alt=\"hibaobo_com\"></p>\n<h1 id=\"baobo-me\"><a href=\"#baobo-me\" class=\"headerlink\" title=\"baobo.me\"></a>baobo.me</h1><p>有一天觉得原来的域名太长了，在 NameCheap 上购买了 .me 的域名，非常喜欢。</p>\n<p>网站的服务也从知了云，到老薛主机，最后到 Github Pages。</p>\n<p>来来回回折腾着，决定了现在的最终形式。</p>\n<p>后续会多花些时间在博客上，写写教程，聊聊想法。</p>\n<p>2022年，也要加油呀。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"../images/boo516_com.jpg","popularPost_tmp_gaData":{"updated":"Thu Sep 08 2022 17:47:35 GMT+0800 (China Standard Time)","title":"博客脚印","path":"1487202510/","eyeCatchImage":"../images/boo516_com.jpg","excerpt":"<center>搭建博客断断续续有六年时间了，收集了过往的网站截图，仅作留念。</center>","date":{"_isAMomentObject":true,"_i":"2022-01-18T02:59:13.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-01-18T02:59:13.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"收集","tags":["记录"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"初读《皮囊》","description":"<center>很喜欢这个名字。皮囊。每个人都是披着皮囊的。</center>","abbrlink":2023509924,"date":"2017-05-21T13:49:00.000Z","_content":"最初知道这本书的时候，是某个app上推荐的。\n\n很喜欢这个名字。皮囊。每个人都是披着皮囊的。\n\n都说一壶酒，愈酿愈香。可能《皮囊》也是，越读越能悟出大道理。\n\n就像这本书开头韩寒写的一句话，“我会将这本书带上旅途，在每个静谧陌生的夜晚拿出来慢慢看”。\n\n文字很干净，读起来很舒服。\n\n以上。","source":"_posts/初读《皮囊》.md","raw":"---\ntitle: 初读《皮囊》\ntags:\n  - 皮囊\ncategories: 阅读\ndescription: <center>很喜欢这个名字。皮囊。每个人都是披着皮囊的。</center>\nabbrlink: 2023509924\ndate: 2017-05-21 21:49:00\n---\n最初知道这本书的时候，是某个app上推荐的。\n\n很喜欢这个名字。皮囊。每个人都是披着皮囊的。\n\n都说一壶酒，愈酿愈香。可能《皮囊》也是，越读越能悟出大道理。\n\n就像这本书开头韩寒写的一句话，“我会将这本书带上旅途，在每个静谧陌生的夜晚拿出来慢慢看”。\n\n文字很干净，读起来很舒服。\n\n以上。","slug":"初读《皮囊》","published":1,"updated":"2022-09-13T14:24:02.940Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooj001fnq549jua1ixy","content":"<p>最初知道这本书的时候，是某个app上推荐的。</p>\n<p>很喜欢这个名字。皮囊。每个人都是披着皮囊的。</p>\n<p>都说一壶酒，愈酿愈香。可能《皮囊》也是，越读越能悟出大道理。</p>\n<p>就像这本书开头韩寒写的一句话，“我会将这本书带上旅途，在每个静谧陌生的夜晚拿出来慢慢看”。</p>\n<p>文字很干净，读起来很舒服。</p>\n<p>以上。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最初知道这本书的时候，是某个app上推荐的。</p>\n<p>很喜欢这个名字。皮囊。每个人都是披着皮囊的。</p>\n<p>都说一壶酒，愈酿愈香。可能《皮囊》也是，越读越能悟出大道理。</p>\n<p>就像这本书开头韩寒写的一句话，“我会将这本书带上旅途，在每个静谧陌生的夜晚拿出来慢慢看”。</p>\n<p>文字很干净，读起来很舒服。</p>\n<p>以上。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"初读《皮囊》","path":"2023509924/","eyeCatchImage":null,"excerpt":"<center>很喜欢这个名字。皮囊。每个人都是披着皮囊的。</center>","date":{"_isAMomentObject":true,"_i":"2017-05-21T13:49:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-05-21T13:49:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"阅读","tags":["皮囊"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"外包","date":"2019-03-19T02:08:10.000Z","description":"<center>给出外包定义及列举常见外包公司。</center>","abbrlink":1326063135,"_content":"\n# 外包定义\n\n1. 外包定义：主要看人选所做项目/产品性质，若项目/产品为外包性质，则定义为外包人员。\n2. 外包性质：\n   人力外包：人力资源外包/劳务派遣，一般为驻场形式。\n   项目外包：阶段性项目开发，驻场/非驻场形式。\n   业务外包：业务流程外包。\n3. 特别说明：\n   外包公司简介一般带有的关键词：IT服务、技术开发服务、信息技术解决方案、软件服务等。\n   如在外包公司内负责内部系统开发，不算为外包。\n\n# 外包公司列表\n\n| 编号 | 外包类型          | 企业名称                     | 主要服务公司/具体部门做外包项目                              |\n| ---- | ----------------- | ---------------------------- | ------------------------------------------------------------ |\n| 1    | 人力外包          | 中软国际                     | 华为、中国移动、中国联通、阿里云、百度等                     |\n| 2    | 人力外包          | 软通动力                     | 华为、微软、IBM、联想、中国银行、中国人寿、中石化、中石油、国家电网等 |\n| 3    | 人力外包          | 文思海辉                     | 微软、IBM、因特尔、花旗银行、索尼以及国内阿里巴巴、腾讯、百度、中移动、联通等 |\n| 4    | 项目外包          | 大展科技                     | 从欧美及日本客户承接软件项目                                 |\n| 5    | 人力外包          | 亿达信息                     | 富士施乐、SOFTBANK、UNISYS、日本乐天、SONY、阪急阪神、腾讯、阿里巴巴、华为、阿斯利康、先正达、赛诺菲、武田制药、美的、顺丰、唯品会、华夏人寿、天安人寿等 |\n| 6    | 人力外包          | 法本信息                     | 平安、顺丰、腾讯、中国联通、OPPO、苏宁、万科等               |\n| 7    | 人力外包          | 武汉佰钧成                   | IBM、华为、Google、HP、Alcatel-Lucent、NTT Data等            |\n| 8    | 人力外包&项目外包 | 紫川软件                     | 平安、中国移动、中国建设银行、华为、中兴等                   |\n| 9    | 人力外包          | 拓保软件                     | 平安、顺丰、宝能等                                           |\n| 10   | 人力外包          | Infosys(印孚瑟斯)            | 微软、英特尔、SAP、3M、Arrow、Cisco等                        |\n| 11   | 人力外包          | 上海易立德                   | 华为、美的、Vivo、长安汽车等                                 |\n| 12   | 人力外包          | 博彦科技                     | 字节跳动、顺丰等                                             |\n| 13   | 项目外包          | 易思博软件                   | IBM、HP、NEC、Fujitsu、卓望等                                |\n| 14   | 人力外包          | 网新科技（网新新思）         |                                                              |\n| 15   | 人力外包          | 雁联计算系统有限公司         | 银行、各类交易所、第三方支付公司、互联网金融公司等金融及泛金融机构等 |\n| 16   | 人力外包          | 上海启明软件                 |                                                              |\n| 17   | 人力外包          | 上海华腾软件                 |                                                              |\n| 18   | 项目外包          | 神州数码                     |                                                              |\n| 19   | 项目外包          | IBM                          | 大连IBM专门做外包                                            |\n| 20   | 项目外包          | 东软集团                     |                                                              |\n| 21   | 项目外包          | 浪潮软件                     |                                                              |\n| 22   | 项目外包          | 群硕软件                     | 微软、摩托罗拉、Omnitracs、英特尔、SAP、沃尔玛、联合利华、银联、万科、万达、Vivo、康师傅等 |\n| 23   | 项目外包          | 金证科技                     | 银行外包开发                                                 |\n| 24   | 项目外包          | 信雅达                       | 华为等                                                       |\n| 25   | 项目外包          | 大连华信                     | Pivotal等                                                    |\n| 26   | 人力外包&项目外包 | 信必优                       | 花旗银行等                                                   |\n| 27   | 人力外包&业务外包 | 易宝软件                     | 阿里、华为等                                                 |\n| 28   | 项目外包          | 慧讯软件                     | 国知名跨平台安全解决方案供应商Centrify、知名欧美玩具供应商Mattel（美泰）、Hasbro（孩之宝）、移动电话供应商Philip、Nokia等 |\n| 29   | 项目外包          | 恒拓开源                     | 航空公司、机场及民航保障企业                                 |\n| 30   | 人力外包          | 广州赛意信息                 | 华为                                                         |\n| 31   | 人力外包          | 中兴软件技术（南昌）有限公司 | 中兴                                                         |\n| 32   | 项目外包          | 华通科技                     | 对外合作部是做中兴的外包工作                                 |\n| 33   | 人力外包          | 中软海纳                     | 中兴                                                         |\n| 34   | 人力外包          | 微创科技                     | 腾讯                                                         |","source":"_posts/外包.md","raw":"---\ntitle: 外包\ndate: 2019-03-19 10:08:10\ncategories: 收集\ntags:\n  - 外包\ndescription: <center>给出外包定义及列举常见外包公司。</center>\nabbrlink: 1326063135\n---\n\n# 外包定义\n\n1. 外包定义：主要看人选所做项目/产品性质，若项目/产品为外包性质，则定义为外包人员。\n2. 外包性质：\n   人力外包：人力资源外包/劳务派遣，一般为驻场形式。\n   项目外包：阶段性项目开发，驻场/非驻场形式。\n   业务外包：业务流程外包。\n3. 特别说明：\n   外包公司简介一般带有的关键词：IT服务、技术开发服务、信息技术解决方案、软件服务等。\n   如在外包公司内负责内部系统开发，不算为外包。\n\n# 外包公司列表\n\n| 编号 | 外包类型          | 企业名称                     | 主要服务公司/具体部门做外包项目                              |\n| ---- | ----------------- | ---------------------------- | ------------------------------------------------------------ |\n| 1    | 人力外包          | 中软国际                     | 华为、中国移动、中国联通、阿里云、百度等                     |\n| 2    | 人力外包          | 软通动力                     | 华为、微软、IBM、联想、中国银行、中国人寿、中石化、中石油、国家电网等 |\n| 3    | 人力外包          | 文思海辉                     | 微软、IBM、因特尔、花旗银行、索尼以及国内阿里巴巴、腾讯、百度、中移动、联通等 |\n| 4    | 项目外包          | 大展科技                     | 从欧美及日本客户承接软件项目                                 |\n| 5    | 人力外包          | 亿达信息                     | 富士施乐、SOFTBANK、UNISYS、日本乐天、SONY、阪急阪神、腾讯、阿里巴巴、华为、阿斯利康、先正达、赛诺菲、武田制药、美的、顺丰、唯品会、华夏人寿、天安人寿等 |\n| 6    | 人力外包          | 法本信息                     | 平安、顺丰、腾讯、中国联通、OPPO、苏宁、万科等               |\n| 7    | 人力外包          | 武汉佰钧成                   | IBM、华为、Google、HP、Alcatel-Lucent、NTT Data等            |\n| 8    | 人力外包&项目外包 | 紫川软件                     | 平安、中国移动、中国建设银行、华为、中兴等                   |\n| 9    | 人力外包          | 拓保软件                     | 平安、顺丰、宝能等                                           |\n| 10   | 人力外包          | Infosys(印孚瑟斯)            | 微软、英特尔、SAP、3M、Arrow、Cisco等                        |\n| 11   | 人力外包          | 上海易立德                   | 华为、美的、Vivo、长安汽车等                                 |\n| 12   | 人力外包          | 博彦科技                     | 字节跳动、顺丰等                                             |\n| 13   | 项目外包          | 易思博软件                   | IBM、HP、NEC、Fujitsu、卓望等                                |\n| 14   | 人力外包          | 网新科技（网新新思）         |                                                              |\n| 15   | 人力外包          | 雁联计算系统有限公司         | 银行、各类交易所、第三方支付公司、互联网金融公司等金融及泛金融机构等 |\n| 16   | 人力外包          | 上海启明软件                 |                                                              |\n| 17   | 人力外包          | 上海华腾软件                 |                                                              |\n| 18   | 项目外包          | 神州数码                     |                                                              |\n| 19   | 项目外包          | IBM                          | 大连IBM专门做外包                                            |\n| 20   | 项目外包          | 东软集团                     |                                                              |\n| 21   | 项目外包          | 浪潮软件                     |                                                              |\n| 22   | 项目外包          | 群硕软件                     | 微软、摩托罗拉、Omnitracs、英特尔、SAP、沃尔玛、联合利华、银联、万科、万达、Vivo、康师傅等 |\n| 23   | 项目外包          | 金证科技                     | 银行外包开发                                                 |\n| 24   | 项目外包          | 信雅达                       | 华为等                                                       |\n| 25   | 项目外包          | 大连华信                     | Pivotal等                                                    |\n| 26   | 人力外包&项目外包 | 信必优                       | 花旗银行等                                                   |\n| 27   | 人力外包&业务外包 | 易宝软件                     | 阿里、华为等                                                 |\n| 28   | 项目外包          | 慧讯软件                     | 国知名跨平台安全解决方案供应商Centrify、知名欧美玩具供应商Mattel（美泰）、Hasbro（孩之宝）、移动电话供应商Philip、Nokia等 |\n| 29   | 项目外包          | 恒拓开源                     | 航空公司、机场及民航保障企业                                 |\n| 30   | 人力外包          | 广州赛意信息                 | 华为                                                         |\n| 31   | 人力外包          | 中兴软件技术（南昌）有限公司 | 中兴                                                         |\n| 32   | 项目外包          | 华通科技                     | 对外合作部是做中兴的外包工作                                 |\n| 33   | 人力外包          | 中软海纳                     | 中兴                                                         |\n| 34   | 人力外包          | 微创科技                     | 腾讯                                                         |","slug":"外包","published":1,"updated":"2022-09-13T14:22:00.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooj001inq548ziz695y","content":"<h1 id=\"外包定义\"><a href=\"#外包定义\" class=\"headerlink\" title=\"外包定义\"></a>外包定义</h1><ol>\n<li>外包定义：主要看人选所做项目/产品性质，若项目/产品为外包性质，则定义为外包人员。</li>\n<li>外包性质：<br>人力外包：人力资源外包/劳务派遣，一般为驻场形式。<br>项目外包：阶段性项目开发，驻场/非驻场形式。<br>业务外包：业务流程外包。</li>\n<li>特别说明：<br>外包公司简介一般带有的关键词：IT服务、技术开发服务、信息技术解决方案、软件服务等。<br>如在外包公司内负责内部系统开发，不算为外包。</li>\n</ol>\n<h1 id=\"外包公司列表\"><a href=\"#外包公司列表\" class=\"headerlink\" title=\"外包公司列表\"></a>外包公司列表</h1><table>\n<thead>\n<tr>\n<th>编号</th>\n<th>外包类型</th>\n<th>企业名称</th>\n<th>主要服务公司/具体部门做外包项目</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>人力外包</td>\n<td>中软国际</td>\n<td>华为、中国移动、中国联通、阿里云、百度等</td>\n</tr>\n<tr>\n<td>2</td>\n<td>人力外包</td>\n<td>软通动力</td>\n<td>华为、微软、IBM、联想、中国银行、中国人寿、中石化、中石油、国家电网等</td>\n</tr>\n<tr>\n<td>3</td>\n<td>人力外包</td>\n<td>文思海辉</td>\n<td>微软、IBM、因特尔、花旗银行、索尼以及国内阿里巴巴、腾讯、百度、中移动、联通等</td>\n</tr>\n<tr>\n<td>4</td>\n<td>项目外包</td>\n<td>大展科技</td>\n<td>从欧美及日本客户承接软件项目</td>\n</tr>\n<tr>\n<td>5</td>\n<td>人力外包</td>\n<td>亿达信息</td>\n<td>富士施乐、SOFTBANK、UNISYS、日本乐天、SONY、阪急阪神、腾讯、阿里巴巴、华为、阿斯利康、先正达、赛诺菲、武田制药、美的、顺丰、唯品会、华夏人寿、天安人寿等</td>\n</tr>\n<tr>\n<td>6</td>\n<td>人力外包</td>\n<td>法本信息</td>\n<td>平安、顺丰、腾讯、中国联通、OPPO、苏宁、万科等</td>\n</tr>\n<tr>\n<td>7</td>\n<td>人力外包</td>\n<td>武汉佰钧成</td>\n<td>IBM、华为、Google、HP、Alcatel-Lucent、NTT Data等</td>\n</tr>\n<tr>\n<td>8</td>\n<td>人力外包&amp;项目外包</td>\n<td>紫川软件</td>\n<td>平安、中国移动、中国建设银行、华为、中兴等</td>\n</tr>\n<tr>\n<td>9</td>\n<td>人力外包</td>\n<td>拓保软件</td>\n<td>平安、顺丰、宝能等</td>\n</tr>\n<tr>\n<td>10</td>\n<td>人力外包</td>\n<td>Infosys(印孚瑟斯)</td>\n<td>微软、英特尔、SAP、3M、Arrow、Cisco等</td>\n</tr>\n<tr>\n<td>11</td>\n<td>人力外包</td>\n<td>上海易立德</td>\n<td>华为、美的、Vivo、长安汽车等</td>\n</tr>\n<tr>\n<td>12</td>\n<td>人力外包</td>\n<td>博彦科技</td>\n<td>字节跳动、顺丰等</td>\n</tr>\n<tr>\n<td>13</td>\n<td>项目外包</td>\n<td>易思博软件</td>\n<td>IBM、HP、NEC、Fujitsu、卓望等</td>\n</tr>\n<tr>\n<td>14</td>\n<td>人力外包</td>\n<td>网新科技（网新新思）</td>\n<td></td>\n</tr>\n<tr>\n<td>15</td>\n<td>人力外包</td>\n<td>雁联计算系统有限公司</td>\n<td>银行、各类交易所、第三方支付公司、互联网金融公司等金融及泛金融机构等</td>\n</tr>\n<tr>\n<td>16</td>\n<td>人力外包</td>\n<td>上海启明软件</td>\n<td></td>\n</tr>\n<tr>\n<td>17</td>\n<td>人力外包</td>\n<td>上海华腾软件</td>\n<td></td>\n</tr>\n<tr>\n<td>18</td>\n<td>项目外包</td>\n<td>神州数码</td>\n<td></td>\n</tr>\n<tr>\n<td>19</td>\n<td>项目外包</td>\n<td>IBM</td>\n<td>大连IBM专门做外包</td>\n</tr>\n<tr>\n<td>20</td>\n<td>项目外包</td>\n<td>东软集团</td>\n<td></td>\n</tr>\n<tr>\n<td>21</td>\n<td>项目外包</td>\n<td>浪潮软件</td>\n<td></td>\n</tr>\n<tr>\n<td>22</td>\n<td>项目外包</td>\n<td>群硕软件</td>\n<td>微软、摩托罗拉、Omnitracs、英特尔、SAP、沃尔玛、联合利华、银联、万科、万达、Vivo、康师傅等</td>\n</tr>\n<tr>\n<td>23</td>\n<td>项目外包</td>\n<td>金证科技</td>\n<td>银行外包开发</td>\n</tr>\n<tr>\n<td>24</td>\n<td>项目外包</td>\n<td>信雅达</td>\n<td>华为等</td>\n</tr>\n<tr>\n<td>25</td>\n<td>项目外包</td>\n<td>大连华信</td>\n<td>Pivotal等</td>\n</tr>\n<tr>\n<td>26</td>\n<td>人力外包&amp;项目外包</td>\n<td>信必优</td>\n<td>花旗银行等</td>\n</tr>\n<tr>\n<td>27</td>\n<td>人力外包&amp;业务外包</td>\n<td>易宝软件</td>\n<td>阿里、华为等</td>\n</tr>\n<tr>\n<td>28</td>\n<td>项目外包</td>\n<td>慧讯软件</td>\n<td>国知名跨平台安全解决方案供应商Centrify、知名欧美玩具供应商Mattel（美泰）、Hasbro（孩之宝）、移动电话供应商Philip、Nokia等</td>\n</tr>\n<tr>\n<td>29</td>\n<td>项目外包</td>\n<td>恒拓开源</td>\n<td>航空公司、机场及民航保障企业</td>\n</tr>\n<tr>\n<td>30</td>\n<td>人力外包</td>\n<td>广州赛意信息</td>\n<td>华为</td>\n</tr>\n<tr>\n<td>31</td>\n<td>人力外包</td>\n<td>中兴软件技术（南昌）有限公司</td>\n<td>中兴</td>\n</tr>\n<tr>\n<td>32</td>\n<td>项目外包</td>\n<td>华通科技</td>\n<td>对外合作部是做中兴的外包工作</td>\n</tr>\n<tr>\n<td>33</td>\n<td>人力外包</td>\n<td>中软海纳</td>\n<td>中兴</td>\n</tr>\n<tr>\n<td>34</td>\n<td>人力外包</td>\n<td>微创科技</td>\n<td>腾讯</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"外包定义\"><a href=\"#外包定义\" class=\"headerlink\" title=\"外包定义\"></a>外包定义</h1><ol>\n<li>外包定义：主要看人选所做项目/产品性质，若项目/产品为外包性质，则定义为外包人员。</li>\n<li>外包性质：<br>人力外包：人力资源外包/劳务派遣，一般为驻场形式。<br>项目外包：阶段性项目开发，驻场/非驻场形式。<br>业务外包：业务流程外包。</li>\n<li>特别说明：<br>外包公司简介一般带有的关键词：IT服务、技术开发服务、信息技术解决方案、软件服务等。<br>如在外包公司内负责内部系统开发，不算为外包。</li>\n</ol>\n<h1 id=\"外包公司列表\"><a href=\"#外包公司列表\" class=\"headerlink\" title=\"外包公司列表\"></a>外包公司列表</h1><table>\n<thead>\n<tr>\n<th>编号</th>\n<th>外包类型</th>\n<th>企业名称</th>\n<th>主要服务公司/具体部门做外包项目</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>人力外包</td>\n<td>中软国际</td>\n<td>华为、中国移动、中国联通、阿里云、百度等</td>\n</tr>\n<tr>\n<td>2</td>\n<td>人力外包</td>\n<td>软通动力</td>\n<td>华为、微软、IBM、联想、中国银行、中国人寿、中石化、中石油、国家电网等</td>\n</tr>\n<tr>\n<td>3</td>\n<td>人力外包</td>\n<td>文思海辉</td>\n<td>微软、IBM、因特尔、花旗银行、索尼以及国内阿里巴巴、腾讯、百度、中移动、联通等</td>\n</tr>\n<tr>\n<td>4</td>\n<td>项目外包</td>\n<td>大展科技</td>\n<td>从欧美及日本客户承接软件项目</td>\n</tr>\n<tr>\n<td>5</td>\n<td>人力外包</td>\n<td>亿达信息</td>\n<td>富士施乐、SOFTBANK、UNISYS、日本乐天、SONY、阪急阪神、腾讯、阿里巴巴、华为、阿斯利康、先正达、赛诺菲、武田制药、美的、顺丰、唯品会、华夏人寿、天安人寿等</td>\n</tr>\n<tr>\n<td>6</td>\n<td>人力外包</td>\n<td>法本信息</td>\n<td>平安、顺丰、腾讯、中国联通、OPPO、苏宁、万科等</td>\n</tr>\n<tr>\n<td>7</td>\n<td>人力外包</td>\n<td>武汉佰钧成</td>\n<td>IBM、华为、Google、HP、Alcatel-Lucent、NTT Data等</td>\n</tr>\n<tr>\n<td>8</td>\n<td>人力外包&amp;项目外包</td>\n<td>紫川软件</td>\n<td>平安、中国移动、中国建设银行、华为、中兴等</td>\n</tr>\n<tr>\n<td>9</td>\n<td>人力外包</td>\n<td>拓保软件</td>\n<td>平安、顺丰、宝能等</td>\n</tr>\n<tr>\n<td>10</td>\n<td>人力外包</td>\n<td>Infosys(印孚瑟斯)</td>\n<td>微软、英特尔、SAP、3M、Arrow、Cisco等</td>\n</tr>\n<tr>\n<td>11</td>\n<td>人力外包</td>\n<td>上海易立德</td>\n<td>华为、美的、Vivo、长安汽车等</td>\n</tr>\n<tr>\n<td>12</td>\n<td>人力外包</td>\n<td>博彦科技</td>\n<td>字节跳动、顺丰等</td>\n</tr>\n<tr>\n<td>13</td>\n<td>项目外包</td>\n<td>易思博软件</td>\n<td>IBM、HP、NEC、Fujitsu、卓望等</td>\n</tr>\n<tr>\n<td>14</td>\n<td>人力外包</td>\n<td>网新科技（网新新思）</td>\n<td></td>\n</tr>\n<tr>\n<td>15</td>\n<td>人力外包</td>\n<td>雁联计算系统有限公司</td>\n<td>银行、各类交易所、第三方支付公司、互联网金融公司等金融及泛金融机构等</td>\n</tr>\n<tr>\n<td>16</td>\n<td>人力外包</td>\n<td>上海启明软件</td>\n<td></td>\n</tr>\n<tr>\n<td>17</td>\n<td>人力外包</td>\n<td>上海华腾软件</td>\n<td></td>\n</tr>\n<tr>\n<td>18</td>\n<td>项目外包</td>\n<td>神州数码</td>\n<td></td>\n</tr>\n<tr>\n<td>19</td>\n<td>项目外包</td>\n<td>IBM</td>\n<td>大连IBM专门做外包</td>\n</tr>\n<tr>\n<td>20</td>\n<td>项目外包</td>\n<td>东软集团</td>\n<td></td>\n</tr>\n<tr>\n<td>21</td>\n<td>项目外包</td>\n<td>浪潮软件</td>\n<td></td>\n</tr>\n<tr>\n<td>22</td>\n<td>项目外包</td>\n<td>群硕软件</td>\n<td>微软、摩托罗拉、Omnitracs、英特尔、SAP、沃尔玛、联合利华、银联、万科、万达、Vivo、康师傅等</td>\n</tr>\n<tr>\n<td>23</td>\n<td>项目外包</td>\n<td>金证科技</td>\n<td>银行外包开发</td>\n</tr>\n<tr>\n<td>24</td>\n<td>项目外包</td>\n<td>信雅达</td>\n<td>华为等</td>\n</tr>\n<tr>\n<td>25</td>\n<td>项目外包</td>\n<td>大连华信</td>\n<td>Pivotal等</td>\n</tr>\n<tr>\n<td>26</td>\n<td>人力外包&amp;项目外包</td>\n<td>信必优</td>\n<td>花旗银行等</td>\n</tr>\n<tr>\n<td>27</td>\n<td>人力外包&amp;业务外包</td>\n<td>易宝软件</td>\n<td>阿里、华为等</td>\n</tr>\n<tr>\n<td>28</td>\n<td>项目外包</td>\n<td>慧讯软件</td>\n<td>国知名跨平台安全解决方案供应商Centrify、知名欧美玩具供应商Mattel（美泰）、Hasbro（孩之宝）、移动电话供应商Philip、Nokia等</td>\n</tr>\n<tr>\n<td>29</td>\n<td>项目外包</td>\n<td>恒拓开源</td>\n<td>航空公司、机场及民航保障企业</td>\n</tr>\n<tr>\n<td>30</td>\n<td>人力外包</td>\n<td>广州赛意信息</td>\n<td>华为</td>\n</tr>\n<tr>\n<td>31</td>\n<td>人力外包</td>\n<td>中兴软件技术（南昌）有限公司</td>\n<td>中兴</td>\n</tr>\n<tr>\n<td>32</td>\n<td>项目外包</td>\n<td>华通科技</td>\n<td>对外合作部是做中兴的外包工作</td>\n</tr>\n<tr>\n<td>33</td>\n<td>人力外包</td>\n<td>中软海纳</td>\n<td>中兴</td>\n</tr>\n<tr>\n<td>34</td>\n<td>人力外包</td>\n<td>微创科技</td>\n<td>腾讯</td>\n</tr>\n</tbody></table>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:22:00 GMT+0800 (China Standard Time)","title":"外包","path":"1326063135/","eyeCatchImage":null,"excerpt":"<center>给出外包定义及列举常见外包公司。</center>","date":{"_isAMomentObject":true,"_i":"2019-03-19T02:08:10.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-03-19T02:08:10.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"收集","tags":["外包"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"使用 WMITools 解除浏览器被 hao123 劫持","description":"<center>最近使用 Chrome 浏览器时，主页会自动变 成hao123.com。改 hosts，清理注册表都无法彻底解决该问题。</center>","abbrlink":2135150665,"date":"2016-03-04T10:49:00.000Z","_content":"最近使用 Chrome 浏览器时，主页会自动变成 hao123.com。改 hosts，清理注册表都无法彻底解决该问题。\n\n经过搜索后，发现可以使用 WMITools 工具进行清理 VBScript 调用系统服务项。\n\n[原网址](http://www.iefans.net/ie-zhuye-jiechi-www-2345-com-kunown/)\n\n# 下载安装\n链接：http://pan.baidu.com/s/1nuTC9Kl 密码：1qdv\n\n安装最好使用默认地址，一路确定即可。\n# 工具使用\n打开安装文件夹，右键 wbemeventviewer.exe 程序，使用管理员身份打开。\n\n点击左上角钢笔形状按钮\n![](http://hibaobo.com/wp-content/uploads/2016/12/QQ截图20161206223953.jpg)\n 点击OK\n ![](http://hibaobo.com/wp-content/uploads/2016/12/QQ截图20161206224008.jpg)\n 再次点击OK\n ![](http://hibaobo.com/wp-content/uploads/2016/12/QQ截图20161206224031.jpg)\n 将此文件夹下的文件右键删除\n![](https://hibaobo.com/wp-content/uploads/2016/12/QQ截图20161206224059.jpg)\n# 最后\n右键桌面上的浏览器，属性中目标一栏，将 hao123 等网址删除。","source":"_posts/使用 WMITools 解除浏览器被 hao123 劫持.md","raw":"---\ntitle: 使用 WMITools 解除浏览器被 hao123 劫持\ntags:\n  - hao123\ncategories: 开发\ndescription: <center>最近使用 Chrome 浏览器时，主页会自动变 成hao123.com。改 hosts，清理注册表都无法彻底解决该问题。</center>\nabbrlink: 2135150665\ndate: 2016-03-04 18:49:00\n---\n最近使用 Chrome 浏览器时，主页会自动变成 hao123.com。改 hosts，清理注册表都无法彻底解决该问题。\n\n经过搜索后，发现可以使用 WMITools 工具进行清理 VBScript 调用系统服务项。\n\n[原网址](http://www.iefans.net/ie-zhuye-jiechi-www-2345-com-kunown/)\n\n# 下载安装\n链接：http://pan.baidu.com/s/1nuTC9Kl 密码：1qdv\n\n安装最好使用默认地址，一路确定即可。\n# 工具使用\n打开安装文件夹，右键 wbemeventviewer.exe 程序，使用管理员身份打开。\n\n点击左上角钢笔形状按钮\n![](http://hibaobo.com/wp-content/uploads/2016/12/QQ截图20161206223953.jpg)\n 点击OK\n ![](http://hibaobo.com/wp-content/uploads/2016/12/QQ截图20161206224008.jpg)\n 再次点击OK\n ![](http://hibaobo.com/wp-content/uploads/2016/12/QQ截图20161206224031.jpg)\n 将此文件夹下的文件右键删除\n![](https://hibaobo.com/wp-content/uploads/2016/12/QQ截图20161206224059.jpg)\n# 最后\n右键桌面上的浏览器，属性中目标一栏，将 hao123 等网址删除。","slug":"使用 WMITools 解除浏览器被 hao123 劫持","published":1,"updated":"2022-09-13T14:24:02.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooj001mnq544edqggll","content":"<p>最近使用 Chrome 浏览器时，主页会自动变成 hao123.com。改 hosts，清理注册表都无法彻底解决该问题。</p>\n<p>经过搜索后，发现可以使用 WMITools 工具进行清理 VBScript 调用系统服务项。</p>\n<p><a href=\"http://www.iefans.net/ie-zhuye-jiechi-www-2345-com-kunown/\">原网址</a></p>\n<h1 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h1><p>链接：<a href=\"http://pan.baidu.com/s/1nuTC9Kl\">http://pan.baidu.com/s/1nuTC9Kl</a> 密码：1qdv</p>\n<p>安装最好使用默认地址，一路确定即可。</p>\n<h1 id=\"工具使用\"><a href=\"#工具使用\" class=\"headerlink\" title=\"工具使用\"></a>工具使用</h1><p>打开安装文件夹，右键 wbemeventviewer.exe 程序，使用管理员身份打开。</p>\n<p>点击左上角钢笔形状按钮<br><img src=\"http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206223953.jpg\"><br> 点击OK<br> <img src=\"http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206224008.jpg\"><br> 再次点击OK<br> <img src=\"http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206224031.jpg\"><br> 将此文件夹下的文件右键删除<br><img src=\"https://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206224059.jpg\"></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>右键桌面上的浏览器，属性中目标一栏，将 hao123 等网址删除。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近使用 Chrome 浏览器时，主页会自动变成 hao123.com。改 hosts，清理注册表都无法彻底解决该问题。</p>\n<p>经过搜索后，发现可以使用 WMITools 工具进行清理 VBScript 调用系统服务项。</p>\n<p><a href=\"http://www.iefans.net/ie-zhuye-jiechi-www-2345-com-kunown/\">原网址</a></p>\n<h1 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h1><p>链接：<a href=\"http://pan.baidu.com/s/1nuTC9Kl\">http://pan.baidu.com/s/1nuTC9Kl</a> 密码：1qdv</p>\n<p>安装最好使用默认地址，一路确定即可。</p>\n<h1 id=\"工具使用\"><a href=\"#工具使用\" class=\"headerlink\" title=\"工具使用\"></a>工具使用</h1><p>打开安装文件夹，右键 wbemeventviewer.exe 程序，使用管理员身份打开。</p>\n<p>点击左上角钢笔形状按钮<br><img src=\"http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206223953.jpg\"><br> 点击OK<br> <img src=\"http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206224008.jpg\"><br> 再次点击OK<br> <img src=\"http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206224031.jpg\"><br> 将此文件夹下的文件右键删除<br><img src=\"https://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206224059.jpg\"></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>右键桌面上的浏览器，属性中目标一栏，将 hao123 等网址删除。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206223953.jpg","popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"使用 WMITools 解除浏览器被 hao123 劫持","path":"2135150665/","eyeCatchImage":"http://hibaobo.com/wp-content/uploads/2016/12/QQ%E6%88%AA%E5%9B%BE20161206223953.jpg","excerpt":"<center>最近使用 Chrome 浏览器时，主页会自动变 成hao123.com。改 hosts，清理注册表都无法彻底解决该问题。</center>","date":{"_isAMomentObject":true,"_i":"2016-03-04T10:49:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2016-03-04T10:49:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["hao123"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"后端工程师学习路径","description":"<center>整理了一份后端工程师的学习方向，和相关的优质资料。</center>","abbrlink":3201199714,"date":"2022-01-21T07:33:14.000Z","_content":"\n# 整体脉络\n\n 操作系统 → 计算机网络 → 数据结构与算法 → 编程语言 → 数据库 → 框架 → 中间件 → 架构思维\n\n# 资料路径\n\n| 技能            | 相关资料                                                     |\n| --------------- | ------------------------------------------------------------ |\n| 计算机组成原理  | 计算机科学速成课、《计算机是怎样跑起来的》、《程序是怎样跑起来的》、《编码》、掘金《计算机是怎样运行的》 |\n| 操作系统        | 《操作系统导论》、《现代操作系统》、《深入理解计算机系统》、MIT 608、极客时间《操作系统45讲》 |\n| 计算机网络      | 《计算机网络自顶向下》                                       |\n| 数据结构与算法  | 极客时间《数据结构与算法之美》                               |\n| Linux           | 《Linux高性能服务器编程》                                    |\n| Java 基础与集合 | 《Java 实战》、《Effective Java》                            |\n| JVM             | 《深入理解 Java 虚拟机》、极客时间《深入拆解 Java 虚拟机》   |\n| Netty           | 极客时间《Netty 源码剖析与实战》                             |\n| Java 并发编程   | 《Java 并发编程的艺术》、极客时间《Java 并发编程实战》       |\n| Spring          | [JavaDoop](https://javadoop.com/)、《Spring 源码深度解析》、《极客 Spring 编程常见错误 50 例》 |\n| Spring Boot     | 慕课网《小马哥 Spring Boot 2.0 深度实践》                    |\n| 设计模式        | 极客时间《设计模式之美》                                     |\n| 单元测试        | Spock                                                        |\n| MySQL           | 《高性能 MySQL》、《MySQL 技术内幕》、极客时间《MySQL 45讲》、掘金《MySQL 是怎样运行的》 |\n| 分布式事务      | 极客时间《分布式协议与算法》                                 |\n| RPC             | 极客时间《网络编程实战》、极客时间《RPC 实战与核心原理》     |\n| Dubbo           | 拉勾教育《Dubbo 源码解读》                                   |\n| ZooKeeper       | 《从Paxos 到 Zookeeper》                                     |\n| Spring Cloud    | 慕课网《Spring Cloud 微服务开发实践》                        |\n| Redis           | 《Redis 设计与实现》，《Redis 开发与运维》、极客时间《Redis 核心技术与实战》 |\n| Kafka           | 《深入理解 Kafka》、极客时间《Kafka 核心技术与实战》         |\n| Docker          | 慕课网《跟 BAT 技术专家学 Docker + K8s》                     |\n| 大数据          | 极客时间《从 0 开始学大数据》                                |\n| 代码整洁        | 《代码整洁之道》、《重构》、《修改代码的艺术》               |\n| 工作方法        | 极客时间《大厂晋升指南》、极客时间《左耳听风》               |\n| 架构方法论      | 《数据密集型应用系统设计》、极客时间《从 0 开始学架构》、极客时间《后端技术面试》 |\n| 外语            | 极客时间《互联网人的英语私教课》                             |\n\n\n\n\n\n持续更新中。\n","source":"_posts/后端工程师学习路径.md","raw":"---\ntitle: 后端工程师学习路径\ntags:\n  - 后端\n  - 学习\n  - 路径\ndescription: <center>整理了一份后端工程师的学习方向，和相关的优质资料。</center>\ncategories: 收集\nabbrlink: 3201199714\ndate: 2022-01-21 15:33:14\n---\n\n# 整体脉络\n\n 操作系统 → 计算机网络 → 数据结构与算法 → 编程语言 → 数据库 → 框架 → 中间件 → 架构思维\n\n# 资料路径\n\n| 技能            | 相关资料                                                     |\n| --------------- | ------------------------------------------------------------ |\n| 计算机组成原理  | 计算机科学速成课、《计算机是怎样跑起来的》、《程序是怎样跑起来的》、《编码》、掘金《计算机是怎样运行的》 |\n| 操作系统        | 《操作系统导论》、《现代操作系统》、《深入理解计算机系统》、MIT 608、极客时间《操作系统45讲》 |\n| 计算机网络      | 《计算机网络自顶向下》                                       |\n| 数据结构与算法  | 极客时间《数据结构与算法之美》                               |\n| Linux           | 《Linux高性能服务器编程》                                    |\n| Java 基础与集合 | 《Java 实战》、《Effective Java》                            |\n| JVM             | 《深入理解 Java 虚拟机》、极客时间《深入拆解 Java 虚拟机》   |\n| Netty           | 极客时间《Netty 源码剖析与实战》                             |\n| Java 并发编程   | 《Java 并发编程的艺术》、极客时间《Java 并发编程实战》       |\n| Spring          | [JavaDoop](https://javadoop.com/)、《Spring 源码深度解析》、《极客 Spring 编程常见错误 50 例》 |\n| Spring Boot     | 慕课网《小马哥 Spring Boot 2.0 深度实践》                    |\n| 设计模式        | 极客时间《设计模式之美》                                     |\n| 单元测试        | Spock                                                        |\n| MySQL           | 《高性能 MySQL》、《MySQL 技术内幕》、极客时间《MySQL 45讲》、掘金《MySQL 是怎样运行的》 |\n| 分布式事务      | 极客时间《分布式协议与算法》                                 |\n| RPC             | 极客时间《网络编程实战》、极客时间《RPC 实战与核心原理》     |\n| Dubbo           | 拉勾教育《Dubbo 源码解读》                                   |\n| ZooKeeper       | 《从Paxos 到 Zookeeper》                                     |\n| Spring Cloud    | 慕课网《Spring Cloud 微服务开发实践》                        |\n| Redis           | 《Redis 设计与实现》，《Redis 开发与运维》、极客时间《Redis 核心技术与实战》 |\n| Kafka           | 《深入理解 Kafka》、极客时间《Kafka 核心技术与实战》         |\n| Docker          | 慕课网《跟 BAT 技术专家学 Docker + K8s》                     |\n| 大数据          | 极客时间《从 0 开始学大数据》                                |\n| 代码整洁        | 《代码整洁之道》、《重构》、《修改代码的艺术》               |\n| 工作方法        | 极客时间《大厂晋升指南》、极客时间《左耳听风》               |\n| 架构方法论      | 《数据密集型应用系统设计》、极客时间《从 0 开始学架构》、极客时间《后端技术面试》 |\n| 外语            | 极客时间《互联网人的英语私教课》                             |\n\n\n\n\n\n持续更新中。\n","slug":"后端工程师学习路径","published":1,"updated":"2022-09-13T14:19:54.530Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eook001pnq548qv2dbz6","content":"<h1 id=\"整体脉络\"><a href=\"#整体脉络\" class=\"headerlink\" title=\"整体脉络\"></a>整体脉络</h1><p> 操作系统 → 计算机网络 → 数据结构与算法 → 编程语言 → 数据库 → 框架 → 中间件 → 架构思维</p>\n<h1 id=\"资料路径\"><a href=\"#资料路径\" class=\"headerlink\" title=\"资料路径\"></a>资料路径</h1><table>\n<thead>\n<tr>\n<th>技能</th>\n<th>相关资料</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>计算机组成原理</td>\n<td>计算机科学速成课、《计算机是怎样跑起来的》、《程序是怎样跑起来的》、《编码》、掘金《计算机是怎样运行的》</td>\n</tr>\n<tr>\n<td>操作系统</td>\n<td>《操作系统导论》、《现代操作系统》、《深入理解计算机系统》、MIT 608、极客时间《操作系统45讲》</td>\n</tr>\n<tr>\n<td>计算机网络</td>\n<td>《计算机网络自顶向下》</td>\n</tr>\n<tr>\n<td>数据结构与算法</td>\n<td>极客时间《数据结构与算法之美》</td>\n</tr>\n<tr>\n<td>Linux</td>\n<td>《Linux高性能服务器编程》</td>\n</tr>\n<tr>\n<td>Java 基础与集合</td>\n<td>《Java 实战》、《Effective Java》</td>\n</tr>\n<tr>\n<td>JVM</td>\n<td>《深入理解 Java 虚拟机》、极客时间《深入拆解 Java 虚拟机》</td>\n</tr>\n<tr>\n<td>Netty</td>\n<td>极客时间《Netty 源码剖析与实战》</td>\n</tr>\n<tr>\n<td>Java 并发编程</td>\n<td>《Java 并发编程的艺术》、极客时间《Java 并发编程实战》</td>\n</tr>\n<tr>\n<td>Spring</td>\n<td><a href=\"https://javadoop.com/\">JavaDoop</a>、《Spring 源码深度解析》、《极客 Spring 编程常见错误 50 例》</td>\n</tr>\n<tr>\n<td>Spring Boot</td>\n<td>慕课网《小马哥 Spring Boot 2.0 深度实践》</td>\n</tr>\n<tr>\n<td>设计模式</td>\n<td>极客时间《设计模式之美》</td>\n</tr>\n<tr>\n<td>单元测试</td>\n<td>Spock</td>\n</tr>\n<tr>\n<td>MySQL</td>\n<td>《高性能 MySQL》、《MySQL 技术内幕》、极客时间《MySQL 45讲》、掘金《MySQL 是怎样运行的》</td>\n</tr>\n<tr>\n<td>分布式事务</td>\n<td>极客时间《分布式协议与算法》</td>\n</tr>\n<tr>\n<td>RPC</td>\n<td>极客时间《网络编程实战》、极客时间《RPC 实战与核心原理》</td>\n</tr>\n<tr>\n<td>Dubbo</td>\n<td>拉勾教育《Dubbo 源码解读》</td>\n</tr>\n<tr>\n<td>ZooKeeper</td>\n<td>《从Paxos 到 Zookeeper》</td>\n</tr>\n<tr>\n<td>Spring Cloud</td>\n<td>慕课网《Spring Cloud 微服务开发实践》</td>\n</tr>\n<tr>\n<td>Redis</td>\n<td>《Redis 设计与实现》，《Redis 开发与运维》、极客时间《Redis 核心技术与实战》</td>\n</tr>\n<tr>\n<td>Kafka</td>\n<td>《深入理解 Kafka》、极客时间《Kafka 核心技术与实战》</td>\n</tr>\n<tr>\n<td>Docker</td>\n<td>慕课网《跟 BAT 技术专家学 Docker + K8s》</td>\n</tr>\n<tr>\n<td>大数据</td>\n<td>极客时间《从 0 开始学大数据》</td>\n</tr>\n<tr>\n<td>代码整洁</td>\n<td>《代码整洁之道》、《重构》、《修改代码的艺术》</td>\n</tr>\n<tr>\n<td>工作方法</td>\n<td>极客时间《大厂晋升指南》、极客时间《左耳听风》</td>\n</tr>\n<tr>\n<td>架构方法论</td>\n<td>《数据密集型应用系统设计》、极客时间《从 0 开始学架构》、极客时间《后端技术面试》</td>\n</tr>\n<tr>\n<td>外语</td>\n<td>极客时间《互联网人的英语私教课》</td>\n</tr>\n</tbody></table>\n<p>持续更新中。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"整体脉络\"><a href=\"#整体脉络\" class=\"headerlink\" title=\"整体脉络\"></a>整体脉络</h1><p> 操作系统 → 计算机网络 → 数据结构与算法 → 编程语言 → 数据库 → 框架 → 中间件 → 架构思维</p>\n<h1 id=\"资料路径\"><a href=\"#资料路径\" class=\"headerlink\" title=\"资料路径\"></a>资料路径</h1><table>\n<thead>\n<tr>\n<th>技能</th>\n<th>相关资料</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>计算机组成原理</td>\n<td>计算机科学速成课、《计算机是怎样跑起来的》、《程序是怎样跑起来的》、《编码》、掘金《计算机是怎样运行的》</td>\n</tr>\n<tr>\n<td>操作系统</td>\n<td>《操作系统导论》、《现代操作系统》、《深入理解计算机系统》、MIT 608、极客时间《操作系统45讲》</td>\n</tr>\n<tr>\n<td>计算机网络</td>\n<td>《计算机网络自顶向下》</td>\n</tr>\n<tr>\n<td>数据结构与算法</td>\n<td>极客时间《数据结构与算法之美》</td>\n</tr>\n<tr>\n<td>Linux</td>\n<td>《Linux高性能服务器编程》</td>\n</tr>\n<tr>\n<td>Java 基础与集合</td>\n<td>《Java 实战》、《Effective Java》</td>\n</tr>\n<tr>\n<td>JVM</td>\n<td>《深入理解 Java 虚拟机》、极客时间《深入拆解 Java 虚拟机》</td>\n</tr>\n<tr>\n<td>Netty</td>\n<td>极客时间《Netty 源码剖析与实战》</td>\n</tr>\n<tr>\n<td>Java 并发编程</td>\n<td>《Java 并发编程的艺术》、极客时间《Java 并发编程实战》</td>\n</tr>\n<tr>\n<td>Spring</td>\n<td><a href=\"https://javadoop.com/\">JavaDoop</a>、《Spring 源码深度解析》、《极客 Spring 编程常见错误 50 例》</td>\n</tr>\n<tr>\n<td>Spring Boot</td>\n<td>慕课网《小马哥 Spring Boot 2.0 深度实践》</td>\n</tr>\n<tr>\n<td>设计模式</td>\n<td>极客时间《设计模式之美》</td>\n</tr>\n<tr>\n<td>单元测试</td>\n<td>Spock</td>\n</tr>\n<tr>\n<td>MySQL</td>\n<td>《高性能 MySQL》、《MySQL 技术内幕》、极客时间《MySQL 45讲》、掘金《MySQL 是怎样运行的》</td>\n</tr>\n<tr>\n<td>分布式事务</td>\n<td>极客时间《分布式协议与算法》</td>\n</tr>\n<tr>\n<td>RPC</td>\n<td>极客时间《网络编程实战》、极客时间《RPC 实战与核心原理》</td>\n</tr>\n<tr>\n<td>Dubbo</td>\n<td>拉勾教育《Dubbo 源码解读》</td>\n</tr>\n<tr>\n<td>ZooKeeper</td>\n<td>《从Paxos 到 Zookeeper》</td>\n</tr>\n<tr>\n<td>Spring Cloud</td>\n<td>慕课网《Spring Cloud 微服务开发实践》</td>\n</tr>\n<tr>\n<td>Redis</td>\n<td>《Redis 设计与实现》，《Redis 开发与运维》、极客时间《Redis 核心技术与实战》</td>\n</tr>\n<tr>\n<td>Kafka</td>\n<td>《深入理解 Kafka》、极客时间《Kafka 核心技术与实战》</td>\n</tr>\n<tr>\n<td>Docker</td>\n<td>慕课网《跟 BAT 技术专家学 Docker + K8s》</td>\n</tr>\n<tr>\n<td>大数据</td>\n<td>极客时间《从 0 开始学大数据》</td>\n</tr>\n<tr>\n<td>代码整洁</td>\n<td>《代码整洁之道》、《重构》、《修改代码的艺术》</td>\n</tr>\n<tr>\n<td>工作方法</td>\n<td>极客时间《大厂晋升指南》、极客时间《左耳听风》</td>\n</tr>\n<tr>\n<td>架构方法论</td>\n<td>《数据密集型应用系统设计》、极客时间《从 0 开始学架构》、极客时间《后端技术面试》</td>\n</tr>\n<tr>\n<td>外语</td>\n<td>极客时间《互联网人的英语私教课》</td>\n</tr>\n</tbody></table>\n<p>持续更新中。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:19:54 GMT+0800 (China Standard Time)","title":"后端工程师学习路径","path":"3201199714/","eyeCatchImage":null,"excerpt":"<center>整理了一份后端工程师的学习方向，和相关的优质资料。</center>","date":{"_isAMomentObject":true,"_i":"2022-01-21T07:33:14.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-01-21T07:33:14.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"收集","tags":["后端","学习","路径"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"我们终此一生","description":"<center>我多么多么希望， 一曼没有死去。</center>","abbrlink":3890282637,"date":"2016-11-29T12:30:00.000Z","_content":"> 我们终此一生，就是要摆脱他人的期待，找到真正的自己。\n\n《无声告白》讲述了莉迪亚自杀前后，她的一家人的生活发生的一系列变化。故事细水长流，生动的人物动作，丰富的心理活动，仿佛我们在这些角色的脑海里可以随意走动，随意聆听。十二章，每一章似乎都在刻画一个或者一次人物，幼时被视为“Ching Chong”的中国父亲詹姆斯，想成为医生却被家庭琐事耽误的母亲玛丽琳，疼爱妹妹的哥哥内斯，被寄予太多期望的莉迪亚以及常常被忽视的妹妹汉娜。\n\n故事开头第一句话便是：莉迪亚死了。莉迪亚死了，她试图从湖中心游到岸边，以此来证实自己不被压力妥协不被自己许下的承诺兑现，可是，莉迪亚不会游泳。\n\n莉迪亚的死那么真实，真实到她似乎从来不存在一样。她更像是集成了书中其他人物身上的一部分，妈妈对医学的渴望，爸爸的中国血统，哥哥考入哈佛的成绩单。玛丽琳从小就立志成为一名优秀的医生，成年后的婚姻犹如一座大山压在身上，然后在某一天，突然离家出走去外地学习考取医生资格。虽然因为有孕在身，玛丽琳放弃了，但她把这些希望寄托给女儿莉迪亚。每一年女儿生日，玛丽莲都送给她一本本医学相关的书籍，《人体解剖学彩图》、《医学的故事》等等。而詹姆斯，偷渡到美国的中国人生下来的孩子，从小便和那些棕色头发，蓝色眼睛的孩子不同，被嘲笑被挖苦被捉弄，没有什么朋友。而仅仅是外貌上的不同，詹姆斯也害怕自己的女儿受到这样的对待，因为女儿继承了他的褐色眼睛。和女儿的谈话话题永远都是多交好友，“多交一些朋友总不是什么坏事”。而内斯，一直想成为父母眼中的乖孩子，希望得到表扬与赞赏。可以这样说，是他们害死了莉迪亚，是他们将莉迪亚逼上绝路。\n\n只是，莉迪亚真的存在吗，还是，莉迪亚是他们臆想出来的人物，承载了他们的愿望。回头看看书封面的那句话“我们终此一生，就是要摆脱他人的期待，找到真正的自己”，詹姆斯，玛丽琳他们最后真的找到真正的自己了吗？\n\n愿世上的人，不被压力摧毁不被感情绊倒，“找到真正的自己”。\n","source":"_posts/我们终此一生.md","raw":"---\ntitle: 我们终此一生\ntags:\n  - 无声告白\ncategories: 阅读\ndescription: <center>我多么多么希望， 一曼没有死去。</center>\nabbrlink: 3890282637\ndate: 2016-11-29 20:30:00\n---\n> 我们终此一生，就是要摆脱他人的期待，找到真正的自己。\n\n《无声告白》讲述了莉迪亚自杀前后，她的一家人的生活发生的一系列变化。故事细水长流，生动的人物动作，丰富的心理活动，仿佛我们在这些角色的脑海里可以随意走动，随意聆听。十二章，每一章似乎都在刻画一个或者一次人物，幼时被视为“Ching Chong”的中国父亲詹姆斯，想成为医生却被家庭琐事耽误的母亲玛丽琳，疼爱妹妹的哥哥内斯，被寄予太多期望的莉迪亚以及常常被忽视的妹妹汉娜。\n\n故事开头第一句话便是：莉迪亚死了。莉迪亚死了，她试图从湖中心游到岸边，以此来证实自己不被压力妥协不被自己许下的承诺兑现，可是，莉迪亚不会游泳。\n\n莉迪亚的死那么真实，真实到她似乎从来不存在一样。她更像是集成了书中其他人物身上的一部分，妈妈对医学的渴望，爸爸的中国血统，哥哥考入哈佛的成绩单。玛丽琳从小就立志成为一名优秀的医生，成年后的婚姻犹如一座大山压在身上，然后在某一天，突然离家出走去外地学习考取医生资格。虽然因为有孕在身，玛丽琳放弃了，但她把这些希望寄托给女儿莉迪亚。每一年女儿生日，玛丽莲都送给她一本本医学相关的书籍，《人体解剖学彩图》、《医学的故事》等等。而詹姆斯，偷渡到美国的中国人生下来的孩子，从小便和那些棕色头发，蓝色眼睛的孩子不同，被嘲笑被挖苦被捉弄，没有什么朋友。而仅仅是外貌上的不同，詹姆斯也害怕自己的女儿受到这样的对待，因为女儿继承了他的褐色眼睛。和女儿的谈话话题永远都是多交好友，“多交一些朋友总不是什么坏事”。而内斯，一直想成为父母眼中的乖孩子，希望得到表扬与赞赏。可以这样说，是他们害死了莉迪亚，是他们将莉迪亚逼上绝路。\n\n只是，莉迪亚真的存在吗，还是，莉迪亚是他们臆想出来的人物，承载了他们的愿望。回头看看书封面的那句话“我们终此一生，就是要摆脱他人的期待，找到真正的自己”，詹姆斯，玛丽琳他们最后真的找到真正的自己了吗？\n\n愿世上的人，不被压力摧毁不被感情绊倒，“找到真正的自己”。\n","slug":"我们终此一生","published":1,"updated":"2022-09-13T14:24:02.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eook001snq54g6l2e5sh","content":"<blockquote>\n<p>我们终此一生，就是要摆脱他人的期待，找到真正的自己。</p>\n</blockquote>\n<p>《无声告白》讲述了莉迪亚自杀前后，她的一家人的生活发生的一系列变化。故事细水长流，生动的人物动作，丰富的心理活动，仿佛我们在这些角色的脑海里可以随意走动，随意聆听。十二章，每一章似乎都在刻画一个或者一次人物，幼时被视为“Ching Chong”的中国父亲詹姆斯，想成为医生却被家庭琐事耽误的母亲玛丽琳，疼爱妹妹的哥哥内斯，被寄予太多期望的莉迪亚以及常常被忽视的妹妹汉娜。</p>\n<p>故事开头第一句话便是：莉迪亚死了。莉迪亚死了，她试图从湖中心游到岸边，以此来证实自己不被压力妥协不被自己许下的承诺兑现，可是，莉迪亚不会游泳。</p>\n<p>莉迪亚的死那么真实，真实到她似乎从来不存在一样。她更像是集成了书中其他人物身上的一部分，妈妈对医学的渴望，爸爸的中国血统，哥哥考入哈佛的成绩单。玛丽琳从小就立志成为一名优秀的医生，成年后的婚姻犹如一座大山压在身上，然后在某一天，突然离家出走去外地学习考取医生资格。虽然因为有孕在身，玛丽琳放弃了，但她把这些希望寄托给女儿莉迪亚。每一年女儿生日，玛丽莲都送给她一本本医学相关的书籍，《人体解剖学彩图》、《医学的故事》等等。而詹姆斯，偷渡到美国的中国人生下来的孩子，从小便和那些棕色头发，蓝色眼睛的孩子不同，被嘲笑被挖苦被捉弄，没有什么朋友。而仅仅是外貌上的不同，詹姆斯也害怕自己的女儿受到这样的对待，因为女儿继承了他的褐色眼睛。和女儿的谈话话题永远都是多交好友，“多交一些朋友总不是什么坏事”。而内斯，一直想成为父母眼中的乖孩子，希望得到表扬与赞赏。可以这样说，是他们害死了莉迪亚，是他们将莉迪亚逼上绝路。</p>\n<p>只是，莉迪亚真的存在吗，还是，莉迪亚是他们臆想出来的人物，承载了他们的愿望。回头看看书封面的那句话“我们终此一生，就是要摆脱他人的期待，找到真正的自己”，詹姆斯，玛丽琳他们最后真的找到真正的自己了吗？</p>\n<p>愿世上的人，不被压力摧毁不被感情绊倒，“找到真正的自己”。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>我们终此一生，就是要摆脱他人的期待，找到真正的自己。</p>\n</blockquote>\n<p>《无声告白》讲述了莉迪亚自杀前后，她的一家人的生活发生的一系列变化。故事细水长流，生动的人物动作，丰富的心理活动，仿佛我们在这些角色的脑海里可以随意走动，随意聆听。十二章，每一章似乎都在刻画一个或者一次人物，幼时被视为“Ching Chong”的中国父亲詹姆斯，想成为医生却被家庭琐事耽误的母亲玛丽琳，疼爱妹妹的哥哥内斯，被寄予太多期望的莉迪亚以及常常被忽视的妹妹汉娜。</p>\n<p>故事开头第一句话便是：莉迪亚死了。莉迪亚死了，她试图从湖中心游到岸边，以此来证实自己不被压力妥协不被自己许下的承诺兑现，可是，莉迪亚不会游泳。</p>\n<p>莉迪亚的死那么真实，真实到她似乎从来不存在一样。她更像是集成了书中其他人物身上的一部分，妈妈对医学的渴望，爸爸的中国血统，哥哥考入哈佛的成绩单。玛丽琳从小就立志成为一名优秀的医生，成年后的婚姻犹如一座大山压在身上，然后在某一天，突然离家出走去外地学习考取医生资格。虽然因为有孕在身，玛丽琳放弃了，但她把这些希望寄托给女儿莉迪亚。每一年女儿生日，玛丽莲都送给她一本本医学相关的书籍，《人体解剖学彩图》、《医学的故事》等等。而詹姆斯，偷渡到美国的中国人生下来的孩子，从小便和那些棕色头发，蓝色眼睛的孩子不同，被嘲笑被挖苦被捉弄，没有什么朋友。而仅仅是外貌上的不同，詹姆斯也害怕自己的女儿受到这样的对待，因为女儿继承了他的褐色眼睛。和女儿的谈话话题永远都是多交好友，“多交一些朋友总不是什么坏事”。而内斯，一直想成为父母眼中的乖孩子，希望得到表扬与赞赏。可以这样说，是他们害死了莉迪亚，是他们将莉迪亚逼上绝路。</p>\n<p>只是，莉迪亚真的存在吗，还是，莉迪亚是他们臆想出来的人物，承载了他们的愿望。回头看看书封面的那句话“我们终此一生，就是要摆脱他人的期待，找到真正的自己”，詹姆斯，玛丽琳他们最后真的找到真正的自己了吗？</p>\n<p>愿世上的人，不被压力摧毁不被感情绊倒，“找到真正的自己”。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"我们终此一生","path":"3890282637/","eyeCatchImage":null,"excerpt":"<center>我多么多么希望， 一曼没有死去。</center>","date":{"_isAMomentObject":true,"_i":"2016-11-29T12:30:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2016-11-29T12:30:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"阅读","tags":["无声告白"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"如何获取 Apple Music 学生会员资格","description":"<center>既然Apple给了这个优惠政策，作为新时代大学生的我们为什么不薅这块羊毛呢？</center>","abbrlink":4038172740,"date":"2017-05-21T13:58:47.000Z","_content":"\n> [Apple官方说明](https://support.apple.com/zh-cn/HT205928)\n \n既然 Apple 给了这个优惠政策，作为新时代大学生的我们为什么不薅这块羊毛呢？\n \n中国大学生要以学生会员资格加入 Apple Music 时，需要通过UNiDAYS（一项学生验证服务）的确认。然而通过UNiDAYS的验证又需要提供个人学校电子邮件地址，即以.edu为结尾的邮箱。但是在中国地区（除了台湾）各大高校几乎不提供这种邮箱。如下图所示，我所在的学校的学校邮箱仅对教职工开放申请。\n![](../images/studen_email_apply.jpg)\n\n那么对于没有教育邮箱的大学生来说，这个Apple Music优惠政策似乎就是鸡肋。\n\n别慌，要永远相信客服。\n\n## 我是如何通过UNiDAYS的验证\n最开始，我是申请到了@tp.edu.tw的台湾邮箱，然后用此邮箱申请学生会员资格。当天晚上就收到回信说这个邮箱不能验证我的学生身份，并说“If you do not have a personal institution email address please reply to this email sending us a scan or good quality photograph of your current student ID card”。很明显，Apple了解了中国大学生少有人拥有教育邮箱，于是只用提供给他们个人学生证的扫描图即可。\n\n![student_unidays](media/student_unidays.jpg)\n\n\n然后我传了两张照片过去。UNiDAYS的客服挺热情的，回信中让我提供学校网站以确认系统验证。\n\n![studen_thanks_contact](media/studen_thanks_contact.jpg)\n\n\n于是我附上了学校官方网站（注意是为.edu.cn为结尾的网址），并且贴上了学信网的学籍信息图片（以防万一）。\n\n![studen_email](media/studen_email.jpg)\n\n\n20分钟后就收到回信，确认了我的学生信息。登录[UNiDAYS](https://www.myunidays.com/CN/zh-CN)  \n\n![student_status](media/student_status.jpg)\n\n\n那么，学生优惠走起~\n![student_premium](media/student_premium.jpg)\n\n\n## 写在最后\n不要怕麻烦，多和客服沟通，很多事情都可以想方法解决。\n祝好运。\n","source":"_posts/如何获取 Apple Music 学生会员资格.md","raw":"---\ntitle: 如何获取 Apple Music 学生会员资格\ntags:\n  - Music\ncategories: 收集\ndescription: <center>既然Apple给了这个优惠政策，作为新时代大学生的我们为什么不薅这块羊毛呢？</center>\nabbrlink: 4038172740\ndate: 2017-05-21 21:58:47\n---\n\n> [Apple官方说明](https://support.apple.com/zh-cn/HT205928)\n \n既然 Apple 给了这个优惠政策，作为新时代大学生的我们为什么不薅这块羊毛呢？\n \n中国大学生要以学生会员资格加入 Apple Music 时，需要通过UNiDAYS（一项学生验证服务）的确认。然而通过UNiDAYS的验证又需要提供个人学校电子邮件地址，即以.edu为结尾的邮箱。但是在中国地区（除了台湾）各大高校几乎不提供这种邮箱。如下图所示，我所在的学校的学校邮箱仅对教职工开放申请。\n![](../images/studen_email_apply.jpg)\n\n那么对于没有教育邮箱的大学生来说，这个Apple Music优惠政策似乎就是鸡肋。\n\n别慌，要永远相信客服。\n\n## 我是如何通过UNiDAYS的验证\n最开始，我是申请到了@tp.edu.tw的台湾邮箱，然后用此邮箱申请学生会员资格。当天晚上就收到回信说这个邮箱不能验证我的学生身份，并说“If you do not have a personal institution email address please reply to this email sending us a scan or good quality photograph of your current student ID card”。很明显，Apple了解了中国大学生少有人拥有教育邮箱，于是只用提供给他们个人学生证的扫描图即可。\n\n![student_unidays](media/student_unidays.jpg)\n\n\n然后我传了两张照片过去。UNiDAYS的客服挺热情的，回信中让我提供学校网站以确认系统验证。\n\n![studen_thanks_contact](media/studen_thanks_contact.jpg)\n\n\n于是我附上了学校官方网站（注意是为.edu.cn为结尾的网址），并且贴上了学信网的学籍信息图片（以防万一）。\n\n![studen_email](media/studen_email.jpg)\n\n\n20分钟后就收到回信，确认了我的学生信息。登录[UNiDAYS](https://www.myunidays.com/CN/zh-CN)  \n\n![student_status](media/student_status.jpg)\n\n\n那么，学生优惠走起~\n![student_premium](media/student_premium.jpg)\n\n\n## 写在最后\n不要怕麻烦，多和客服沟通，很多事情都可以想方法解决。\n祝好运。\n","slug":"如何获取 Apple Music 学生会员资格","published":1,"updated":"2022-09-13T14:24:02.941Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eool001wnq54e7u6gisa","content":"<blockquote>\n<p><a href=\"https://support.apple.com/zh-cn/HT205928\">Apple官方说明</a></p>\n</blockquote>\n<p>既然 Apple 给了这个优惠政策，作为新时代大学生的我们为什么不薅这块羊毛呢？</p>\n<p>中国大学生要以学生会员资格加入 Apple Music 时，需要通过UNiDAYS（一项学生验证服务）的确认。然而通过UNiDAYS的验证又需要提供个人学校电子邮件地址，即以.edu为结尾的邮箱。但是在中国地区（除了台湾）各大高校几乎不提供这种邮箱。如下图所示，我所在的学校的学校邮箱仅对教职工开放申请。<br><img src=\"../images/studen_email_apply.jpg\"></p>\n<p>那么对于没有教育邮箱的大学生来说，这个Apple Music优惠政策似乎就是鸡肋。</p>\n<p>别慌，要永远相信客服。</p>\n<h2 id=\"我是如何通过UNiDAYS的验证\"><a href=\"#我是如何通过UNiDAYS的验证\" class=\"headerlink\" title=\"我是如何通过UNiDAYS的验证\"></a>我是如何通过UNiDAYS的验证</h2><p>最开始，我是申请到了@tp.edu.tw的台湾邮箱，然后用此邮箱申请学生会员资格。当天晚上就收到回信说这个邮箱不能验证我的学生身份，并说“If you do not have a personal institution email address please reply to this email sending us a scan or good quality photograph of your current student ID card”。很明显，Apple了解了中国大学生少有人拥有教育邮箱，于是只用提供给他们个人学生证的扫描图即可。</p>\n<p><img src=\"media/student_unidays.jpg\" alt=\"student_unidays\"></p>\n<p>然后我传了两张照片过去。UNiDAYS的客服挺热情的，回信中让我提供学校网站以确认系统验证。</p>\n<p><img src=\"media/studen_thanks_contact.jpg\" alt=\"studen_thanks_contact\"></p>\n<p>于是我附上了学校官方网站（注意是为.edu.cn为结尾的网址），并且贴上了学信网的学籍信息图片（以防万一）。</p>\n<p><img src=\"media/studen_email.jpg\" alt=\"studen_email\"></p>\n<p>20分钟后就收到回信，确认了我的学生信息。登录<a href=\"https://www.myunidays.com/CN/zh-CN\">UNiDAYS</a>  </p>\n<p><img src=\"media/student_status.jpg\" alt=\"student_status\"></p>\n<p>那么，学生优惠走起~<br><img src=\"media/student_premium.jpg\" alt=\"student_premium\"></p>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>不要怕麻烦，多和客服沟通，很多事情都可以想方法解决。<br>祝好运。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><a href=\"https://support.apple.com/zh-cn/HT205928\">Apple官方说明</a></p>\n</blockquote>\n<p>既然 Apple 给了这个优惠政策，作为新时代大学生的我们为什么不薅这块羊毛呢？</p>\n<p>中国大学生要以学生会员资格加入 Apple Music 时，需要通过UNiDAYS（一项学生验证服务）的确认。然而通过UNiDAYS的验证又需要提供个人学校电子邮件地址，即以.edu为结尾的邮箱。但是在中国地区（除了台湾）各大高校几乎不提供这种邮箱。如下图所示，我所在的学校的学校邮箱仅对教职工开放申请。<br><img src=\"../images/studen_email_apply.jpg\"></p>\n<p>那么对于没有教育邮箱的大学生来说，这个Apple Music优惠政策似乎就是鸡肋。</p>\n<p>别慌，要永远相信客服。</p>\n<h2 id=\"我是如何通过UNiDAYS的验证\"><a href=\"#我是如何通过UNiDAYS的验证\" class=\"headerlink\" title=\"我是如何通过UNiDAYS的验证\"></a>我是如何通过UNiDAYS的验证</h2><p>最开始，我是申请到了@tp.edu.tw的台湾邮箱，然后用此邮箱申请学生会员资格。当天晚上就收到回信说这个邮箱不能验证我的学生身份，并说“If you do not have a personal institution email address please reply to this email sending us a scan or good quality photograph of your current student ID card”。很明显，Apple了解了中国大学生少有人拥有教育邮箱，于是只用提供给他们个人学生证的扫描图即可。</p>\n<p><img src=\"media/student_unidays.jpg\" alt=\"student_unidays\"></p>\n<p>然后我传了两张照片过去。UNiDAYS的客服挺热情的，回信中让我提供学校网站以确认系统验证。</p>\n<p><img src=\"media/studen_thanks_contact.jpg\" alt=\"studen_thanks_contact\"></p>\n<p>于是我附上了学校官方网站（注意是为.edu.cn为结尾的网址），并且贴上了学信网的学籍信息图片（以防万一）。</p>\n<p><img src=\"media/studen_email.jpg\" alt=\"studen_email\"></p>\n<p>20分钟后就收到回信，确认了我的学生信息。登录<a href=\"https://www.myunidays.com/CN/zh-CN\">UNiDAYS</a>  </p>\n<p><img src=\"media/student_status.jpg\" alt=\"student_status\"></p>\n<p>那么，学生优惠走起~<br><img src=\"media/student_premium.jpg\" alt=\"student_premium\"></p>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>不要怕麻烦，多和客服沟通，很多事情都可以想方法解决。<br>祝好运。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"../images/studen_email_apply.jpg","popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"如何获取 Apple Music 学生会员资格","path":"4038172740/","eyeCatchImage":"../images/studen_email_apply.jpg","excerpt":"<center>既然Apple给了这个优惠政策，作为新时代大学生的我们为什么不薅这块羊毛呢？</center>","date":{"_isAMomentObject":true,"_i":"2017-05-21T13:58:47.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-05-21T13:58:47.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"收集","tags":["Music"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"我要你","description":"<center>我多么多么希望， 一曼没有死去。</center>","abbrlink":528950990,"date":"2016-11-30T07:30:00.000Z","_content":"我多么多么希望， 一曼没有死去。\n\n在看《驴得水》之前，我以为从来没有这样一个女子， 像一曼这样落落大方，乐观开朗。多想认识这样的人，聪慧美丽，会唱《我要你》，会体贴顾人。可是后来的故事，多让人心痛。也许美好的人多会让人嫉妒，被人咒骂，被剪去秀丽的卷发。\n这是部好真实的故事，让我深深喜欢上张一曼这个角色，也喜欢上她唱的这首情歌。\n\n> 都怪这月色 撩人的疯狂\n\n以后，做像她一样的人，落落大方，乐观开朗。","source":"_posts/我要你.md","raw":"---\ntitle: 我要你\ntags:\n  - 驴得水\ncategories: 阅读\ndescription: <center>我多么多么希望， 一曼没有死去。</center>\nabbrlink: 528950990\ndate: 2016-11-30 15:30:00\n---\n我多么多么希望， 一曼没有死去。\n\n在看《驴得水》之前，我以为从来没有这样一个女子， 像一曼这样落落大方，乐观开朗。多想认识这样的人，聪慧美丽，会唱《我要你》，会体贴顾人。可是后来的故事，多让人心痛。也许美好的人多会让人嫉妒，被人咒骂，被剪去秀丽的卷发。\n这是部好真实的故事，让我深深喜欢上张一曼这个角色，也喜欢上她唱的这首情歌。\n\n> 都怪这月色 撩人的疯狂\n\n以后，做像她一样的人，落落大方，乐观开朗。","slug":"我要你","published":1,"updated":"2022-09-13T14:24:02.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eool001ynq5480sq9mzx","content":"<p>我多么多么希望， 一曼没有死去。</p>\n<p>在看《驴得水》之前，我以为从来没有这样一个女子， 像一曼这样落落大方，乐观开朗。多想认识这样的人，聪慧美丽，会唱《我要你》，会体贴顾人。可是后来的故事，多让人心痛。也许美好的人多会让人嫉妒，被人咒骂，被剪去秀丽的卷发。<br>这是部好真实的故事，让我深深喜欢上张一曼这个角色，也喜欢上她唱的这首情歌。</p>\n<blockquote>\n<p>都怪这月色 撩人的疯狂</p>\n</blockquote>\n<p>以后，做像她一样的人，落落大方，乐观开朗。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我多么多么希望， 一曼没有死去。</p>\n<p>在看《驴得水》之前，我以为从来没有这样一个女子， 像一曼这样落落大方，乐观开朗。多想认识这样的人，聪慧美丽，会唱《我要你》，会体贴顾人。可是后来的故事，多让人心痛。也许美好的人多会让人嫉妒，被人咒骂，被剪去秀丽的卷发。<br>这是部好真实的故事，让我深深喜欢上张一曼这个角色，也喜欢上她唱的这首情歌。</p>\n<blockquote>\n<p>都怪这月色 撩人的疯狂</p>\n</blockquote>\n<p>以后，做像她一样的人，落落大方，乐观开朗。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"我要你","path":"528950990/","eyeCatchImage":null,"excerpt":"<center>我多么多么希望， 一曼没有死去。</center>","date":{"_isAMomentObject":true,"_i":"2016-11-30T07:30:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2016-11-30T07:30:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"阅读","tags":["驴得水"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"我是如何用 Feed43 为教务处网站制作 RSS 的","description":"<center>教务处网站当年有正方制作，并未考虑到 RSS 源。\t每次去查阅通知都需要主动打开网站检索，于是试图利用 Feed43 将通知被动的发送到个人邮箱中。</center>","abbrlink":492101974,"date":"2016-11-27T03:23:00.000Z","_content":"教务处网站当年有正方制作，并未考虑到RSS源。每次去查阅通知都需要主动打开网站检索，于是试图利用Feed43将通知被动的发送到个人邮箱中。\n\n## 使用Feed43\n打开 feed43.com，点击创建 feed。输入教务处通知网站网址。成功读取。\n\n![](http://upload-images.jianshu.io/upload_images/2348575-d7d3475a55dc734d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 代码抓取\n第二步时，我遇到困难。教务处网站代码的div标签过多，尝试多次都无法抓取到内容。\n于是使用教务处首页网址进行读取。重新改写检索规则。\n\n![](http://upload-images.jianshu.io/upload_images/2348575-000e0d42c61a1899.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n成功。\n\n![](http://upload-images.jianshu.io/upload_images/2348575-78d9e679281a5200.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\t\n## 检索代码：\n```html\n<li><a href=\"{%}\" target=\"_blank\" title={%}>{%}</a>\n<span class=\"time\">{%}\n{%}</span>{*}\n</li>{*}\n```\n\n## RSS如下：\n[http://feed43.com/wust-notify.xml](http://feed43.com/wust-notify.xml)\n\n\n2016年11月27日 12:28:05\n自己做的rss源还是有很多不足的地方，过段时间再来修改。\n大神勿喷。\n\n2016年11月30日 23:19:39 \n新检索代码测试成功。可以推送到邮箱。","source":"_posts/我是如何用Feed43为教务处网站制作RSS的.md","raw":"---\ntitle: 我是如何用 Feed43 为教务处网站制作 RSS 的\ntags:\n  - RSS\ncategories: 开发\ndescription: \"<center>教务处网站当年有正方制作，并未考虑到 RSS 源。\\t每次去查阅通知都需要主动打开网站检索，于是试图利用 Feed43 将通知被动的发送到个人邮箱中。</center>\"\nabbrlink: 492101974\ndate: 2016-11-27 11:23:00\n---\n教务处网站当年有正方制作，并未考虑到RSS源。每次去查阅通知都需要主动打开网站检索，于是试图利用Feed43将通知被动的发送到个人邮箱中。\n\n## 使用Feed43\n打开 feed43.com，点击创建 feed。输入教务处通知网站网址。成功读取。\n\n![](http://upload-images.jianshu.io/upload_images/2348575-d7d3475a55dc734d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 代码抓取\n第二步时，我遇到困难。教务处网站代码的div标签过多，尝试多次都无法抓取到内容。\n于是使用教务处首页网址进行读取。重新改写检索规则。\n\n![](http://upload-images.jianshu.io/upload_images/2348575-000e0d42c61a1899.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n成功。\n\n![](http://upload-images.jianshu.io/upload_images/2348575-78d9e679281a5200.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\t\n## 检索代码：\n```html\n<li><a href=\"{%}\" target=\"_blank\" title={%}>{%}</a>\n<span class=\"time\">{%}\n{%}</span>{*}\n</li>{*}\n```\n\n## RSS如下：\n[http://feed43.com/wust-notify.xml](http://feed43.com/wust-notify.xml)\n\n\n2016年11月27日 12:28:05\n自己做的rss源还是有很多不足的地方，过段时间再来修改。\n大神勿喷。\n\n2016年11月30日 23:19:39 \n新检索代码测试成功。可以推送到邮箱。","slug":"我是如何用Feed43为教务处网站制作RSS的","published":1,"updated":"2022-09-13T14:24:02.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eool0021nq5443fjc2rh","content":"<p>教务处网站当年有正方制作，并未考虑到RSS源。每次去查阅通知都需要主动打开网站检索，于是试图利用Feed43将通知被动的发送到个人邮箱中。</p>\n<h2 id=\"使用Feed43\"><a href=\"#使用Feed43\" class=\"headerlink\" title=\"使用Feed43\"></a>使用Feed43</h2><p>打开 feed43.com，点击创建 feed。输入教务处通知网站网址。成功读取。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2348575-d7d3475a55dc734d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<h2 id=\"代码抓取\"><a href=\"#代码抓取\" class=\"headerlink\" title=\"代码抓取\"></a>代码抓取</h2><p>第二步时，我遇到困难。教务处网站代码的div标签过多，尝试多次都无法抓取到内容。<br>于是使用教务处首页网址进行读取。重新改写检索规则。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2348575-000e0d42c61a1899.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>成功。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2348575-78d9e679281a5200.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<h2 id=\"检索代码：\"><a href=\"#检索代码：\" class=\"headerlink\" title=\"检索代码：\"></a>检索代码：</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;%&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&#123;%&#125;</span>&gt;</span>&#123;%&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;time&quot;</span>&gt;</span>&#123;%&#125;</span><br><span class=\"line\">&#123;%&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;*&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>&#123;*&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"RSS如下：\"><a href=\"#RSS如下：\" class=\"headerlink\" title=\"RSS如下：\"></a>RSS如下：</h2><p><a href=\"http://feed43.com/wust-notify.xml\">http://feed43.com/wust-notify.xml</a></p>\n<p>2016年11月27日 12:28:05<br>自己做的rss源还是有很多不足的地方，过段时间再来修改。<br>大神勿喷。</p>\n<p>2016年11月30日 23:19:39<br>新检索代码测试成功。可以推送到邮箱。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>教务处网站当年有正方制作，并未考虑到RSS源。每次去查阅通知都需要主动打开网站检索，于是试图利用Feed43将通知被动的发送到个人邮箱中。</p>\n<h2 id=\"使用Feed43\"><a href=\"#使用Feed43\" class=\"headerlink\" title=\"使用Feed43\"></a>使用Feed43</h2><p>打开 feed43.com，点击创建 feed。输入教务处通知网站网址。成功读取。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2348575-d7d3475a55dc734d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<h2 id=\"代码抓取\"><a href=\"#代码抓取\" class=\"headerlink\" title=\"代码抓取\"></a>代码抓取</h2><p>第二步时，我遇到困难。教务处网站代码的div标签过多，尝试多次都无法抓取到内容。<br>于是使用教务处首页网址进行读取。重新改写检索规则。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2348575-000e0d42c61a1899.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>成功。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2348575-78d9e679281a5200.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<h2 id=\"检索代码：\"><a href=\"#检索代码：\" class=\"headerlink\" title=\"检索代码：\"></a>检索代码：</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;%&#125;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&#123;%&#125;</span>&gt;</span>&#123;%&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;time&quot;</span>&gt;</span>&#123;%&#125;</span><br><span class=\"line\">&#123;%&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;*&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>&#123;*&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"RSS如下：\"><a href=\"#RSS如下：\" class=\"headerlink\" title=\"RSS如下：\"></a>RSS如下：</h2><p><a href=\"http://feed43.com/wust-notify.xml\">http://feed43.com/wust-notify.xml</a></p>\n<p>2016年11月27日 12:28:05<br>自己做的rss源还是有很多不足的地方，过段时间再来修改。<br>大神勿喷。</p>\n<p>2016年11月30日 23:19:39<br>新检索代码测试成功。可以推送到邮箱。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"http://upload-images.jianshu.io/upload_images/2348575-d7d3475a55dc734d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"我是如何用 Feed43 为教务处网站制作 RSS 的","path":"492101974/","eyeCatchImage":"http://upload-images.jianshu.io/upload_images/2348575-d7d3475a55dc734d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","excerpt":"<center>教务处网站当年有正方制作，并未考虑到 RSS 源。\t每次去查阅通知都需要主动打开网站检索，于是试图利用 Feed43 将通知被动的发送到个人邮箱中。</center>","date":{"_isAMomentObject":true,"_i":"2016-11-27T03:23:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2016-11-27T03:23:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["RSS"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"读《断舍离》","description":"<center>读完《断舍离》后，我立刻扔掉了那一沓沓和前任有关的物品。</center>","abbrlink":1857977170,"date":"2017-01-19T14:16:00.000Z","_content":"# 断舍离是什么  \n拆开来看：\n1. 物品要用才有价值，是为断。\n2. 物品在此时、当下，应当出现在需要它的地方，是为舍。\n3. 物品处于恰当的位置，才能展现美感，是为离。\n\n# 为什么要断舍离\n举个简单的例子，你有一部１６Ｇ的iPhone，舍去４Ｇ的系统内存，你如何分配剩下的空间？是的，我曾经就遇到这样的情况，社交软件好几款，游戏动不动就吃掉千兆容量，想录个视频更是要左思右想去增大空闲容量。再比如人成长了这么久，总会有些纪念的物品放在房间里。日积月累下来，也很占位置吧。断舍离也不仅仅是在有限的空间内对物品进行取舍，也是一个整理收拾的方法。\n\n断舍离的精髓就是先诊断出物品从你身上掠去了多少能量，然后通过筛选物品的行动，实现自我完善。\n\n# 如何断舍离\n\n《断舍离》这本书中讲了好几个方法，让我印象最深刻的是“以自我为轴心”。在拿到一个物品时，不应该思考“这件物品还需不需要还用不用”，而应该思考“我需不需要我还用不用”。物品原本就因为“我”而产生它的使用价值。因此，人应该为主语，去考虑物品的去留。\n\n选择物品的窍门，不是“能不能用”，而是“我要不要用”，这一点必须铭刻在心。\n\n另一个方法则是“试着使用高于自我形象的物品”。在挑选时，尝试那些更美好更有意思的东西。比如朋友送你一个精致的杯子，不要将它放入橱柜存放着，试着在每一次喝水喝牛奶使用它。即使一开始会很担心它摔落，但你会慢慢发现，自己的心情会渐渐愉悦起来，周围的环境也会令人舒畅起来。物品与人息息相关，近朱者赤大概就是这个意思吧。\n\n物品是一面能映照出真实的自己的镜子，直面物品，就是直面真实的自己。\n","source":"_posts/读《断舍离》.md","raw":"---\ntitle: 读《断舍离》\ntags:\n  - 断舍离\ncategories: 阅读\ndescription: <center>读完《断舍离》后，我立刻扔掉了那一沓沓和前任有关的物品。</center>\nabbrlink: 1857977170\ndate: 2017-01-19 22:16:00\n---\n# 断舍离是什么  \n拆开来看：\n1. 物品要用才有价值，是为断。\n2. 物品在此时、当下，应当出现在需要它的地方，是为舍。\n3. 物品处于恰当的位置，才能展现美感，是为离。\n\n# 为什么要断舍离\n举个简单的例子，你有一部１６Ｇ的iPhone，舍去４Ｇ的系统内存，你如何分配剩下的空间？是的，我曾经就遇到这样的情况，社交软件好几款，游戏动不动就吃掉千兆容量，想录个视频更是要左思右想去增大空闲容量。再比如人成长了这么久，总会有些纪念的物品放在房间里。日积月累下来，也很占位置吧。断舍离也不仅仅是在有限的空间内对物品进行取舍，也是一个整理收拾的方法。\n\n断舍离的精髓就是先诊断出物品从你身上掠去了多少能量，然后通过筛选物品的行动，实现自我完善。\n\n# 如何断舍离\n\n《断舍离》这本书中讲了好几个方法，让我印象最深刻的是“以自我为轴心”。在拿到一个物品时，不应该思考“这件物品还需不需要还用不用”，而应该思考“我需不需要我还用不用”。物品原本就因为“我”而产生它的使用价值。因此，人应该为主语，去考虑物品的去留。\n\n选择物品的窍门，不是“能不能用”，而是“我要不要用”，这一点必须铭刻在心。\n\n另一个方法则是“试着使用高于自我形象的物品”。在挑选时，尝试那些更美好更有意思的东西。比如朋友送你一个精致的杯子，不要将它放入橱柜存放着，试着在每一次喝水喝牛奶使用它。即使一开始会很担心它摔落，但你会慢慢发现，自己的心情会渐渐愉悦起来，周围的环境也会令人舒畅起来。物品与人息息相关，近朱者赤大概就是这个意思吧。\n\n物品是一面能映照出真实的自己的镜子，直面物品，就是直面真实的自己。\n","slug":"读《断舍离》","published":1,"updated":"2022-09-13T14:24:02.955Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooo003gnq54cjrw6d6p","content":"<h1 id=\"断舍离是什么\"><a href=\"#断舍离是什么\" class=\"headerlink\" title=\"断舍离是什么\"></a>断舍离是什么</h1><p>拆开来看：</p>\n<ol>\n<li>物品要用才有价值，是为断。</li>\n<li>物品在此时、当下，应当出现在需要它的地方，是为舍。</li>\n<li>物品处于恰当的位置，才能展现美感，是为离。</li>\n</ol>\n<h1 id=\"为什么要断舍离\"><a href=\"#为什么要断舍离\" class=\"headerlink\" title=\"为什么要断舍离\"></a>为什么要断舍离</h1><p>举个简单的例子，你有一部１６Ｇ的iPhone，舍去４Ｇ的系统内存，你如何分配剩下的空间？是的，我曾经就遇到这样的情况，社交软件好几款，游戏动不动就吃掉千兆容量，想录个视频更是要左思右想去增大空闲容量。再比如人成长了这么久，总会有些纪念的物品放在房间里。日积月累下来，也很占位置吧。断舍离也不仅仅是在有限的空间内对物品进行取舍，也是一个整理收拾的方法。</p>\n<p>断舍离的精髓就是先诊断出物品从你身上掠去了多少能量，然后通过筛选物品的行动，实现自我完善。</p>\n<h1 id=\"如何断舍离\"><a href=\"#如何断舍离\" class=\"headerlink\" title=\"如何断舍离\"></a>如何断舍离</h1><p>《断舍离》这本书中讲了好几个方法，让我印象最深刻的是“以自我为轴心”。在拿到一个物品时，不应该思考“这件物品还需不需要还用不用”，而应该思考“我需不需要我还用不用”。物品原本就因为“我”而产生它的使用价值。因此，人应该为主语，去考虑物品的去留。</p>\n<p>选择物品的窍门，不是“能不能用”，而是“我要不要用”，这一点必须铭刻在心。</p>\n<p>另一个方法则是“试着使用高于自我形象的物品”。在挑选时，尝试那些更美好更有意思的东西。比如朋友送你一个精致的杯子，不要将它放入橱柜存放着，试着在每一次喝水喝牛奶使用它。即使一开始会很担心它摔落，但你会慢慢发现，自己的心情会渐渐愉悦起来，周围的环境也会令人舒畅起来。物品与人息息相关，近朱者赤大概就是这个意思吧。</p>\n<p>物品是一面能映照出真实的自己的镜子，直面物品，就是直面真实的自己。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"断舍离是什么\"><a href=\"#断舍离是什么\" class=\"headerlink\" title=\"断舍离是什么\"></a>断舍离是什么</h1><p>拆开来看：</p>\n<ol>\n<li>物品要用才有价值，是为断。</li>\n<li>物品在此时、当下，应当出现在需要它的地方，是为舍。</li>\n<li>物品处于恰当的位置，才能展现美感，是为离。</li>\n</ol>\n<h1 id=\"为什么要断舍离\"><a href=\"#为什么要断舍离\" class=\"headerlink\" title=\"为什么要断舍离\"></a>为什么要断舍离</h1><p>举个简单的例子，你有一部１６Ｇ的iPhone，舍去４Ｇ的系统内存，你如何分配剩下的空间？是的，我曾经就遇到这样的情况，社交软件好几款，游戏动不动就吃掉千兆容量，想录个视频更是要左思右想去增大空闲容量。再比如人成长了这么久，总会有些纪念的物品放在房间里。日积月累下来，也很占位置吧。断舍离也不仅仅是在有限的空间内对物品进行取舍，也是一个整理收拾的方法。</p>\n<p>断舍离的精髓就是先诊断出物品从你身上掠去了多少能量，然后通过筛选物品的行动，实现自我完善。</p>\n<h1 id=\"如何断舍离\"><a href=\"#如何断舍离\" class=\"headerlink\" title=\"如何断舍离\"></a>如何断舍离</h1><p>《断舍离》这本书中讲了好几个方法，让我印象最深刻的是“以自我为轴心”。在拿到一个物品时，不应该思考“这件物品还需不需要还用不用”，而应该思考“我需不需要我还用不用”。物品原本就因为“我”而产生它的使用价值。因此，人应该为主语，去考虑物品的去留。</p>\n<p>选择物品的窍门，不是“能不能用”，而是“我要不要用”，这一点必须铭刻在心。</p>\n<p>另一个方法则是“试着使用高于自我形象的物品”。在挑选时，尝试那些更美好更有意思的东西。比如朋友送你一个精致的杯子，不要将它放入橱柜存放着，试着在每一次喝水喝牛奶使用它。即使一开始会很担心它摔落，但你会慢慢发现，自己的心情会渐渐愉悦起来，周围的环境也会令人舒畅起来。物品与人息息相关，近朱者赤大概就是这个意思吧。</p>\n<p>物品是一面能映照出真实的自己的镜子，直面物品，就是直面真实的自己。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"读《断舍离》","path":"1857977170/","eyeCatchImage":null,"excerpt":"<center>读完《断舍离》后，我立刻扔掉了那一沓沓和前任有关的物品。</center>","date":{"_isAMomentObject":true,"_i":"2017-01-19T14:16:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-01-19T14:16:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"阅读","tags":["断舍离"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"我过得一点也不快乐","description":"<center>大概有五年了。我过得不快乐。</center>","abbrlink":2864306879,"date":"2016-11-28T14:20:00.000Z","_content":"大概有五年了。我过得不快乐。\n\n活得人模狗样，从没有遵循自己内心真正的想法。\n\n好多次，在床上辗转反侧的时候，会想一死了之。\n\n我曾幼稚地认为我获得了真正的感情，可是现在呢？各奔东西，不闻不问。\n\n我想我早已得了抑郁症。我也不知道还有什么东西能让我快乐。\n\n这三个月啊，真是我生命中最难过的日子了。\n\n希望以后的我再回头看看的时候，轻轻地笑一下就好了。\n\n希望以后的你，过得快乐。\n\n也希望以后的她，和你一样快乐。\n\n我有什么好伤心的。我连二十岁还不到，不必为这些小事牵肠挂肚。\n\n他们没做错什么，错的是我。\n\n我太小气了，太自私了，太吝啬了。\n\n接下来是该好好看看高尔基写的《人性的弱点》了。\n\n没什么大不了的呀，总会过去的。\n\n是不是？\n\n写于 2016 年 11 月 28 日","source":"_posts/我过得一点也不快乐.md","raw":"---\ntitle: 我过得一点也不快乐\ntags:\n  - 自白\ncategories: 沉思\ndescription: <center>大概有五年了。我过得不快乐。</center>\nabbrlink: 2864306879\ndate: 2016-11-28 22:20:00\n---\n大概有五年了。我过得不快乐。\n\n活得人模狗样，从没有遵循自己内心真正的想法。\n\n好多次，在床上辗转反侧的时候，会想一死了之。\n\n我曾幼稚地认为我获得了真正的感情，可是现在呢？各奔东西，不闻不问。\n\n我想我早已得了抑郁症。我也不知道还有什么东西能让我快乐。\n\n这三个月啊，真是我生命中最难过的日子了。\n\n希望以后的我再回头看看的时候，轻轻地笑一下就好了。\n\n希望以后的你，过得快乐。\n\n也希望以后的她，和你一样快乐。\n\n我有什么好伤心的。我连二十岁还不到，不必为这些小事牵肠挂肚。\n\n他们没做错什么，错的是我。\n\n我太小气了，太自私了，太吝啬了。\n\n接下来是该好好看看高尔基写的《人性的弱点》了。\n\n没什么大不了的呀，总会过去的。\n\n是不是？\n\n写于 2016 年 11 月 28 日","slug":"我过得一点也不快乐","published":1,"updated":"2022-09-13T14:24:02.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooo003hnq541ud31e5d","content":"<p>大概有五年了。我过得不快乐。</p>\n<p>活得人模狗样，从没有遵循自己内心真正的想法。</p>\n<p>好多次，在床上辗转反侧的时候，会想一死了之。</p>\n<p>我曾幼稚地认为我获得了真正的感情，可是现在呢？各奔东西，不闻不问。</p>\n<p>我想我早已得了抑郁症。我也不知道还有什么东西能让我快乐。</p>\n<p>这三个月啊，真是我生命中最难过的日子了。</p>\n<p>希望以后的我再回头看看的时候，轻轻地笑一下就好了。</p>\n<p>希望以后的你，过得快乐。</p>\n<p>也希望以后的她，和你一样快乐。</p>\n<p>我有什么好伤心的。我连二十岁还不到，不必为这些小事牵肠挂肚。</p>\n<p>他们没做错什么，错的是我。</p>\n<p>我太小气了，太自私了，太吝啬了。</p>\n<p>接下来是该好好看看高尔基写的《人性的弱点》了。</p>\n<p>没什么大不了的呀，总会过去的。</p>\n<p>是不是？</p>\n<p>写于 2016 年 11 月 28 日</p>\n","site":{"data":{}},"excerpt":"","more":"<p>大概有五年了。我过得不快乐。</p>\n<p>活得人模狗样，从没有遵循自己内心真正的想法。</p>\n<p>好多次，在床上辗转反侧的时候，会想一死了之。</p>\n<p>我曾幼稚地认为我获得了真正的感情，可是现在呢？各奔东西，不闻不问。</p>\n<p>我想我早已得了抑郁症。我也不知道还有什么东西能让我快乐。</p>\n<p>这三个月啊，真是我生命中最难过的日子了。</p>\n<p>希望以后的我再回头看看的时候，轻轻地笑一下就好了。</p>\n<p>希望以后的你，过得快乐。</p>\n<p>也希望以后的她，和你一样快乐。</p>\n<p>我有什么好伤心的。我连二十岁还不到，不必为这些小事牵肠挂肚。</p>\n<p>他们没做错什么，错的是我。</p>\n<p>我太小气了，太自私了，太吝啬了。</p>\n<p>接下来是该好好看看高尔基写的《人性的弱点》了。</p>\n<p>没什么大不了的呀，总会过去的。</p>\n<p>是不是？</p>\n<p>写于 2016 年 11 月 28 日</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"我过得一点也不快乐","path":"2864306879/","eyeCatchImage":null,"excerpt":"<center>大概有五年了。我过得不快乐。</center>","date":{"_isAMomentObject":true,"_i":"2016-11-28T14:20:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2016-11-28T14:20:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"沉思","tags":["自白"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"走向开源之路","description":"<center>加入开源社区，贡献自己的一份力量，让世界变得更美好。</center>","abbrlink":2465020203,"date":"2022-01-24T02:23:49.000Z","_content":"\n# 首先你需要：\n\n1. 畅通的网络环境；\n2. 一个Github账号；\n3. 本机安装Git软件；\n4. Don't panic !\n\n# Fork 项目\n\n首先，在Github仓库Fork他人项目。然后复制自己仓库的项目地址（HTTP或SSH都可），在本地Clone下来。\n\n如果项目文件体积大，可使用如下方式：\n\n1. （推荐）在浏览器上安装Github加速插件，使用其中的镜像地址； Clone完代码，建议执行`git remote set-url origin 自己的Github项目地址` 。\n2. （推荐）在gitee.com网站，导入Github项目，使用gitee的项目地址进行Clone； Clone完代码，建议执行`git remote set-url origin 自己的Github项目地址` 。\n3. 使用命令 `git clone --depth=1` 进行Clone最新一次的提交代码，之后使用`git pull --unshallow` 。\n\n# 同步项目代码\n\n1. 添加上游项目地址： `git remote add upstream 原始项目地址` 查看远程地址： `git remote -v` 查看远程分支： `git branch -r`\n2. 拉取最新代码： `git fetch upstream`\n3. 合并最新代码： 本地代码**无修改**：`git rebase upstream/master` 本地代码**有修改**：`git merge upstream/master`\n4. 将最新代码上传到自己的远程仓库： `git push`\n\n# 构建项目（使用Maven）\n\n确保编译版本和项目建议版本相一致。\n\n执行命令`mvn clean install` ，或命令`mvn clean install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true -Dcheckstyle.skip=true -e` 跳过测试等过程。\n\n如果某个模块构建失败，多次执行`mvn install` 即可。\n\n\n\n\n\n参考链接：\n\n[Soul 之 PR 提交流程 · 语雀](https://www.yuque.com/docs/share/eedab2ad-6486-4690-b048-d9bb9a6b4a4a)\n\n[如何从小白成长为 Apache Committer?](http://wuchong.me/blog/2019/02/12/how-to-become-apache-committer/)\n\n","source":"_posts/走向开源之路.md","raw":"---\ntitle: 走向开源之路\ntags:\n  - 开源\ndescription: <center>加入开源社区，贡献自己的一份力量，让世界变得更美好。</center>\ncategories: 开发\nabbrlink: 2465020203\ndate: 2022-01-24 10:23:49\n---\n\n# 首先你需要：\n\n1. 畅通的网络环境；\n2. 一个Github账号；\n3. 本机安装Git软件；\n4. Don't panic !\n\n# Fork 项目\n\n首先，在Github仓库Fork他人项目。然后复制自己仓库的项目地址（HTTP或SSH都可），在本地Clone下来。\n\n如果项目文件体积大，可使用如下方式：\n\n1. （推荐）在浏览器上安装Github加速插件，使用其中的镜像地址； Clone完代码，建议执行`git remote set-url origin 自己的Github项目地址` 。\n2. （推荐）在gitee.com网站，导入Github项目，使用gitee的项目地址进行Clone； Clone完代码，建议执行`git remote set-url origin 自己的Github项目地址` 。\n3. 使用命令 `git clone --depth=1` 进行Clone最新一次的提交代码，之后使用`git pull --unshallow` 。\n\n# 同步项目代码\n\n1. 添加上游项目地址： `git remote add upstream 原始项目地址` 查看远程地址： `git remote -v` 查看远程分支： `git branch -r`\n2. 拉取最新代码： `git fetch upstream`\n3. 合并最新代码： 本地代码**无修改**：`git rebase upstream/master` 本地代码**有修改**：`git merge upstream/master`\n4. 将最新代码上传到自己的远程仓库： `git push`\n\n# 构建项目（使用Maven）\n\n确保编译版本和项目建议版本相一致。\n\n执行命令`mvn clean install` ，或命令`mvn clean install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true -Dcheckstyle.skip=true -e` 跳过测试等过程。\n\n如果某个模块构建失败，多次执行`mvn install` 即可。\n\n\n\n\n\n参考链接：\n\n[Soul 之 PR 提交流程 · 语雀](https://www.yuque.com/docs/share/eedab2ad-6486-4690-b048-d9bb9a6b4a4a)\n\n[如何从小白成长为 Apache Committer?](http://wuchong.me/blog/2019/02/12/how-to-become-apache-committer/)\n\n","slug":"走向开源之路","published":1,"updated":"2022-09-13T14:17:39.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eooo003jnq548gig24hs","content":"<h1 id=\"首先你需要：\"><a href=\"#首先你需要：\" class=\"headerlink\" title=\"首先你需要：\"></a>首先你需要：</h1><ol>\n<li>畅通的网络环境；</li>\n<li>一个Github账号；</li>\n<li>本机安装Git软件；</li>\n<li>Don’t panic !</li>\n</ol>\n<h1 id=\"Fork-项目\"><a href=\"#Fork-项目\" class=\"headerlink\" title=\"Fork 项目\"></a>Fork 项目</h1><p>首先，在Github仓库Fork他人项目。然后复制自己仓库的项目地址（HTTP或SSH都可），在本地Clone下来。</p>\n<p>如果项目文件体积大，可使用如下方式：</p>\n<ol>\n<li>（推荐）在浏览器上安装Github加速插件，使用其中的镜像地址； Clone完代码，建议执行<code>git remote set-url origin 自己的Github项目地址</code> 。</li>\n<li>（推荐）在gitee.com网站，导入Github项目，使用gitee的项目地址进行Clone； Clone完代码，建议执行<code>git remote set-url origin 自己的Github项目地址</code> 。</li>\n<li>使用命令 <code>git clone --depth=1</code> 进行Clone最新一次的提交代码，之后使用<code>git pull --unshallow</code> 。</li>\n</ol>\n<h1 id=\"同步项目代码\"><a href=\"#同步项目代码\" class=\"headerlink\" title=\"同步项目代码\"></a>同步项目代码</h1><ol>\n<li>添加上游项目地址： <code>git remote add upstream 原始项目地址</code> 查看远程地址： <code>git remote -v</code> 查看远程分支： <code>git branch -r</code></li>\n<li>拉取最新代码： <code>git fetch upstream</code></li>\n<li>合并最新代码： 本地代码<strong>无修改</strong>：<code>git rebase upstream/master</code> 本地代码<strong>有修改</strong>：<code>git merge upstream/master</code></li>\n<li>将最新代码上传到自己的远程仓库： <code>git push</code></li>\n</ol>\n<h1 id=\"构建项目（使用Maven）\"><a href=\"#构建项目（使用Maven）\" class=\"headerlink\" title=\"构建项目（使用Maven）\"></a>构建项目（使用Maven）</h1><p>确保编译版本和项目建议版本相一致。</p>\n<p>执行命令<code>mvn clean install</code> ，或命令<code>mvn clean install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true -Dcheckstyle.skip=true -e</code> 跳过测试等过程。</p>\n<p>如果某个模块构建失败，多次执行<code>mvn install</code> 即可。</p>\n<p>参考链接：</p>\n<p><a href=\"https://www.yuque.com/docs/share/eedab2ad-6486-4690-b048-d9bb9a6b4a4a\">Soul 之 PR 提交流程 · 语雀</a></p>\n<p><a href=\"http://wuchong.me/blog/2019/02/12/how-to-become-apache-committer/\">如何从小白成长为 Apache Committer?</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"首先你需要：\"><a href=\"#首先你需要：\" class=\"headerlink\" title=\"首先你需要：\"></a>首先你需要：</h1><ol>\n<li>畅通的网络环境；</li>\n<li>一个Github账号；</li>\n<li>本机安装Git软件；</li>\n<li>Don’t panic !</li>\n</ol>\n<h1 id=\"Fork-项目\"><a href=\"#Fork-项目\" class=\"headerlink\" title=\"Fork 项目\"></a>Fork 项目</h1><p>首先，在Github仓库Fork他人项目。然后复制自己仓库的项目地址（HTTP或SSH都可），在本地Clone下来。</p>\n<p>如果项目文件体积大，可使用如下方式：</p>\n<ol>\n<li>（推荐）在浏览器上安装Github加速插件，使用其中的镜像地址； Clone完代码，建议执行<code>git remote set-url origin 自己的Github项目地址</code> 。</li>\n<li>（推荐）在gitee.com网站，导入Github项目，使用gitee的项目地址进行Clone； Clone完代码，建议执行<code>git remote set-url origin 自己的Github项目地址</code> 。</li>\n<li>使用命令 <code>git clone --depth=1</code> 进行Clone最新一次的提交代码，之后使用<code>git pull --unshallow</code> 。</li>\n</ol>\n<h1 id=\"同步项目代码\"><a href=\"#同步项目代码\" class=\"headerlink\" title=\"同步项目代码\"></a>同步项目代码</h1><ol>\n<li>添加上游项目地址： <code>git remote add upstream 原始项目地址</code> 查看远程地址： <code>git remote -v</code> 查看远程分支： <code>git branch -r</code></li>\n<li>拉取最新代码： <code>git fetch upstream</code></li>\n<li>合并最新代码： 本地代码<strong>无修改</strong>：<code>git rebase upstream/master</code> 本地代码<strong>有修改</strong>：<code>git merge upstream/master</code></li>\n<li>将最新代码上传到自己的远程仓库： <code>git push</code></li>\n</ol>\n<h1 id=\"构建项目（使用Maven）\"><a href=\"#构建项目（使用Maven）\" class=\"headerlink\" title=\"构建项目（使用Maven）\"></a>构建项目（使用Maven）</h1><p>确保编译版本和项目建议版本相一致。</p>\n<p>执行命令<code>mvn clean install</code> ，或命令<code>mvn clean install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true -Dcheckstyle.skip=true -e</code> 跳过测试等过程。</p>\n<p>如果某个模块构建失败，多次执行<code>mvn install</code> 即可。</p>\n<p>参考链接：</p>\n<p><a href=\"https://www.yuque.com/docs/share/eedab2ad-6486-4690-b048-d9bb9a6b4a4a\">Soul 之 PR 提交流程 · 语雀</a></p>\n<p><a href=\"http://wuchong.me/blog/2019/02/12/how-to-become-apache-committer/\">如何从小白成长为 Apache Committer?</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:17:39 GMT+0800 (China Standard Time)","title":"走向开源之路","path":"2465020203/","eyeCatchImage":null,"excerpt":"<center>加入开源社区，贡献自己的一份力量，让世界变得更美好。</center>","date":{"_isAMomentObject":true,"_i":"2022-01-24T02:23:49.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-01-24T02:23:49.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["开源"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"白茶花，红茶花","description":"<center>今天正好是茶花女逝世170周年，对了，《茶花女》是来自于真实的故事。</center>","abbrlink":3287404792,"date":"2017-02-03T15:10:00.000Z","_content":"今天正好是茶花女逝世 170 周年，对了，《茶花女》是来自于真实的故事。\n\n阿尔丰西娜·普莱西就是茶花女的原型，命途多舛，二十三岁即离开了人世。小仲马深深地爱着，对她的离去痛苦不堪。阿尔丰西娜“既是一个纯洁无瑕的贞女，又是一个彻头彻尾的娼妇”。\n\n读到后来玛格丽特死之前写给阿尔芒的日记，里面才解释了离开他的原因。玛格丽特多么善良，她不愿阿尔芒的妹妹失去美好的婚姻，不愿玷污他家高贵的姓氏。可又多么无奈，不知真情的阿尔芒却和另一个情妇一起折磨一起羞辱她。这样痛苦地死去，又没能见到心上人一眼，恐怕谁也承受不了吧。\n\n看到玛格丽特和阿尔芒在布吉瓦尔这个美丽的乡村生活时，会觉得爱情多美纯洁美好，不论债务多么沉重，感情就该有感情它该有的幸福模样。看到玛格丽特一句话没留下就离开阿尔芒，以为她仍旧视金钱为重，把这种可能会消失的爱情当后患，可是后来她病倒了，一边思恋着阿尔芒，一边拖着病写下日记，为的就是希望在她死后，阿尔芒会原谅她的离开，她的不辞而去。正是做出这样的牺牲，玛格丽特才是真正的爱着他。爱情多伟大，但在现实面前，却又那么不堪一击。\n\n谨以此纪念茶花女。\n\n2017 年 2 月 3 日","source":"_posts/白茶花，红茶花.md","raw":"---\ntitle: 白茶花，红茶花\ntags:\n  - 茶花女\ncategories: 阅读\ndescription: <center>今天正好是茶花女逝世170周年，对了，《茶花女》是来自于真实的故事。</center>\nabbrlink: 3287404792\ndate: 2017-02-03 23:10:00\n---\n今天正好是茶花女逝世 170 周年，对了，《茶花女》是来自于真实的故事。\n\n阿尔丰西娜·普莱西就是茶花女的原型，命途多舛，二十三岁即离开了人世。小仲马深深地爱着，对她的离去痛苦不堪。阿尔丰西娜“既是一个纯洁无瑕的贞女，又是一个彻头彻尾的娼妇”。\n\n读到后来玛格丽特死之前写给阿尔芒的日记，里面才解释了离开他的原因。玛格丽特多么善良，她不愿阿尔芒的妹妹失去美好的婚姻，不愿玷污他家高贵的姓氏。可又多么无奈，不知真情的阿尔芒却和另一个情妇一起折磨一起羞辱她。这样痛苦地死去，又没能见到心上人一眼，恐怕谁也承受不了吧。\n\n看到玛格丽特和阿尔芒在布吉瓦尔这个美丽的乡村生活时，会觉得爱情多美纯洁美好，不论债务多么沉重，感情就该有感情它该有的幸福模样。看到玛格丽特一句话没留下就离开阿尔芒，以为她仍旧视金钱为重，把这种可能会消失的爱情当后患，可是后来她病倒了，一边思恋着阿尔芒，一边拖着病写下日记，为的就是希望在她死后，阿尔芒会原谅她的离开，她的不辞而去。正是做出这样的牺牲，玛格丽特才是真正的爱着他。爱情多伟大，但在现实面前，却又那么不堪一击。\n\n谨以此纪念茶花女。\n\n2017 年 2 月 3 日","slug":"白茶花，红茶花","published":1,"updated":"2022-09-14T08:40:18.011Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eoop003lnq547fava562","content":"<p>今天正好是茶花女逝世 170 周年，对了，《茶花女》是来自于真实的故事。</p>\n<p>阿尔丰西娜·普莱西就是茶花女的原型，命途多舛，二十三岁即离开了人世。小仲马深深地爱着，对她的离去痛苦不堪。阿尔丰西娜“既是一个纯洁无瑕的贞女，又是一个彻头彻尾的娼妇”。</p>\n<p>读到后来玛格丽特死之前写给阿尔芒的日记，里面才解释了离开他的原因。玛格丽特多么善良，她不愿阿尔芒的妹妹失去美好的婚姻，不愿玷污他家高贵的姓氏。可又多么无奈，不知真情的阿尔芒却和另一个情妇一起折磨一起羞辱她。这样痛苦地死去，又没能见到心上人一眼，恐怕谁也承受不了吧。</p>\n<p>看到玛格丽特和阿尔芒在布吉瓦尔这个美丽的乡村生活时，会觉得爱情多美纯洁美好，不论债务多么沉重，感情就该有感情它该有的幸福模样。看到玛格丽特一句话没留下就离开阿尔芒，以为她仍旧视金钱为重，把这种可能会消失的爱情当后患，可是后来她病倒了，一边思恋着阿尔芒，一边拖着病写下日记，为的就是希望在她死后，阿尔芒会原谅她的离开，她的不辞而去。正是做出这样的牺牲，玛格丽特才是真正的爱着他。爱情多伟大，但在现实面前，却又那么不堪一击。</p>\n<p>谨以此纪念茶花女。</p>\n<p>2017 年 2 月 3 日</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天正好是茶花女逝世 170 周年，对了，《茶花女》是来自于真实的故事。</p>\n<p>阿尔丰西娜·普莱西就是茶花女的原型，命途多舛，二十三岁即离开了人世。小仲马深深地爱着，对她的离去痛苦不堪。阿尔丰西娜“既是一个纯洁无瑕的贞女，又是一个彻头彻尾的娼妇”。</p>\n<p>读到后来玛格丽特死之前写给阿尔芒的日记，里面才解释了离开他的原因。玛格丽特多么善良，她不愿阿尔芒的妹妹失去美好的婚姻，不愿玷污他家高贵的姓氏。可又多么无奈，不知真情的阿尔芒却和另一个情妇一起折磨一起羞辱她。这样痛苦地死去，又没能见到心上人一眼，恐怕谁也承受不了吧。</p>\n<p>看到玛格丽特和阿尔芒在布吉瓦尔这个美丽的乡村生活时，会觉得爱情多美纯洁美好，不论债务多么沉重，感情就该有感情它该有的幸福模样。看到玛格丽特一句话没留下就离开阿尔芒，以为她仍旧视金钱为重，把这种可能会消失的爱情当后患，可是后来她病倒了，一边思恋着阿尔芒，一边拖着病写下日记，为的就是希望在她死后，阿尔芒会原谅她的离开，她的不辞而去。正是做出这样的牺牲，玛格丽特才是真正的爱着他。爱情多伟大，但在现实面前，却又那么不堪一击。</p>\n<p>谨以此纪念茶花女。</p>\n<p>2017 年 2 月 3 日</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Wed Sep 14 2022 16:40:18 GMT+0800 (China Standard Time)","title":"白茶花，红茶花","path":"3287404792/","eyeCatchImage":null,"excerpt":"<center>今天正好是茶花女逝世170周年，对了，《茶花女》是来自于真实的故事。</center>","date":{"_isAMomentObject":true,"_i":"2017-02-03T15:10:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-02-03T15:10:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"阅读","tags":["茶花女"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"最小生成树和 Prim 算法","description":"<center>RoadToRender 开发</center>","abbrlink":3564408376,"date":"2017-11-30T07:30:00.000Z","_content":"### 最小生成树\n最小生成树[1]（也称最小权重生成树）是一副连通加权无向图中一棵权值最小的生成树。\n\n### Prim算法\nPrim算法（普里姆算法），图论中的一种算法，可在加权连通图里搜索最小生成树。意即由此算法搜索到的边子集所构成的树中，不但包括了连通图里的所有顶点（英语：Vertex (graph theory)），且其所有边的权值之和亦为最小。该算法于1930年由捷克数学家沃伊捷赫·亚尔尼克（英语：Vojtěch Jarník）发现；并在1957年由美国计算机科学家罗伯特·普里姆（英语：Robert C. Prim）独立发现；1959年，艾兹格·迪科斯彻再次发现了该算法。因此，在某些场合，普里姆算法又被称为DJP算法、亚尔尼克算法或普里姆－亚尔尼克算法[2]。\n\n算法实现过程：以图的顶点为基础，从一个初始顶点开始，寻找触达其他顶点权值最小的边，并把该顶点加入到已触达顶点的集合中。当全部顶点都加入到集合时，算法的工作就完成了。Prim算法的本质，是基于贪心算法。\n\n算法实现代码[3]：\n```java\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Prim {\n\n    final static int INF = Integer.MAX_VALUE;\n\n    public static int[] prim(int[][] matrix) {\n        List<Integer> reachedVertextList = new ArrayList<>();\n\n        //选择顶点0为初始顶点，放入已触达顶点集合中\n        reachedVertextList.add(0);\n\n        //创建最小生成树数组，首元素设为-1\n        int[] parents = new int[matrix.length];\n        parents[0] = -1;\n\n        //边的权重\n        int weight;\n        //源顶点下标\n        int fromIndex = 0;\n        //目标顶点下标\n        int toIndex = 0;\n\n        while (reachedVertextList.size() < matrix.length) {\n            weight = INF;\n\n            //在已触达的顶点中，寻找到达新顶点的最短边\n            for (Integer vertexIndex : reachedVertextList) {\n                for (int i = 0; i < matrix.length; i++) {\n                    if (!reachedVertextList.contains(i)) {\n                        if (matrix[vertexIndex][i] < weight) {\n                            fromIndex = vertexIndex;\n                            toIndex = i;\n                            weight = matrix[vertexIndex][i];\n                        }\n                    }\n                }\n            }\n            //确定了权值最小的目标顶点，放入已触达顶点集合\n            reachedVertextList.add(toIndex);\n            //放入最小生成树的数组\n            parents[toIndex] = fromIndex;\n        }\n\n        return parents;\n    }\n\n\n    public static void main(String[] args) {\n        int[][] matrix = new int[][]{\n                {0, 4, 3, INF, INF},\n                {4, 0, 8, 7, INF},\n                {3, 8, 0, INF, 1},\n                {INF, 7, INF, 0, 9},\n                {INF, INF, 1, 9, 0},\n        };\n\n        int[] parents = prim(matrix);\n        System.out.println(Arrays.toString(parents));\n    }\n}\n\n```\n\n[1]: https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91\n[2]: https://www.cnblogs.com/biyeymyhjob/archive/2012/07/30/2615542.html\n[3]: https://mp.weixin.qq.com/s/x7JT7re7W7IgNCgMf1kJTA","source":"_posts/最小生成树和 Prim 算法.md","raw":"---\ntitle: 最小生成树和 Prim 算法\ntags:\n  - 算法\ncategories: 开发\ndescription: <center>RoadToRender 开发</center>\nabbrlink: 3564408376\ndate: 2017-11-30 15:30:00\n---\n### 最小生成树\n最小生成树[1]（也称最小权重生成树）是一副连通加权无向图中一棵权值最小的生成树。\n\n### Prim算法\nPrim算法（普里姆算法），图论中的一种算法，可在加权连通图里搜索最小生成树。意即由此算法搜索到的边子集所构成的树中，不但包括了连通图里的所有顶点（英语：Vertex (graph theory)），且其所有边的权值之和亦为最小。该算法于1930年由捷克数学家沃伊捷赫·亚尔尼克（英语：Vojtěch Jarník）发现；并在1957年由美国计算机科学家罗伯特·普里姆（英语：Robert C. Prim）独立发现；1959年，艾兹格·迪科斯彻再次发现了该算法。因此，在某些场合，普里姆算法又被称为DJP算法、亚尔尼克算法或普里姆－亚尔尼克算法[2]。\n\n算法实现过程：以图的顶点为基础，从一个初始顶点开始，寻找触达其他顶点权值最小的边，并把该顶点加入到已触达顶点的集合中。当全部顶点都加入到集合时，算法的工作就完成了。Prim算法的本质，是基于贪心算法。\n\n算法实现代码[3]：\n```java\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Prim {\n\n    final static int INF = Integer.MAX_VALUE;\n\n    public static int[] prim(int[][] matrix) {\n        List<Integer> reachedVertextList = new ArrayList<>();\n\n        //选择顶点0为初始顶点，放入已触达顶点集合中\n        reachedVertextList.add(0);\n\n        //创建最小生成树数组，首元素设为-1\n        int[] parents = new int[matrix.length];\n        parents[0] = -1;\n\n        //边的权重\n        int weight;\n        //源顶点下标\n        int fromIndex = 0;\n        //目标顶点下标\n        int toIndex = 0;\n\n        while (reachedVertextList.size() < matrix.length) {\n            weight = INF;\n\n            //在已触达的顶点中，寻找到达新顶点的最短边\n            for (Integer vertexIndex : reachedVertextList) {\n                for (int i = 0; i < matrix.length; i++) {\n                    if (!reachedVertextList.contains(i)) {\n                        if (matrix[vertexIndex][i] < weight) {\n                            fromIndex = vertexIndex;\n                            toIndex = i;\n                            weight = matrix[vertexIndex][i];\n                        }\n                    }\n                }\n            }\n            //确定了权值最小的目标顶点，放入已触达顶点集合\n            reachedVertextList.add(toIndex);\n            //放入最小生成树的数组\n            parents[toIndex] = fromIndex;\n        }\n\n        return parents;\n    }\n\n\n    public static void main(String[] args) {\n        int[][] matrix = new int[][]{\n                {0, 4, 3, INF, INF},\n                {4, 0, 8, 7, INF},\n                {3, 8, 0, INF, 1},\n                {INF, 7, INF, 0, 9},\n                {INF, INF, 1, 9, 0},\n        };\n\n        int[] parents = prim(matrix);\n        System.out.println(Arrays.toString(parents));\n    }\n}\n\n```\n\n[1]: https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91\n[2]: https://www.cnblogs.com/biyeymyhjob/archive/2012/07/30/2615542.html\n[3]: https://mp.weixin.qq.com/s/x7JT7re7W7IgNCgMf1kJTA","slug":"最小生成树和 Prim 算法","published":1,"updated":"2022-09-13T14:24:02.956Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl924eoop003nnq54b11lhu0c","content":"<h3 id=\"最小生成树\"><a href=\"#最小生成树\" class=\"headerlink\" title=\"最小生成树\"></a>最小生成树</h3><p>最小生成树<a href=\"https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91\">1</a>（也称最小权重生成树）是一副连通加权无向图中一棵权值最小的生成树。</p>\n<h3 id=\"Prim算法\"><a href=\"#Prim算法\" class=\"headerlink\" title=\"Prim算法\"></a>Prim算法</h3><p>Prim算法（普里姆算法），图论中的一种算法，可在加权连通图里搜索最小生成树。意即由此算法搜索到的边子集所构成的树中，不但包括了连通图里的所有顶点（英语：Vertex (graph theory)），且其所有边的权值之和亦为最小。该算法于1930年由捷克数学家沃伊捷赫·亚尔尼克（英语：Vojtěch Jarník）发现；并在1957年由美国计算机科学家罗伯特·普里姆（英语：Robert C. Prim）独立发现；1959年，艾兹格·迪科斯彻再次发现了该算法。因此，在某些场合，普里姆算法又被称为DJP算法、亚尔尼克算法或普里姆－亚尔尼克算法<a href=\"https://www.cnblogs.com/biyeymyhjob/archive/2012/07/30/2615542.html\">2</a>。</p>\n<p>算法实现过程：以图的顶点为基础，从一个初始顶点开始，寻找触达其他顶点权值最小的边，并把该顶点加入到已触达顶点的集合中。当全部顶点都加入到集合时，算法的工作就完成了。Prim算法的本质，是基于贪心算法。</p>\n<p>算法实现代码<a href=\"https://mp.weixin.qq.com/s/x7JT7re7W7IgNCgMf1kJTA\">3</a>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Prim</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> INF = Integer.MAX_VALUE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] prim(<span class=\"keyword\">int</span>[][] matrix) &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; reachedVertextList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//选择顶点0为初始顶点，放入已触达顶点集合中</span></span><br><span class=\"line\">        reachedVertextList.add(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建最小生成树数组，首元素设为-1</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] parents = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[matrix.length];</span><br><span class=\"line\">        parents[<span class=\"number\">0</span>] = -<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//边的权重</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> weight;</span><br><span class=\"line\">        <span class=\"comment\">//源顶点下标</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> fromIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//目标顶点下标</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> toIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (reachedVertextList.size() &lt; matrix.length) &#123;</span><br><span class=\"line\">            weight = INF;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//在已触达的顶点中，寻找到达新顶点的最短边</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Integer vertexIndex : reachedVertextList) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; matrix.length; i++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!reachedVertextList.contains(i)) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (matrix[vertexIndex][i] &lt; weight) &#123;</span><br><span class=\"line\">                            fromIndex = vertexIndex;</span><br><span class=\"line\">                            toIndex = i;</span><br><span class=\"line\">                            weight = matrix[vertexIndex][i];</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//确定了权值最小的目标顶点，放入已触达顶点集合</span></span><br><span class=\"line\">            reachedVertextList.add(toIndex);</span><br><span class=\"line\">            <span class=\"comment\">//放入最小生成树的数组</span></span><br><span class=\"line\">            parents[toIndex] = fromIndex;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> parents;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] matrix = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[][]&#123;</span><br><span class=\"line\">                &#123;<span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, INF, INF&#125;,</span><br><span class=\"line\">                &#123;<span class=\"number\">4</span>, <span class=\"number\">0</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, INF&#125;,</span><br><span class=\"line\">                &#123;<span class=\"number\">3</span>, <span class=\"number\">8</span>, <span class=\"number\">0</span>, INF, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">                &#123;INF, <span class=\"number\">7</span>, INF, <span class=\"number\">0</span>, <span class=\"number\">9</span>&#125;,</span><br><span class=\"line\">                &#123;INF, INF, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] parents = prim(matrix);</span><br><span class=\"line\">        System.out.println(Arrays.toString(parents));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"最小生成树\"><a href=\"#最小生成树\" class=\"headerlink\" title=\"最小生成树\"></a>最小生成树</h3><p>最小生成树<a href=\"https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91\">1</a>（也称最小权重生成树）是一副连通加权无向图中一棵权值最小的生成树。</p>\n<h3 id=\"Prim算法\"><a href=\"#Prim算法\" class=\"headerlink\" title=\"Prim算法\"></a>Prim算法</h3><p>Prim算法（普里姆算法），图论中的一种算法，可在加权连通图里搜索最小生成树。意即由此算法搜索到的边子集所构成的树中，不但包括了连通图里的所有顶点（英语：Vertex (graph theory)），且其所有边的权值之和亦为最小。该算法于1930年由捷克数学家沃伊捷赫·亚尔尼克（英语：Vojtěch Jarník）发现；并在1957年由美国计算机科学家罗伯特·普里姆（英语：Robert C. Prim）独立发现；1959年，艾兹格·迪科斯彻再次发现了该算法。因此，在某些场合，普里姆算法又被称为DJP算法、亚尔尼克算法或普里姆－亚尔尼克算法<a href=\"https://www.cnblogs.com/biyeymyhjob/archive/2012/07/30/2615542.html\">2</a>。</p>\n<p>算法实现过程：以图的顶点为基础，从一个初始顶点开始，寻找触达其他顶点权值最小的边，并把该顶点加入到已触达顶点的集合中。当全部顶点都加入到集合时，算法的工作就完成了。Prim算法的本质，是基于贪心算法。</p>\n<p>算法实现代码<a href=\"https://mp.weixin.qq.com/s/x7JT7re7W7IgNCgMf1kJTA\">3</a>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Prim</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> INF = Integer.MAX_VALUE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] prim(<span class=\"keyword\">int</span>[][] matrix) &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; reachedVertextList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//选择顶点0为初始顶点，放入已触达顶点集合中</span></span><br><span class=\"line\">        reachedVertextList.add(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建最小生成树数组，首元素设为-1</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] parents = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[matrix.length];</span><br><span class=\"line\">        parents[<span class=\"number\">0</span>] = -<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//边的权重</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> weight;</span><br><span class=\"line\">        <span class=\"comment\">//源顶点下标</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> fromIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//目标顶点下标</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> toIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (reachedVertextList.size() &lt; matrix.length) &#123;</span><br><span class=\"line\">            weight = INF;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//在已触达的顶点中，寻找到达新顶点的最短边</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Integer vertexIndex : reachedVertextList) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; matrix.length; i++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!reachedVertextList.contains(i)) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (matrix[vertexIndex][i] &lt; weight) &#123;</span><br><span class=\"line\">                            fromIndex = vertexIndex;</span><br><span class=\"line\">                            toIndex = i;</span><br><span class=\"line\">                            weight = matrix[vertexIndex][i];</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//确定了权值最小的目标顶点，放入已触达顶点集合</span></span><br><span class=\"line\">            reachedVertextList.add(toIndex);</span><br><span class=\"line\">            <span class=\"comment\">//放入最小生成树的数组</span></span><br><span class=\"line\">            parents[toIndex] = fromIndex;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> parents;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] matrix = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[][]&#123;</span><br><span class=\"line\">                &#123;<span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, INF, INF&#125;,</span><br><span class=\"line\">                &#123;<span class=\"number\">4</span>, <span class=\"number\">0</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, INF&#125;,</span><br><span class=\"line\">                &#123;<span class=\"number\">3</span>, <span class=\"number\">8</span>, <span class=\"number\">0</span>, INF, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">                &#123;INF, <span class=\"number\">7</span>, INF, <span class=\"number\">0</span>, <span class=\"number\">9</span>&#125;,</span><br><span class=\"line\">                &#123;INF, INF, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] parents = prim(matrix);</span><br><span class=\"line\">        System.out.println(Arrays.toString(parents));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Sep 13 2022 22:24:02 GMT+0800 (China Standard Time)","title":"最小生成树和 Prim 算法","path":"3564408376/","eyeCatchImage":null,"excerpt":"<center>RoadToRender 开发</center>","date":{"_isAMomentObject":true,"_i":"2017-11-30T07:30:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2017-11-30T07:30:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"开发","tags":["算法"],"internalLinks":[],"keywords":[],"keywordsLength":0}}],"PostAsset":[],"PostCategory":[{"post_id":"cl924eooe0009nq54b4xjd8ua","category_id":"cl924eood0004nq54gem258md","_id":"cl924eoog000fnq54eece1tu5"},{"post_id":"cl924eooa0001nq548kb46g9o","category_id":"cl924eood0004nq54gem258md","_id":"cl924eoog000jnq54gdmo25cu"},{"post_id":"cl924eoof000anq54hn3revpn","category_id":"cl924eood0004nq54gem258md","_id":"cl924eoog000mnq54c0rodc7m"},{"post_id":"cl924eoof000dnq5461tjeayu","category_id":"cl924eood0004nq54gem258md","_id":"cl924eooh000qnq544onwcbq8"},{"post_id":"cl924eooc0003nq54b4yf5cac","category_id":"cl924eoof000bnq54dodmb9g5","_id":"cl924eooh000tnq547zqmeqlq"},{"post_id":"cl924eoof000enq54cyxzh8xe","category_id":"cl924eood0004nq54gem258md","_id":"cl924eooh000wnq54a1qxcss2"},{"post_id":"cl924eoog000inq54922u45id","category_id":"cl924eood0004nq54gem258md","_id":"cl924eooi000znq54ci23c01m"},{"post_id":"cl924eooe0007nq542f24an91","category_id":"cl924eoog000gnq54cu1808ru","_id":"cl924eooi0011nq540vp53p64"},{"post_id":"cl924eoog000lnq54b0bocn62","category_id":"cl924eoof000bnq54dodmb9g5","_id":"cl924eooi0014nq546t825rs2"},{"post_id":"cl924eooh000pnq548h6y1kua","category_id":"cl924eoof000bnq54dodmb9g5","_id":"cl924eooi0016nq54e70wgd7q"},{"post_id":"cl924eooh000snq54hx3bgif3","category_id":"cl924eoof000bnq54dodmb9g5","_id":"cl924eooj0019nq54augwbupx"},{"post_id":"cl924eooh000vnq54940a6l9u","category_id":"cl924eood0004nq54gem258md","_id":"cl924eooj001cnq5427khb357"},{"post_id":"cl924eooh000ynq548a1bfgm6","category_id":"cl924eood0004nq54gem258md","_id":"cl924eooj001gnq54d86m4o2r"},{"post_id":"cl924eooi0010nq54dewo9sbx","category_id":"cl924eoof000bnq54dodmb9g5","_id":"cl924eooj001jnq546u5o24zc"},{"post_id":"cl924eooi0013nq547thd4eor","category_id":"cl924eoog000gnq54cu1808ru","_id":"cl924eook001nnq549xfd0g8g"},{"post_id":"cl924eooi0015nq548ay32l0j","category_id":"cl924eood0004nq54gem258md","_id":"cl924eook001qnq54azjy0z91"},{"post_id":"cl924eooi0018nq54gjntd3vw","category_id":"cl924eood0004nq54gem258md","_id":"cl924eook001tnq541b93epo5"},{"post_id":"cl924eooj001bnq54cqpn12o4","category_id":"cl924eoof000bnq54dodmb9g5","_id":"cl924eool001xnq5468ts1gh4"},{"post_id":"cl924eooj001fnq549jua1ixy","category_id":"cl924eoog000gnq54cu1808ru","_id":"cl924eool001znq54esc9938b"},{"post_id":"cl924eooj001inq548ziz695y","category_id":"cl924eoof000bnq54dodmb9g5","_id":"cl924eool0022nq54cn8z9si6"},{"post_id":"cl924eooj001mnq544edqggll","category_id":"cl924eood0004nq54gem258md","_id":"cl924eool0023nq54br98a6qp"},{"post_id":"cl924eook001pnq548qv2dbz6","category_id":"cl924eoof000bnq54dodmb9g5","_id":"cl924eoom0025nq544yozfkdj"},{"post_id":"cl924eook001snq54g6l2e5sh","category_id":"cl924eoog000gnq54cu1808ru","_id":"cl924eoom0027nq54axk60nch"},{"post_id":"cl924eool001wnq54e7u6gisa","category_id":"cl924eoof000bnq54dodmb9g5","_id":"cl924eoom002anq54372cd2ip"},{"post_id":"cl924eool001ynq5480sq9mzx","category_id":"cl924eoog000gnq54cu1808ru","_id":"cl924eoom002cnq54d52x5mvj"},{"post_id":"cl924eool0021nq5443fjc2rh","category_id":"cl924eood0004nq54gem258md","_id":"cl924eoom002enq546aysbqx8"},{"post_id":"cl924eooo003gnq54cjrw6d6p","category_id":"cl924eoog000gnq54cu1808ru","_id":"cl924eoop003mnq54cqie7jzw"},{"post_id":"cl924eooo003jnq548gig24hs","category_id":"cl924eood0004nq54gem258md","_id":"cl924eoop003qnq54hd3a1psf"},{"post_id":"cl924eoop003lnq547fava562","category_id":"cl924eoog000gnq54cu1808ru","_id":"cl924eoop003rnq546yw79wxv"},{"post_id":"cl924eoop003nnq54b11lhu0c","category_id":"cl924eood0004nq54gem258md","_id":"cl924eoop003tnq54786p59hn"},{"post_id":"cl924eooo003hnq541ud31e5d","category_id":"cl924eoop003knq5472y1h130","_id":"cl924eoop003vnq541vbddlsj"}],"PostTag":[{"post_id":"cl924eooa0001nq548kb46g9o","tag_id":"cl924eooe0005nq54au7y8257","_id":"cl924eoog000knq54d4zeddct"},{"post_id":"cl924eooa0001nq548kb46g9o","tag_id":"cl924eoof000cnq54gcms3kow","_id":"cl924eoog000nnq54h3i1holy"},{"post_id":"cl924eooc0003nq54b4yf5cac","tag_id":"cl924eoog000hnq546bxt3ydj","_id":"cl924eooh000rnq5412kzevrp"},{"post_id":"cl924eooe0007nq542f24an91","tag_id":"cl924eoog000onq548b3tbea2","_id":"cl924eooh000xnq54ei79ej1d"},{"post_id":"cl924eooe0009nq54b4xjd8ua","tag_id":"cl924eooh000unq5420qzgo0z","_id":"cl924eooj001anq543fln3jdu"},{"post_id":"cl924eooe0009nq54b4xjd8ua","tag_id":"cl924eooi0012nq54fqulezzi","_id":"cl924eooj001dnq541wtm0j0o"},{"post_id":"cl924eooi0015nq548ay32l0j","tag_id":"cl924eooh000unq5420qzgo0z","_id":"cl924eooj001hnq54fzpxeeze"},{"post_id":"cl924eooi0018nq54gjntd3vw","tag_id":"cl924eooh000unq5420qzgo0z","_id":"cl924eooj001knq542y62gawx"},{"post_id":"cl924eoof000anq54hn3revpn","tag_id":"cl924eooi0017nq54brtk7z5a","_id":"cl924eook001onq546tsz43sy"},{"post_id":"cl924eoof000anq54hn3revpn","tag_id":"cl924eooj001enq5448j08jvg","_id":"cl924eook001rnq54ekrn4fa8"},{"post_id":"cl924eoof000dnq5461tjeayu","tag_id":"cl924eooj001lnq540cujhym0","_id":"cl924eool001vnq540ly331eu"},{"post_id":"cl924eoof000enq54cyxzh8xe","tag_id":"cl924eooh000unq5420qzgo0z","_id":"cl924eoom0026nq540k431shy"},{"post_id":"cl924eoof000enq54cyxzh8xe","tag_id":"cl924eool0020nq5440isf73c","_id":"cl924eoom0028nq548s0lapxz"},{"post_id":"cl924eoog000inq54922u45id","tag_id":"cl924eooh000unq5420qzgo0z","_id":"cl924eoom002bnq54hvrt6kky"},{"post_id":"cl924eoog000lnq54b0bocn62","tag_id":"cl924eoom0029nq541gly20g3","_id":"cl924eoom002fnq54dl9g8sf1"},{"post_id":"cl924eooh000pnq548h6y1kua","tag_id":"cl924eoom002dnq546ufffqsa","_id":"cl924eoom002hnq54f1jf2vr0"},{"post_id":"cl924eooh000snq54hx3bgif3","tag_id":"cl924eoom002gnq54dwtz6e9r","_id":"cl924eoom002jnq54fdgt5wcz"},{"post_id":"cl924eooh000vnq54940a6l9u","tag_id":"cl924eooh000unq5420qzgo0z","_id":"cl924eoom002lnq54b41735r2"},{"post_id":"cl924eooh000vnq54940a6l9u","tag_id":"cl924eoof000cnq54gcms3kow","_id":"cl924eoom002mnq540amrdgjv"},{"post_id":"cl924eooh000ynq548a1bfgm6","tag_id":"cl924eoom002knq54h20mghpw","_id":"cl924eoom002pnq54b246frxs"},{"post_id":"cl924eooh000ynq548a1bfgm6","tag_id":"cl924eoom002nnq545zrz2dkz","_id":"cl924eoom002qnq54gusy9n56"},{"post_id":"cl924eooi0010nq54dewo9sbx","tag_id":"cl924eoom002onq54gbz7glzq","_id":"cl924eoom002snq5416syhyt9"},{"post_id":"cl924eooi0013nq547thd4eor","tag_id":"cl924eoom002rnq540vbg03v6","_id":"cl924eoom002unq54ao8g42lc"},{"post_id":"cl924eooj001bnq54cqpn12o4","tag_id":"cl924eoom002tnq544s5k2cmw","_id":"cl924eoon002wnq54fwr17994"},{"post_id":"cl924eooj001fnq549jua1ixy","tag_id":"cl924eoom002vnq54f1sj1qxf","_id":"cl924eoon002ynq54fifahhck"},{"post_id":"cl924eooj001inq548ziz695y","tag_id":"cl924eoon002xnq54alv42kd7","_id":"cl924eoon0030nq548i1mduiv"},{"post_id":"cl924eooj001mnq544edqggll","tag_id":"cl924eoon002znq54hjldc66j","_id":"cl924eoon0032nq54b1zwc9ub"},{"post_id":"cl924eook001pnq548qv2dbz6","tag_id":"cl924eoon0031nq542xfx1zsq","_id":"cl924eoon0036nq54d6fa59uy"},{"post_id":"cl924eook001pnq548qv2dbz6","tag_id":"cl924eoon0033nq54dmvk31vc","_id":"cl924eoon0037nq541bsz8dfp"},{"post_id":"cl924eook001pnq548qv2dbz6","tag_id":"cl924eoon0034nq540zih3k24","_id":"cl924eoon0039nq544un514a6"},{"post_id":"cl924eook001snq54g6l2e5sh","tag_id":"cl924eoon0035nq548nlk5m31","_id":"cl924eoon003anq54ailq27f4"},{"post_id":"cl924eool001wnq54e7u6gisa","tag_id":"cl924eoon0038nq54478w9ry8","_id":"cl924eoon003cnq542scgbyct"},{"post_id":"cl924eool001ynq5480sq9mzx","tag_id":"cl924eoon003bnq54d25w2e27","_id":"cl924eoon003enq54124365q5"},{"post_id":"cl924eool0021nq5443fjc2rh","tag_id":"cl924eoon003dnq549w1kat70","_id":"cl924eoon003fnq5407yehbpf"},{"post_id":"cl924eooo003gnq54cjrw6d6p","tag_id":"cl924eooo003inq54hsf2a4qh","_id":"cl924eoop003pnq54fss702sq"},{"post_id":"cl924eooo003hnq541ud31e5d","tag_id":"cl924eoop003onq54drh21wr6","_id":"cl924eoop003unq54f8ks5xsf"},{"post_id":"cl924eooo003jnq548gig24hs","tag_id":"cl924eoop003snq54b8ag4yp7","_id":"cl924eoop003xnq548keg0s16"},{"post_id":"cl924eoop003lnq547fava562","tag_id":"cl924eoop003wnq54eavehkfw","_id":"cl924eooq003znq546mxb8jap"},{"post_id":"cl924eoop003nnq54b11lhu0c","tag_id":"cl924eooq003ynq54438r4ipb","_id":"cl924eooq0040nq543xqx0eki"}],"Tag":[{"name":"Alfred","_id":"cl924eooe0005nq54au7y8257"},{"name":"实战","_id":"cl924eoof000cnq54gcms3kow"},{"name":"DNS","_id":"cl924eoog000hnq546bxt3ydj"},{"name":"清单","_id":"cl924eoog000onq548b3tbea2"},{"name":"Java","_id":"cl924eooh000unq5420qzgo0z"},{"name":"Gray","_id":"cl924eooi0012nq54fqulezzi"},{"name":"gradle","_id":"cl924eooi0017nq54brtk7z5a"},{"name":"mybatis","_id":"cl924eooj001enq5448j08jvg"},{"name":"git","_id":"cl924eooj001lnq540cujhym0"},{"name":"Excel","_id":"cl924eool0020nq5440isf73c"},{"name":"SEO","_id":"cl924eoom0029nq541gly20g3"},{"name":"Chrome","_id":"cl924eoom002dnq546ufffqsa"},{"name":"Emacs","_id":"cl924eoom002gnq54dwtz6e9r"},{"name":"Spring","_id":"cl924eoom002knq54h20mghpw"},{"name":"动态绑定","_id":"cl924eoom002nnq545zrz2dkz"},{"name":"邮箱","_id":"cl924eoom002onq54gbz7glzq"},{"name":"解忧杂货店","_id":"cl924eoom002rnq540vbg03v6"},{"name":"记录","_id":"cl924eoom002tnq544s5k2cmw"},{"name":"皮囊","_id":"cl924eoom002vnq54f1sj1qxf"},{"name":"外包","_id":"cl924eoon002xnq54alv42kd7"},{"name":"hao123","_id":"cl924eoon002znq54hjldc66j"},{"name":"后端","_id":"cl924eoon0031nq542xfx1zsq"},{"name":"学习","_id":"cl924eoon0033nq54dmvk31vc"},{"name":"路径","_id":"cl924eoon0034nq540zih3k24"},{"name":"无声告白","_id":"cl924eoon0035nq548nlk5m31"},{"name":"Music","_id":"cl924eoon0038nq54478w9ry8"},{"name":"驴得水","_id":"cl924eoon003bnq54d25w2e27"},{"name":"RSS","_id":"cl924eoon003dnq549w1kat70"},{"name":"断舍离","_id":"cl924eooo003inq54hsf2a4qh"},{"name":"自白","_id":"cl924eoop003onq54drh21wr6"},{"name":"开源","_id":"cl924eoop003snq54b8ag4yp7"},{"name":"茶花女","_id":"cl924eoop003wnq54eavehkfw"},{"name":"算法","_id":"cl924eooq003ynq54438r4ipb"}]}}